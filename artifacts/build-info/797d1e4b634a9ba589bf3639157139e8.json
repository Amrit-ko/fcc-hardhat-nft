{"id":"797d1e4b634a9ba589bf3639157139e8","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./ConfirmedOwnerWithProposal.sol\";\n\n/**\n * @title The ConfirmedOwner contract\n * @notice A contract with helpers for basic contract ownership.\n */\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\n}\n"},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IOwnable.sol\";\n\n/**\n * @title The ConfirmedOwner contract\n * @notice A contract with helpers for basic contract ownership.\n */\ncontract ConfirmedOwnerWithProposal is IOwnable {\n  address private s_owner;\n  address private s_pendingOwner;\n\n  event OwnershipTransferRequested(address indexed from, address indexed to);\n  event OwnershipTransferred(address indexed from, address indexed to);\n\n  constructor(address newOwner, address pendingOwner) {\n    require(newOwner != address(0), \"Cannot set owner to zero\");\n\n    s_owner = newOwner;\n    if (pendingOwner != address(0)) {\n      _transferOwnership(pendingOwner);\n    }\n  }\n\n  /**\n   * @notice Allows an owner to begin transferring ownership to a new address,\n   * pending.\n   */\n  function transferOwnership(address to) public override onlyOwner {\n    _transferOwnership(to);\n  }\n\n  /**\n   * @notice Allows an ownership transfer to be completed by the recipient.\n   */\n  function acceptOwnership() external override {\n    require(msg.sender == s_pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = s_owner;\n    s_owner = msg.sender;\n    s_pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /**\n   * @notice Get the current owner\n   */\n  function owner() public view override returns (address) {\n    return s_owner;\n  }\n\n  /**\n   * @notice validate, transfer ownership, and emit relevant events\n   */\n  function _transferOwnership(address to) private {\n    require(to != msg.sender, \"Cannot transfer to self\");\n\n    s_pendingOwner = to;\n\n    emit OwnershipTransferRequested(s_owner, to);\n  }\n\n  /**\n   * @notice validate access\n   */\n  function _validateOwnership() internal view {\n    require(msg.sender == s_owner, \"Only callable by owner\");\n  }\n\n  /**\n   * @notice Reverts if called by anyone other than the contract owner.\n   */\n  modifier onlyOwner() {\n    _validateOwnership();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IOwnable {\n  function owner() external returns (address);\n\n  function transferOwnership(address recipient) external;\n\n  function acceptOwnership() external;\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\");\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"},"contracts/RandomIpfsNft.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\";\nimport \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\";\n\nerror RandomIpfsNft__RangeOutOfBounds();\nerror RandomIpfsNft__NeedMoreETHSent();\nerror RandomIpfsNft__TransferFailed();\n\ncontract RandomIpfsNft is VRFConsumerBaseV2, ERC721URIStorage, ConfirmedOwner {\n    //type declarations\n    enum Breed {\n        PUG,\n        SHIBA_UNU,\n        ST_BERNARD\n    }\n\n    //Chainlink VRF variables\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinatorV2;\n    uint64 private immutable i_subscriptionId;\n    bytes32 private immutable i_gasLane;\n    uint32 private immutable i_callbackGasLimit;\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\n    uint32 private constant NUM_WORDS = 1;\n\n    //VRF helpers\n    mapping(uint256 => address) public s_requestIdToSender;\n\n    //NFT variables\n    uint256 public s_tokenCounter;\n    uint256 internal constant MAX_CHANCE_VALUE = 100;\n    string[] internal s_dogTokenUris;\n    uint256 immutable i_mintFee;\n\n    //Events\n    event NftRequested(uint256 indexed requestId, address requester);\n    event NftMinted(Breed dogBreed, address minter);\n\n    constructor(\n        address vrfCoordinatorV2,\n        uint64 subscriptionId,\n        bytes32 gasLane,\n        uint32 callbackGasLimit,\n        string[3] memory dogTokenUris,\n        uint256 mintFee\n    )\n        VRFConsumerBaseV2(vrfCoordinatorV2)\n        ERC721(\"Random IPFS NFT\", \"RIN\")\n        ConfirmedOwner(msg.sender)\n    {\n        i_vrfCoordinatorV2 = VRFCoordinatorV2Interface(vrfCoordinatorV2);\n        i_subscriptionId = subscriptionId;\n        i_gasLane = gasLane;\n        i_callbackGasLimit = callbackGasLimit;\n        s_dogTokenUris = dogTokenUris;\n        i_mintFee = mintFee;\n    }\n\n    function requestNft() public payable returns (uint256 requestId) {\n        if (msg.value < i_mintFee) {\n            revert RandomIpfsNft__NeedMoreETHSent();\n        }\n        requestId = i_vrfCoordinatorV2.requestRandomWords(\n            i_gasLane,\n            i_subscriptionId,\n            REQUEST_CONFIRMATIONS,\n            i_callbackGasLimit,\n            NUM_WORDS\n        );\n        s_requestIdToSender[requestId] = msg.sender;\n        emit NftRequested(requestId, msg.sender);\n    }\n\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\n        address dogOwner = s_requestIdToSender[requestId];\n        uint256 newTokenId = s_tokenCounter;\n        uint256 moddedRng = randomWords[0] % MAX_CHANCE_VALUE;\n        Breed dogBreed = getBreedFromModdedRng(moddedRng);\n        _safeMint(dogOwner, newTokenId);\n        _setTokenURI(newTokenId, s_dogTokenUris[uint256(dogBreed)]);\n        s_tokenCounter++;\n        emit NftMinted(dogBreed, msg.sender);\n    }\n\n    function withdraw() public onlyOwner {\n        uint256 amount = address(this).balance;\n        (bool success, ) = payable(msg.sender).call{value: amount}(\"\");\n        if (!success) {\n            revert RandomIpfsNft__TransferFailed();\n        }\n    }\n\n    function getBreedFromModdedRng(uint256 moddedRng) public pure returns (Breed) {\n        uint256 cumulativeSum = 0;\n        uint256[3] memory chanceArray = getChanceArray();\n        for (uint256 i = 0; i < chanceArray.length; i++) {\n            if (moddedRng >= cumulativeSum && moddedRng < cumulativeSum + chanceArray[i]) {\n                return Breed(i);\n            }\n            cumulativeSum = cumulativeSum + chanceArray[i];\n        }\n        revert RandomIpfsNft__RangeOutOfBounds();\n    }\n\n    function getChanceArray() public pure returns (uint256[3] memory) {\n        return [10, 30, MAX_CHANCE_VALUE];\n    }\n\n    function getMintFee() public view returns (uint256) {\n        return i_mintFee;\n    }\n\n    function getDogTokenUris(uint256 index) public view returns (string memory) {\n        return s_dogTokenUris[index];\n    }\n\n    function getTokenCounter() public view returns (uint256) {\n        return s_tokenCounter;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[95]},"id":96,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFCoordinatorV2Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":95,"linearizedBaseContracts":[95],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"97:267:0","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":12,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:0","nodeType":"FunctionDefinition","parameters":{"id":3,"nodeType":"ParameterList","parameters":[],"src":"392:2:0"},"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12,"src":"418:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4,"name":"uint16","nodeType":"ElementaryTypeName","src":"418:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12,"src":"426:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6,"name":"uint32","nodeType":"ElementaryTypeName","src":"426:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12,"src":"434:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8,"name":"bytes32","nodeType":"ElementaryTypeName","src":"434:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":9,"nodeType":"ArrayTypeName","src":"434:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"417:34:0"},"scope":95,"src":"367:85:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":13,"nodeType":"StructuredDocumentation","src":"456:1511:0","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":28,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"1979:18:0","nodeType":"FunctionDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"mutability":"mutable","name":"keyHash","nameLocation":"2011:7:0","nodeType":"VariableDeclaration","scope":28,"src":"2003:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":17,"mutability":"mutable","name":"subId","nameLocation":"2031:5:0","nodeType":"VariableDeclaration","scope":28,"src":"2024:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16,"name":"uint64","nodeType":"ElementaryTypeName","src":"2024:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":19,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2049:27:0","nodeType":"VariableDeclaration","scope":28,"src":"2042:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":18,"name":"uint16","nodeType":"ElementaryTypeName","src":"2042:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2089:16:0","nodeType":"VariableDeclaration","scope":28,"src":"2082:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":20,"name":"uint32","nodeType":"ElementaryTypeName","src":"2082:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"numWords","nameLocation":"2118:8:0","nodeType":"VariableDeclaration","scope":28,"src":"2111:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":22,"name":"uint32","nodeType":"ElementaryTypeName","src":"2111:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1997:133:0"},"returnParameters":{"id":27,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"mutability":"mutable","name":"requestId","nameLocation":"2157:9:0","nodeType":"VariableDeclaration","scope":28,"src":"2149:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2148:19:0"},"scope":95,"src":"1970:198:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"2172:384:0","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2568:18:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"2586:2:0"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"subId","nameLocation":"2614:5:0","nodeType":"VariableDeclaration","scope":34,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":31,"name":"uint64","nodeType":"ElementaryTypeName","src":"2607:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2606:14:0"},"scope":95,"src":"2559:62:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"2625:381:0","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":49,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3018:15:0","nodeType":"FunctionDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"subId","nameLocation":"3046:5:0","nodeType":"VariableDeclaration","scope":49,"src":"3039:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":36,"name":"uint64","nodeType":"ElementaryTypeName","src":"3039:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3033:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"balance","nameLocation":"3086:7:0","nodeType":"VariableDeclaration","scope":49,"src":"3079:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":39,"name":"uint96","nodeType":"ElementaryTypeName","src":"3079:6:0","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"reqCount","nameLocation":"3102:8:0","nodeType":"VariableDeclaration","scope":49,"src":"3095:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":41,"name":"uint64","nodeType":"ElementaryTypeName","src":"3095:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"owner","nameLocation":"3120:5:0","nodeType":"VariableDeclaration","scope":49,"src":"3112:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"3112:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":47,"mutability":"mutable","name":"consumers","nameLocation":"3144:9:0","nodeType":"VariableDeclaration","scope":49,"src":"3127:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"3127:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":46,"nodeType":"ArrayTypeName","src":"3127:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3078:76:0"},"scope":95,"src":"3009:146:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":50,"nodeType":"StructuredDocumentation","src":"3159:164:0","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":57,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3335:32:0","nodeType":"FunctionDefinition","parameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"subId","nameLocation":"3375:5:0","nodeType":"VariableDeclaration","scope":57,"src":"3368:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":51,"name":"uint64","nodeType":"ElementaryTypeName","src":"3368:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":54,"mutability":"mutable","name":"newOwner","nameLocation":"3390:8:0","nodeType":"VariableDeclaration","scope":57,"src":"3382:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"3382:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3367:32:0"},"returnParameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"3408:0:0"},"scope":95,"src":"3326:83:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":58,"nodeType":"StructuredDocumentation","src":"3413:212:0","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":63,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3637:31:0","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"subId","nameLocation":"3676:5:0","nodeType":"VariableDeclaration","scope":63,"src":"3669:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":59,"name":"uint64","nodeType":"ElementaryTypeName","src":"3669:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3668:14:0"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[],"src":"3691:0:0"},"scope":95,"src":"3628:64:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"3696:170:0","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":71,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3878:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"subId","nameLocation":"3897:5:0","nodeType":"VariableDeclaration","scope":71,"src":"3890:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":65,"name":"uint64","nodeType":"ElementaryTypeName","src":"3890:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"consumer","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3889:32:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"3930:0:0"},"scope":95,"src":"3869:62:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3935:172:0","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":79,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4119:14:0","nodeType":"FunctionDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"subId","nameLocation":"4141:5:0","nodeType":"VariableDeclaration","scope":79,"src":"4134:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":73,"name":"uint64","nodeType":"ElementaryTypeName","src":"4134:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"consumer","nameLocation":"4156:8:0","nodeType":"VariableDeclaration","scope":79,"src":"4148:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"4148:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4133:32:0"},"returnParameters":{"id":78,"nodeType":"ParameterList","parameters":[],"src":"4174:0:0"},"scope":95,"src":"4110:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"4179:140:0","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":87,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4331:18:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"subId","nameLocation":"4357:5:0","nodeType":"VariableDeclaration","scope":87,"src":"4350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":81,"name":"uint64","nodeType":"ElementaryTypeName","src":"4350:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"to","nameLocation":"4372:2:0","nodeType":"VariableDeclaration","scope":87,"src":"4364:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":83,"name":"address","nodeType":"ElementaryTypeName","src":"4364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4349:26:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"4384:0:0"},"scope":95,"src":"4322:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":94,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4690:20:0","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":89,"mutability":"mutable","name":"subId","nameLocation":"4718:5:0","nodeType":"VariableDeclaration","scope":94,"src":"4711:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":88,"name":"uint64","nodeType":"ElementaryTypeName","src":"4711:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4710:14:0"},"returnParameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":94,"src":"4748:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":91,"name":"bool","nodeType":"ElementaryTypeName","src":"4748:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4747:6:0"},"scope":95,"src":"4681:73:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":96,"src":"57:4699:0","usedErrors":[]}],"src":"32:4725:0"},"id":0},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","exportedSymbols":{"ConfirmedOwner":[115],"ConfirmedOwnerWithProposal":[277],"IOwnable":[293]},"id":116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":97,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol","file":"./ConfirmedOwnerWithProposal.sol","id":98,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":116,"sourceUnit":278,"src":"57:42:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":100,"name":"ConfirmedOwnerWithProposal","nameLocations":["239:26:1"],"nodeType":"IdentifierPath","referencedDeclaration":277,"src":"239:26:1"},"id":101,"nodeType":"InheritanceSpecifier","src":"239:26:1"}],"canonicalName":"ConfirmedOwner","contractDependencies":[],"contractKind":"contract","documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"101:110:1","text":" @title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":115,"linearizedBaseContracts":[115,277,293],"name":"ConfirmedOwner","nameLocation":"221:14:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":113,"nodeType":"Block","src":"349:2:1","statements":[]},"id":114,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"327:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"345:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"337:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"337:7:1","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"337:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":111,"kind":"baseConstructorSpecifier","modifierName":{"id":105,"name":"ConfirmedOwnerWithProposal","nameLocations":["300:26:1"],"nodeType":"IdentifierPath","referencedDeclaration":277,"src":"300:26:1"},"nodeType":"ModifierInvocation","src":"300:48:1"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103,"mutability":"mutable","name":"newOwner","nameLocation":"290:8:1","nodeType":"VariableDeclaration","scope":114,"src":"282:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"282:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"281:18:1"},"returnParameters":{"id":112,"nodeType":"ParameterList","parameters":[],"src":"349:0:1"},"scope":115,"src":"270:81:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":116,"src":"212:141:1","usedErrors":[]}],"src":"32:322:1"},"id":1},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol","exportedSymbols":{"ConfirmedOwnerWithProposal":[277],"IOwnable":[293]},"id":278,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":117,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol","file":"../interfaces/IOwnable.sol","id":118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":278,"sourceUnit":294,"src":"57:36:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":120,"name":"IOwnable","nameLocations":["245:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":293,"src":"245:8:2"},"id":121,"nodeType":"InheritanceSpecifier","src":"245:8:2"}],"canonicalName":"ConfirmedOwnerWithProposal","contractDependencies":[],"contractKind":"contract","documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"95:110:2","text":" @title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":277,"linearizedBaseContracts":[277,293],"name":"ConfirmedOwnerWithProposal","nameLocation":"215:26:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":123,"mutability":"mutable","name":"s_owner","nameLocation":"274:7:2","nodeType":"VariableDeclaration","scope":277,"src":"258:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"258:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":125,"mutability":"mutable","name":"s_pendingOwner","nameLocation":"301:14:2","nodeType":"VariableDeclaration","scope":277,"src":"285:30:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"285:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278","id":131,"name":"OwnershipTransferRequested","nameLocation":"326:26:2","nodeType":"EventDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"369:4:2","nodeType":"VariableDeclaration","scope":131,"src":"353:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"353:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"391:2:2","nodeType":"VariableDeclaration","scope":131,"src":"375:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"375:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"352:42:2"},"src":"320:75:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":137,"name":"OwnershipTransferred","nameLocation":"404:20:2","nodeType":"EventDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"441:4:2","nodeType":"VariableDeclaration","scope":137,"src":"425:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":135,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"463:2:2","nodeType":"VariableDeclaration","scope":137,"src":"447:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"447:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"424:42:2"},"src":"398:69:2"},{"body":{"id":170,"nodeType":"Block","src":"523:179:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":145,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"537:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"549:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":146,"name":"address","nodeType":"ElementaryTypeName","src":"549:7:2","typeDescriptions":{}}},"id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"549:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"537:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","id":151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"561:26:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""},"value":"Cannot set owner to zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""}],"id":144,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"529:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"529:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":153,"nodeType":"ExpressionStatement","src":"529:59:2"},{"expression":{"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":154,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"595:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":155,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"605:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"595:18:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":157,"nodeType":"ExpressionStatement","src":"595:18:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":158,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"623:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"639:7:2","typeDescriptions":{}}},"id":162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"623:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":169,"nodeType":"IfStatement","src":"619:79:2","trueBody":{"id":168,"nodeType":"Block","src":"651:47:2","statements":[{"expression":{"arguments":[{"id":165,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"678:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":164,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"659:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"659:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":167,"nodeType":"ExpressionStatement","src":"659:32:2"}]}}]},"id":171,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"491:8:2","nodeType":"VariableDeclaration","scope":171,"src":"483:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"483:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":141,"mutability":"mutable","name":"pendingOwner","nameLocation":"509:12:2","nodeType":"VariableDeclaration","scope":171,"src":"501:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"501:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"482:40:2"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"523:0:2"},"scope":277,"src":"471:231:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[289],"body":{"id":184,"nodeType":"Block","src":"876:33:2","statements":[{"expression":{"arguments":[{"id":181,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"901:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"882:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"882:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":183,"nodeType":"ExpressionStatement","src":"882:22:2"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"706:102:2","text":" @notice Allows an owner to begin transferring ownership to a new address,\n pending."},"functionSelector":"f2fde38b","id":185,"implemented":true,"kind":"function","modifiers":[{"id":178,"kind":"modifierInvocation","modifierName":{"id":177,"name":"onlyOwner","nameLocations":["866:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":276,"src":"866:9:2"},"nodeType":"ModifierInvocation","src":"866:9:2"}],"name":"transferOwnership","nameLocation":"820:17:2","nodeType":"FunctionDefinition","overrides":{"id":176,"nodeType":"OverrideSpecifier","overrides":[],"src":"857:8:2"},"parameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"to","nameLocation":"846:2:2","nodeType":"VariableDeclaration","scope":185,"src":"838:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"838:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"837:12:2"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"876:0:2"},"scope":277,"src":"811:98:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[292],"body":{"id":220,"nodeType":"Block","src":"1046:220:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":191,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1060:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1064:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1060:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":193,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1074:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1060:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1090:24:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""},"value":"Must be proposed owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""}],"id":190,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1052:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1052:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":197,"nodeType":"ExpressionStatement","src":"1052:63:2"},{"assignments":[199],"declarations":[{"constant":false,"id":199,"mutability":"mutable","name":"oldOwner","nameLocation":"1130:8:2","nodeType":"VariableDeclaration","scope":220,"src":"1122:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"1122:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":201,"initialValue":{"id":200,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1141:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1122:26:2"},{"expression":{"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":202,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1154:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":203,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1164:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1164:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1154:20:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":206,"nodeType":"ExpressionStatement","src":"1154:20:2"},{"expression":{"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":207,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1180:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1205:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1197:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"1197:7:2","typeDescriptions":{}}},"id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1197:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1180:27:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":213,"nodeType":"ExpressionStatement","src":"1180:27:2"},{"eventCall":{"arguments":[{"id":215,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"1240:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":216,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1250:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1254:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1250:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":214,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"1219:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":219,"nodeType":"EmitStatement","src":"1214:47:2"}]},"documentation":{"id":186,"nodeType":"StructuredDocumentation","src":"913:85:2","text":" @notice Allows an ownership transfer to be completed by the recipient."},"functionSelector":"79ba5097","id":221,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"1010:15:2","nodeType":"FunctionDefinition","overrides":{"id":188,"nodeType":"OverrideSpecifier","overrides":[],"src":"1037:8:2"},"parameters":{"id":187,"nodeType":"ParameterList","parameters":[],"src":"1025:2:2"},"returnParameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"1046:0:2"},"scope":277,"src":"1001:265:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[284],"body":{"id":230,"nodeType":"Block","src":"1373:25:2","statements":[{"expression":{"id":228,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1386:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":227,"id":229,"nodeType":"Return","src":"1379:14:2"}]},"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"1270:44:2","text":" @notice Get the current owner"},"functionSelector":"8da5cb5b","id":231,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1326:5:2","nodeType":"FunctionDefinition","overrides":{"id":224,"nodeType":"OverrideSpecifier","overrides":[],"src":"1346:8:2"},"parameters":{"id":223,"nodeType":"ParameterList","parameters":[],"src":"1331:2:2"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":231,"src":"1364:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":225,"name":"address","nodeType":"ElementaryTypeName","src":"1364:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1363:9:2"},"scope":277,"src":"1317:81:2","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":254,"nodeType":"Block","src":"1530:140:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":238,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"1544:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":239,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1550:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1554:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1550:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1544:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1562:25:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""},"value":"Cannot transfer to self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""}],"id":237,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1536:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":244,"nodeType":"ExpressionStatement","src":"1536:52:2"},{"expression":{"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":245,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"1595:14:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":246,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"1612:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1595:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":248,"nodeType":"ExpressionStatement","src":"1595:19:2"},{"eventCall":{"arguments":[{"id":250,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1653:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":251,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"1662:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":249,"name":"OwnershipTransferRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"1626:26:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1626:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":253,"nodeType":"EmitStatement","src":"1621:44:2"}]},"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"1402:77:2","text":" @notice validate, transfer ownership, and emit relevant events"},"id":255,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"1491:18:2","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"to","nameLocation":"1518:2:2","nodeType":"VariableDeclaration","scope":255,"src":"1510:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"1510:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1509:12:2"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"1530:0:2"},"scope":277,"src":"1482:188:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":267,"nodeType":"Block","src":"1759:67:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":260,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1773:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1777:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1773:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":262,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1787:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1773:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1796:24:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""},"value":"Only callable by owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""}],"id":259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1765:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1765:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":266,"nodeType":"ExpressionStatement","src":"1765:56:2"}]},"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"1674:38:2","text":" @notice validate access"},"id":268,"implemented":true,"kind":"function","modifiers":[],"name":"_validateOwnership","nameLocation":"1724:18:2","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[],"src":"1742:2:2"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"1759:0:2"},"scope":277,"src":"1715:111:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":275,"nodeType":"Block","src":"1935:38:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":271,"name":"_validateOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"1941:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":273,"nodeType":"ExpressionStatement","src":"1941:20:2"},{"id":274,"nodeType":"PlaceholderStatement","src":"1967:1:2"}]},"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"1830:81:2","text":" @notice Reverts if called by anyone other than the contract owner."},"id":276,"name":"onlyOwner","nameLocation":"1923:9:2","nodeType":"ModifierDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[],"src":"1932:2:2"},"src":"1914:59:2","virtual":false,"visibility":"internal"}],"scope":278,"src":"206:1769:2","usedErrors":[]}],"src":"32:1944:2"},"id":2},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol","exportedSymbols":{"IOwnable":[293]},"id":294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":279,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IOwnable","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":293,"linearizedBaseContracts":[293],"name":"IOwnable","nameLocation":"67:8:3","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8da5cb5b","id":284,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"89:5:3","nodeType":"FunctionDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"94:2:3"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":284,"src":"115:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"115:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"114:9:3"},"scope":293,"src":"80:44:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f2fde38b","id":289,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"137:17:3","nodeType":"FunctionDefinition","parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"recipient","nameLocation":"163:9:3","nodeType":"VariableDeclaration","scope":289,"src":"155:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"155:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"154:19:3"},"returnParameters":{"id":288,"nodeType":"ParameterList","parameters":[],"src":"182:0:3"},"scope":293,"src":"128:55:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"79ba5097","id":292,"implemented":false,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"196:15:3","nodeType":"FunctionDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"211:2:3"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[],"src":"222:0:3"},"scope":293,"src":"187:36:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":294,"src":"57:168:3","usedErrors":[]}],"src":"32:194:3"},"id":3},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[351]},"id":352,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":295,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"57:5275:4","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":351,"linearizedBaseContracts":[351],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:4","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":302,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:4","nodeType":"ErrorDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"have","nameLocation":"5413:4:4","nodeType":"VariableDeclaration","scope":302,"src":"5405:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":300,"mutability":"mutable","name":"want","nameLocation":"5427:4:4","nodeType":"VariableDeclaration","scope":302,"src":"5419:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:4"},"src":"5373:60:4"},{"constant":false,"id":304,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:4","nodeType":"VariableDeclaration","scope":351,"src":"5436:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":314,"nodeType":"Block","src":"5593:43:4","statements":[{"expression":{"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":310,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"5599:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":311,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"5616:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":313,"nodeType":"ExpressionStatement","src":"5599:32:4"}]},"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"5481:72:4","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":315,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:4","nodeType":"VariableDeclaration","scope":315,"src":"5568:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:4"},"returnParameters":{"id":309,"nodeType":"ParameterList","parameters":[],"src":"5593:0:4"},"scope":351,"src":"5556:80:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"5640:686:4","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":324,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:4","nodeType":"FunctionDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:4","nodeType":"VariableDeclaration","scope":324,"src":"6357:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":321,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:4","nodeType":"VariableDeclaration","scope":324,"src":"6376:28:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":320,"nodeType":"ArrayTypeName","src":"6376:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:4"},"returnParameters":{"id":323,"nodeType":"ParameterList","parameters":[],"src":"6422:0:4"},"scope":351,"src":"6329:94:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":349,"nodeType":"Block","src":"6707:167:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":332,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6721:6:4","memberName":"sender","nodeType":"MemberAccess","src":"6717:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":334,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"6731:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"IfStatement","src":"6713:109:4","trueBody":{"id":342,"nodeType":"Block","src":"6747:75:4","statements":[{"errorCall":{"arguments":[{"expression":{"id":337,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6792:6:4","memberName":"sender","nodeType":"MemberAccess","src":"6788:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":339,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"6800:14:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":336,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"6762:25:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6762:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":341,"nodeType":"RevertStatement","src":"6755:60:4"}]}},{"expression":{"arguments":[{"id":345,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6846:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":346,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"6857:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":344,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"6827:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6827:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":348,"nodeType":"ExpressionStatement","src":"6827:42:4"}]},"functionSelector":"1fe543e3","id":350,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:4","nodeType":"FunctionDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:4","nodeType":"VariableDeclaration","scope":350,"src":"6649:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:4","nodeType":"VariableDeclaration","scope":350,"src":"6668:28:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":328,"nodeType":"ArrayTypeName","src":"6668:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:4"},"returnParameters":{"id":331,"nodeType":"ParameterList","parameters":[],"src":"6707:0:4"},"scope":351,"src":"6618:256:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":352,"src":"5333:1543:4","usedErrors":[302]}],"src":"32:6845:4"},"id":4},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[1753],"Context":[1775],"ERC165":[2002],"ERC721":[1167],"IERC165":[2014],"IERC721":[1283],"IERC721Metadata":[1456],"IERC721Receiver":[1301],"Strings":[1978]},"id":1168,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":353,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":354,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1168,"sourceUnit":1284,"src":"58:23:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":355,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1168,"sourceUnit":1302,"src":"82:31:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":356,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1168,"sourceUnit":1457,"src":"114:42:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":357,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1168,"sourceUnit":1754,"src":"157:33:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":358,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1168,"sourceUnit":1776,"src":"191:33:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":359,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1168,"sourceUnit":1979,"src":"225:33:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":360,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1168,"sourceUnit":2003,"src":"259:46:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":362,"name":"Context","nameLocations":["573:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1775,"src":"573:7:5"},"id":363,"nodeType":"InheritanceSpecifier","src":"573:7:5"},{"baseName":{"id":364,"name":"ERC165","nameLocations":["582:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":2002,"src":"582:6:5"},"id":365,"nodeType":"InheritanceSpecifier","src":"582:6:5"},{"baseName":{"id":366,"name":"IERC721","nameLocations":["590:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1283,"src":"590:7:5"},"id":367,"nodeType":"InheritanceSpecifier","src":"590:7:5"},{"baseName":{"id":368,"name":"IERC721Metadata","nameLocations":["599:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1456,"src":"599:15:5"},"id":369,"nodeType":"InheritanceSpecifier","src":"599:15:5"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"307:246:5","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1167,"linearizedBaseContracts":[1167,1456,1283,2002,2014,1775],"name":"ERC721","nameLocation":"563:6:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":372,"libraryName":{"id":370,"name":"Address","nameLocations":["627:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1753,"src":"627:7:5"},"nodeType":"UsingForDirective","src":"621:26:5","typeName":{"id":371,"name":"address","nodeType":"ElementaryTypeName","src":"639:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":375,"libraryName":{"id":373,"name":"Strings","nameLocations":["658:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1978,"src":"658:7:5"},"nodeType":"UsingForDirective","src":"652:26:5","typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":377,"mutability":"mutable","name":"_name","nameLocation":"717:5:5","nodeType":"VariableDeclaration","scope":1167,"src":"702:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":376,"name":"string","nodeType":"ElementaryTypeName","src":"702:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":379,"mutability":"mutable","name":"_symbol","nameLocation":"764:7:5","nodeType":"VariableDeclaration","scope":1167,"src":"749:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":378,"name":"string","nodeType":"ElementaryTypeName","src":"749:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":383,"mutability":"mutable","name":"_owners","nameLocation":"860:7:5","nodeType":"VariableDeclaration","scope":1167,"src":"824:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":382,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":380,"name":"uint256","nodeType":"ElementaryTypeName","src":"832:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"824:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":387,"mutability":"mutable","name":"_balances","nameLocation":"954:9:5","nodeType":"VariableDeclaration","scope":1167,"src":"918:45:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":386,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"926:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"918:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":391,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1055:15:5","nodeType":"VariableDeclaration","scope":1167,"src":"1019:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":390,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"1027:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1019:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"1038:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":397,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1178:18:5","nodeType":"VariableDeclaration","scope":1167,"src":"1125:71:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":396,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1125:44:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":395,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"1152:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1144:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":394,"name":"bool","nodeType":"ElementaryTypeName","src":"1163:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":413,"nodeType":"Block","src":"1372:57:5","statements":[{"expression":{"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":405,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"1382:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":406,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"1390:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1382:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":408,"nodeType":"ExpressionStatement","src":"1382:13:5"},{"expression":{"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":409,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"1405:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":410,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"1415:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1405:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":412,"nodeType":"ExpressionStatement","src":"1405:17:5"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"1203:108:5","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":414,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"name_","nameLocation":"1342:5:5","nodeType":"VariableDeclaration","scope":414,"src":"1328:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":399,"name":"string","nodeType":"ElementaryTypeName","src":"1328:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"symbol_","nameLocation":"1363:7:5","nodeType":"VariableDeclaration","scope":414,"src":"1349:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":401,"name":"string","nodeType":"ElementaryTypeName","src":"1349:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1327:44:5"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"1372:0:5"},"scope":1167,"src":"1316:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2001,2013],"body":{"id":444,"nodeType":"Block","src":"1604:192:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"1633:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":427,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"1653:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1283_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1283_$","typeString":"type(contract IERC721)"}],"id":426,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1648:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1648:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1283","typeString":"type(contract IERC721)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1662:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1648:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1633:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":431,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"1689:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":433,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"1709:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1456_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1456_$","typeString":"type(contract IERC721Metadata)"}],"id":432,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1704:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1704:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1456","typeString":"type(contract IERC721Metadata)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1704:33:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1689:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1633:104:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":440,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"1777:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":438,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1753:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1167_$","typeString":"type(contract super ERC721)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1759:17:5","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2001,"src":"1753:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1753:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1633:156:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":424,"id":443,"nodeType":"Return","src":"1614:175:5"}]},"documentation":{"id":415,"nodeType":"StructuredDocumentation","src":"1435:56:5","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":445,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1505:17:5","nodeType":"FunctionDefinition","overrides":{"id":421,"nodeType":"OverrideSpecifier","overrides":[{"id":419,"name":"ERC165","nameLocations":["1572:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":2002,"src":"1572:6:5"},{"id":420,"name":"IERC165","nameLocations":["1580:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2014,"src":"1580:7:5"}],"src":"1563:25:5"},"parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"interfaceId","nameLocation":"1530:11:5","nodeType":"VariableDeclaration","scope":445,"src":"1523:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":416,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1523:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1522:20:5"},"returnParameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":445,"src":"1598:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":422,"name":"bool","nodeType":"ElementaryTypeName","src":"1598:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1597:6:5"},"scope":1167,"src":"1496:300:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1208],"body":{"id":468,"nodeType":"Block","src":"1936:124:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":455,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1954:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1971:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1963:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"1963:7:5","typeDescriptions":{}}},"id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1963:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1954:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1975:44:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","typeString":"literal_string \"ERC721: balance query for the zero address\""},"value":"ERC721: balance query for the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","typeString":"literal_string \"ERC721: balance query for the zero address\""}],"id":454,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1946:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1946:74:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":463,"nodeType":"ExpressionStatement","src":"1946:74:5"},{"expression":{"baseExpression":{"id":464,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"2037:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":466,"indexExpression":{"id":465,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"2047:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2037:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":453,"id":467,"nodeType":"Return","src":"2030:23:5"}]},"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"1802:48:5","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":469,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1864:9:5","nodeType":"FunctionDefinition","overrides":{"id":450,"nodeType":"OverrideSpecifier","overrides":[],"src":"1909:8:5"},"parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"owner","nameLocation":"1882:5:5","nodeType":"VariableDeclaration","scope":469,"src":"1874:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"1874:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1873:15:5"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":469,"src":"1927:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":451,"name":"uint256","nodeType":"ElementaryTypeName","src":"1927:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1926:9:5"},"scope":1167,"src":"1855:205:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1216],"body":{"id":496,"nodeType":"Block","src":"2198:154:5","statements":[{"assignments":[479],"declarations":[{"constant":false,"id":479,"mutability":"mutable","name":"owner","nameLocation":"2216:5:5","nodeType":"VariableDeclaration","scope":496,"src":"2208:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"2208:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":483,"initialValue":{"baseExpression":{"id":480,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"2224:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":482,"indexExpression":{"id":481,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"2232:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2224:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2208:32:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":485,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"2258:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2275:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2267:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2267:7:5","typeDescriptions":{}}},"id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2267:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2258:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2279:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","typeString":"literal_string \"ERC721: owner query for nonexistent token\""},"value":"ERC721: owner query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","typeString":"literal_string \"ERC721: owner query for nonexistent token\""}],"id":484,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2250:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2250:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2250:73:5"},{"expression":{"id":494,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"2340:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":477,"id":495,"nodeType":"Return","src":"2333:12:5"}]},"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"2066:46:5","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":497,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2126:7:5","nodeType":"FunctionDefinition","overrides":{"id":474,"nodeType":"OverrideSpecifier","overrides":[],"src":"2171:8:5"},"parameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"tokenId","nameLocation":"2142:7:5","nodeType":"VariableDeclaration","scope":497,"src":"2134:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":471,"name":"uint256","nodeType":"ElementaryTypeName","src":"2134:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2133:17:5"},"returnParameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":497,"src":"2189:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"2189:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2188:9:5"},"scope":1167,"src":"2117:235:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1441],"body":{"id":506,"nodeType":"Block","src":"2483:29:5","statements":[{"expression":{"id":504,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"2500:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":503,"id":505,"nodeType":"Return","src":"2493:12:5"}]},"documentation":{"id":498,"nodeType":"StructuredDocumentation","src":"2358:51:5","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2423:4:5","nodeType":"FunctionDefinition","overrides":{"id":500,"nodeType":"OverrideSpecifier","overrides":[],"src":"2450:8:5"},"parameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"2427:2:5"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"2468:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":501,"name":"string","nodeType":"ElementaryTypeName","src":"2468:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2467:15:5"},"scope":1167,"src":"2414:98:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1447],"body":{"id":516,"nodeType":"Block","src":"2647:31:5","statements":[{"expression":{"id":514,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2664:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":513,"id":515,"nodeType":"Return","src":"2657:14:5"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"2518:53:5","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":517,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2585:6:5","nodeType":"FunctionDefinition","overrides":{"id":510,"nodeType":"OverrideSpecifier","overrides":[],"src":"2614:8:5"},"parameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"2591:2:5"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":517,"src":"2632:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":511,"name":"string","nodeType":"ElementaryTypeName","src":"2632:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2631:15:5"},"scope":1167,"src":"2576:102:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1455],"body":{"id":558,"nodeType":"Block","src":"2832:241:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":528,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"2858:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":527,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"2850:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2868:49:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","typeString":"literal_string \"ERC721Metadata: URI query for nonexistent token\""},"value":"ERC721Metadata: URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","typeString":"literal_string \"ERC721Metadata: URI query for nonexistent token\""}],"id":526,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2842:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:76:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":532,"nodeType":"ExpressionStatement","src":"2842:76:5"},{"assignments":[534],"declarations":[{"constant":false,"id":534,"mutability":"mutable","name":"baseURI","nameLocation":"2943:7:5","nodeType":"VariableDeclaration","scope":558,"src":"2929:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":533,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":537,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":535,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"2953:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2953:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2929:34:5"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":540,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2986:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2980:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":538,"name":"bytes","nodeType":"ElementaryTypeName","src":"2980:5:5","typeDescriptions":{}}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2980:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2995:6:5","memberName":"length","nodeType":"MemberAccess","src":"2980:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3004:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2980:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3064:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2980:86:5","trueExpression":{"arguments":[{"arguments":[{"id":549,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"3032:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"3041:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3049:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1860,"src":"3041:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3041:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":547,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3015:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3019:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"3015:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3015:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3008:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":545,"name":"string","nodeType":"ElementaryTypeName","src":"3008:6:5","typeDescriptions":{}}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3008:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":525,"id":557,"nodeType":"Return","src":"2973:93:5"}]},"documentation":{"id":518,"nodeType":"StructuredDocumentation","src":"2684:55:5","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":559,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2753:8:5","nodeType":"FunctionDefinition","overrides":{"id":522,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:5"},"parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"tokenId","nameLocation":"2770:7:5","nodeType":"VariableDeclaration","scope":559,"src":"2762:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":519,"name":"uint256","nodeType":"ElementaryTypeName","src":"2762:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2761:17:5"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":559,"src":"2817:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":523,"name":"string","nodeType":"ElementaryTypeName","src":"2817:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2816:15:5"},"scope":1167,"src":"2744:329:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":567,"nodeType":"Block","src":"3380:26:5","statements":[{"expression":{"hexValue":"","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3397:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":564,"id":566,"nodeType":"Return","src":"3390:9:5"}]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"3079:230:5","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."},"id":568,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3323:8:5","nodeType":"FunctionDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[],"src":"3331:2:5"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":568,"src":"3365:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":562,"name":"string","nodeType":"ElementaryTypeName","src":"3365:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3364:15:5"},"scope":1167,"src":"3314:92:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1244],"body":{"id":610,"nodeType":"Block","src":"3533:331:5","statements":[{"assignments":[578],"declarations":[{"constant":false,"id":578,"mutability":"mutable","name":"owner","nameLocation":"3551:5:5","nodeType":"VariableDeclaration","scope":610,"src":"3543:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"3543:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":583,"initialValue":{"arguments":[{"id":581,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3574:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":579,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3559:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1167_$","typeString":"type(contract ERC721)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3566:7:5","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":497,"src":"3559:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3559:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3543:39:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":585,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"3600:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":586,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"3606:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3600:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3613:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":584,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3592:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3592:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":590,"nodeType":"ExpressionStatement","src":"3592:57:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":592,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"3681:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3681:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"3697:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3681:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":597,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"3723:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":598,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"3730:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3730:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":596,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"3706:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3706:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3681:62:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3757:58:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","typeString":"literal_string \"ERC721: approve caller is not owner nor approved for all\""},"value":"ERC721: approve caller is not owner nor approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","typeString":"literal_string \"ERC721: approve caller is not owner nor approved for all\""}],"id":591,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3660:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3660:165:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"ExpressionStatement","src":"3660:165:5"},{"expression":{"arguments":[{"id":606,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"3845:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":607,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"3849:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":605,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"3836:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3836:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":609,"nodeType":"ExpressionStatement","src":"3836:21:5"}]},"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"3412:46:5","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":611,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3472:7:5","nodeType":"FunctionDefinition","overrides":{"id":575,"nodeType":"OverrideSpecifier","overrides":[],"src":"3524:8:5"},"parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"to","nameLocation":"3488:2:5","nodeType":"VariableDeclaration","scope":611,"src":"3480:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"3480:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"tokenId","nameLocation":"3500:7:5","nodeType":"VariableDeclaration","scope":611,"src":"3492:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3479:29:5"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[],"src":"3533:0:5"},"scope":1167,"src":"3463:401:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1252],"body":{"id":631,"nodeType":"Block","src":"4010:132:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":622,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"4036:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":621,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"4028:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4028:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4046:46:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","typeString":"literal_string \"ERC721: approved query for nonexistent token\""},"value":"ERC721: approved query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","typeString":"literal_string \"ERC721: approved query for nonexistent token\""}],"id":620,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4020:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4020:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"ExpressionStatement","src":"4020:73:5"},{"expression":{"baseExpression":{"id":627,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"4111:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":629,"indexExpression":{"id":628,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"4127:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4111:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":619,"id":630,"nodeType":"Return","src":"4104:31:5"}]},"documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"3870:50:5","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":632,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3934:11:5","nodeType":"FunctionDefinition","overrides":{"id":616,"nodeType":"OverrideSpecifier","overrides":[],"src":"3983:8:5"},"parameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"tokenId","nameLocation":"3954:7:5","nodeType":"VariableDeclaration","scope":632,"src":"3946:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3945:17:5"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":632,"src":"4001:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"4001:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4000:9:5"},"scope":1167,"src":"3925:217:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1260],"body":{"id":665,"nodeType":"Block","src":"4293:206:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":642,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"4311:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":643,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"4323:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4323:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4311:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4337:27:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":641,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4303:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4303:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"ExpressionStatement","src":"4303:62:5"},{"expression":{"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":649,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4376:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":653,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":650,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"4395:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4395:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4376:32:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":654,"indexExpression":{"id":652,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"4409:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4376:42:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":655,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"4421:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4376:53:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":657,"nodeType":"ExpressionStatement","src":"4376:53:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":659,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"4459:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4459:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":661,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"4473:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":662,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"4483:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":658,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"4444:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4444:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":664,"nodeType":"EmitStatement","src":"4439:53:5"}]},"documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"4148:56:5","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":666,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4218:17:5","nodeType":"FunctionDefinition","overrides":{"id":639,"nodeType":"OverrideSpecifier","overrides":[],"src":"4284:8:5"},"parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"operator","nameLocation":"4244:8:5","nodeType":"VariableDeclaration","scope":666,"src":"4236:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":637,"mutability":"mutable","name":"approved","nameLocation":"4259:8:5","nodeType":"VariableDeclaration","scope":666,"src":"4254:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":636,"name":"bool","nodeType":"ElementaryTypeName","src":"4254:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:33:5"},"returnParameters":{"id":640,"nodeType":"ParameterList","parameters":[],"src":"4293:0:5"},"scope":1167,"src":"4209:290:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1270],"body":{"id":683,"nodeType":"Block","src":"4668:59:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":677,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"4685:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":679,"indexExpression":{"id":678,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"4704:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4685:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":681,"indexExpression":{"id":680,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"4711:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4685:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":676,"id":682,"nodeType":"Return","src":"4678:42:5"}]},"documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"4505:55:5","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":684,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4574:16:5","nodeType":"FunctionDefinition","overrides":{"id":673,"nodeType":"OverrideSpecifier","overrides":[],"src":"4644:8:5"},"parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"owner","nameLocation":"4599:5:5","nodeType":"VariableDeclaration","scope":684,"src":"4591:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"4591:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":671,"mutability":"mutable","name":"operator","nameLocation":"4614:8:5","nodeType":"VariableDeclaration","scope":684,"src":"4606:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"4606:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4590:33:5"},"returnParameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":684,"src":"4662:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":674,"name":"bool","nodeType":"ElementaryTypeName","src":"4662:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4661:6:5"},"scope":1167,"src":"4565:162:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1236],"body":{"id":710,"nodeType":"Block","src":"4908:211:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":697,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"4997:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4997:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":699,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"5011:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":696,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"4978:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4978:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5021:51:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""},"value":"ERC721: transfer caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""}],"id":695,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4970:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4970:103:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"4970:103:5"},{"expression":{"arguments":[{"id":705,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"5094:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":706,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"5100:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":707,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"5104:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":704,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"5084:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5084:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":709,"nodeType":"ExpressionStatement","src":"5084:28:5"}]},"documentation":{"id":685,"nodeType":"StructuredDocumentation","src":"4733:51:5","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":711,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4798:12:5","nodeType":"FunctionDefinition","overrides":{"id":693,"nodeType":"OverrideSpecifier","overrides":[],"src":"4899:8:5"},"parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"from","nameLocation":"4828:4:5","nodeType":"VariableDeclaration","scope":711,"src":"4820:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"4820:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":689,"mutability":"mutable","name":"to","nameLocation":"4850:2:5","nodeType":"VariableDeclaration","scope":711,"src":"4842:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"4842:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"tokenId","nameLocation":"4870:7:5","nodeType":"VariableDeclaration","scope":711,"src":"4862:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"4862:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4810:73:5"},"returnParameters":{"id":694,"nodeType":"ParameterList","parameters":[],"src":"4908:0:5"},"scope":1167,"src":"4789:330:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1226],"body":{"id":729,"nodeType":"Block","src":"5308:56:5","statements":[{"expression":{"arguments":[{"id":723,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"5335:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"5341:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"5345:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5354:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":722,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[730,760],"referencedDeclaration":760,"src":"5318:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5318:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":728,"nodeType":"ExpressionStatement","src":"5318:39:5"}]},"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"5125:55:5","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":730,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5194:16:5","nodeType":"FunctionDefinition","overrides":{"id":720,"nodeType":"OverrideSpecifier","overrides":[],"src":"5299:8:5"},"parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"from","nameLocation":"5228:4:5","nodeType":"VariableDeclaration","scope":730,"src":"5220:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"5220:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"to","nameLocation":"5250:2:5","nodeType":"VariableDeclaration","scope":730,"src":"5242:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"5242:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"tokenId","nameLocation":"5270:7:5","nodeType":"VariableDeclaration","scope":730,"src":"5262:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"5262:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:73:5"},"returnParameters":{"id":721,"nodeType":"ParameterList","parameters":[],"src":"5308:0:5"},"scope":1167,"src":"5185:179:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1282],"body":{"id":759,"nodeType":"Block","src":"5581:169:5","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":745,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"5618:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5618:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":747,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"5632:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":744,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"5599:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5599:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564","id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5642:51:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""},"value":"ERC721: transfer caller is not owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","typeString":"literal_string \"ERC721: transfer caller is not owner nor approved\""}],"id":743,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5591:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:103:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":751,"nodeType":"ExpressionStatement","src":"5591:103:5"},{"expression":{"arguments":[{"id":753,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"5718:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":754,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"5724:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"5728:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":756,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"5737:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":752,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"5704:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5704:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"5704:39:5"}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"5370:55:5","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":760,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5439:16:5","nodeType":"FunctionDefinition","overrides":{"id":741,"nodeType":"OverrideSpecifier","overrides":[],"src":"5572:8:5"},"parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"from","nameLocation":"5473:4:5","nodeType":"VariableDeclaration","scope":760,"src":"5465:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":732,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":735,"mutability":"mutable","name":"to","nameLocation":"5495:2:5","nodeType":"VariableDeclaration","scope":760,"src":"5487:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"5487:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"tokenId","nameLocation":"5515:7:5","nodeType":"VariableDeclaration","scope":760,"src":"5507:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"5507:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"_data","nameLocation":"5545:5:5","nodeType":"VariableDeclaration","scope":760,"src":"5532:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":738,"name":"bytes","nodeType":"ElementaryTypeName","src":"5532:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5455:101:5"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[],"src":"5581:0:5"},"scope":1167,"src":"5430:320:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":788,"nodeType":"Block","src":"6753:166:5","statements":[{"expression":{"arguments":[{"id":773,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"6773:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":774,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"6779:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":775,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"6783:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":772,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"6763:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6763:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":777,"nodeType":"ExpressionStatement","src":"6763:28:5"},{"expression":{"arguments":[{"arguments":[{"id":780,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"6832:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":781,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"6838:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":782,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"6842:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":783,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"6851:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":779,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"6809:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6809:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6859:52:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":778,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6801:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6801:111:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":787,"nodeType":"ExpressionStatement","src":"6801:111:5"}]},"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"5756:851:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":789,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6621:13:5","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"from","nameLocation":"6652:4:5","nodeType":"VariableDeclaration","scope":789,"src":"6644:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"6644:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":765,"mutability":"mutable","name":"to","nameLocation":"6674:2:5","nodeType":"VariableDeclaration","scope":789,"src":"6666:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"6666:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"tokenId","nameLocation":"6694:7:5","nodeType":"VariableDeclaration","scope":789,"src":"6686:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":766,"name":"uint256","nodeType":"ElementaryTypeName","src":"6686:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"_data","nameLocation":"6724:5:5","nodeType":"VariableDeclaration","scope":789,"src":"6711:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":768,"name":"bytes","nodeType":"ElementaryTypeName","src":"6711:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6634:101:5"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[],"src":"6753:0:5"},"scope":1167,"src":"6612:307:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":806,"nodeType":"Block","src":"7293:54:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":797,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"7310:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":799,"indexExpression":{"id":798,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"7318:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7310:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7330:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"7330:7:5","typeDescriptions":{}}},"id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7330:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7310:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":796,"id":805,"nodeType":"Return","src":"7303:37:5"}]},"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"6925:292:5","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":807,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7231:7:5","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"tokenId","nameLocation":"7247:7:5","nodeType":"VariableDeclaration","scope":807,"src":"7239:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":791,"name":"uint256","nodeType":"ElementaryTypeName","src":"7239:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7238:17:5"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":807,"src":"7287:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":794,"name":"bool","nodeType":"ElementaryTypeName","src":"7287:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7286:6:5"},"scope":1167,"src":"7222:125:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":847,"nodeType":"Block","src":"7604:245:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":819,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"7630:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":818,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"7622:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7640:46:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""},"value":"ERC721: operator query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","typeString":"literal_string \"ERC721: operator query for nonexistent token\""}],"id":817,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7614:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7614:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"ExpressionStatement","src":"7614:73:5"},{"assignments":[825],"declarations":[{"constant":false,"id":825,"mutability":"mutable","name":"owner","nameLocation":"7705:5:5","nodeType":"VariableDeclaration","scope":847,"src":"7697:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"7697:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":830,"initialValue":{"arguments":[{"id":828,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"7728:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":826,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"7713:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1167_$","typeString":"type(contract ERC721)"}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7720:7:5","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":497,"src":"7713:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7713:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7697:39:5"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"7754:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":832,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"7765:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7754:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":835,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"7786:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":834,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"7774:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7774:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":837,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"7798:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7774:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7754:51:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":841,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"7826:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":842,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"7833:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":840,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"7809:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7809:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7754:87:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":845,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7753:89:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":816,"id":846,"nodeType":"Return","src":"7746:96:5"}]},"documentation":{"id":808,"nodeType":"StructuredDocumentation","src":"7353:147:5","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":848,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7514:18:5","nodeType":"FunctionDefinition","parameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"spender","nameLocation":"7541:7:5","nodeType":"VariableDeclaration","scope":848,"src":"7533:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"7533:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"tokenId","nameLocation":"7558:7:5","nodeType":"VariableDeclaration","scope":848,"src":"7550:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"7550:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7532:34:5"},"returnParameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":848,"src":"7598:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":814,"name":"bool","nodeType":"ElementaryTypeName","src":"7598:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7597:6:5"},"scope":1167,"src":"7505:344:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":862,"nodeType":"Block","src":"8244:43:5","statements":[{"expression":{"arguments":[{"id":857,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"8264:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8268:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8277:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":856,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[863,892],"referencedDeclaration":892,"src":"8254:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8254:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":861,"nodeType":"ExpressionStatement","src":"8254:26:5"}]},"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"7855:319:5","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":863,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8188:9:5","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"to","nameLocation":"8206:2:5","nodeType":"VariableDeclaration","scope":863,"src":"8198:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"8198:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"tokenId","nameLocation":"8218:7:5","nodeType":"VariableDeclaration","scope":863,"src":"8210:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"8210:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8197:29:5"},"returnParameters":{"id":855,"nodeType":"ParameterList","parameters":[],"src":"8244:0:5"},"scope":1167,"src":"8179:108:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":891,"nodeType":"Block","src":"8623:196:5","statements":[{"expression":{"arguments":[{"id":874,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"8639:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"8643:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":873,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"8633:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8633:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":877,"nodeType":"ExpressionStatement","src":"8633:18:5"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8713:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8705:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":880,"name":"address","nodeType":"ElementaryTypeName","src":"8705:7:5","typeDescriptions":{}}},"id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8705:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":884,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"8717:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":885,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"8721:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":886,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"8730:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":879,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"8682:22:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8682:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8750:52:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":878,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8661:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8661:151:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"ExpressionStatement","src":"8661:151:5"}]},"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"8293:210:5","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":892,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8517:9:5","nodeType":"FunctionDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"to","nameLocation":"8544:2:5","nodeType":"VariableDeclaration","scope":892,"src":"8536:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"8536:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"tokenId","nameLocation":"8564:7:5","nodeType":"VariableDeclaration","scope":892,"src":"8556:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"8556:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"_data","nameLocation":"8594:5:5","nodeType":"VariableDeclaration","scope":892,"src":"8581:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":869,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8526:79:5"},"returnParameters":{"id":872,"nodeType":"ParameterList","parameters":[],"src":"8623:0:5"},"scope":1167,"src":"8508:311:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":948,"nodeType":"Block","src":"9202:311:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":901,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"9220:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9226:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":902,"name":"address","nodeType":"ElementaryTypeName","src":"9226:7:5","typeDescriptions":{}}},"id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9226:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9220:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9238:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":900,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9212:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9212:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":909,"nodeType":"ExpressionStatement","src":"9212:61:5"},{"expression":{"arguments":[{"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9291:17:5","subExpression":{"arguments":[{"id":912,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9300:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":911,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"9292:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9292:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9310:30:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":910,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9283:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9283:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":917,"nodeType":"ExpressionStatement","src":"9283:58:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9381:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9373:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"9373:7:5","typeDescriptions":{}}},"id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9373:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":923,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"9385:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":924,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9389:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":918,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"9352:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"ExpressionStatement","src":"9352:45:5"},{"expression":{"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":927,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"9408:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":929,"indexExpression":{"id":928,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"9418:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9408:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9425:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9408:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":932,"nodeType":"ExpressionStatement","src":"9408:18:5"},{"expression":{"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":933,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"9436:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":935,"indexExpression":{"id":934,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9444:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9436:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":936,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"9455:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9436:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":938,"nodeType":"ExpressionStatement","src":"9436:21:5"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9482:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"9482:7:5","typeDescriptions":{}}},"id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9482:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"9494:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":945,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9498:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":939,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"9473:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9473:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":947,"nodeType":"EmitStatement","src":"9468:38:5"}]},"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"8825:311:5","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":949,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9150:5:5","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"mutability":"mutable","name":"to","nameLocation":"9164:2:5","nodeType":"VariableDeclaration","scope":949,"src":"9156:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"9156:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"tokenId","nameLocation":"9176:7:5","nodeType":"VariableDeclaration","scope":949,"src":"9168:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"9168:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9155:29:5"},"returnParameters":{"id":899,"nodeType":"ParameterList","parameters":[],"src":"9202:0:5"},"scope":1167,"src":"9141:372:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":999,"nodeType":"Block","src":"9779:299:5","statements":[{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"owner","nameLocation":"9797:5:5","nodeType":"VariableDeclaration","scope":999,"src":"9789:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"9789:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":961,"initialValue":{"arguments":[{"id":959,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"9820:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":957,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"9805:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1167_$","typeString":"type(contract ERC721)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9812:7:5","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":497,"src":"9805:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9789:39:5"},{"expression":{"arguments":[{"id":963,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"9860:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9875:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9867:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"9867:7:5","typeDescriptions":{}}},"id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9867:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":968,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"9879:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":962,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"9839:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9839:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"ExpressionStatement","src":"9839:48:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9942:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9934:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":972,"name":"address","nodeType":"ElementaryTypeName","src":"9934:7:5","typeDescriptions":{}}},"id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9934:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":976,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"9946:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":971,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"9925:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9925:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"ExpressionStatement","src":"9925:29:5"},{"expression":{"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":979,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"9965:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":981,"indexExpression":{"id":980,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"9975:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9965:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9985:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9965:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":984,"nodeType":"ExpressionStatement","src":"9965:21:5"},{"expression":{"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9996:23:5","subExpression":{"baseExpression":{"id":985,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"10003:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":987,"indexExpression":{"id":986,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"10011:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10003:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":989,"nodeType":"ExpressionStatement","src":"9996:23:5"},{"eventCall":{"arguments":[{"id":991,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"10044:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:5","typeDescriptions":{}}},"id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":996,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"10063:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":990,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"10035:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10035:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":998,"nodeType":"EmitStatement","src":"10030:41:5"}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"9519:206:5","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1000,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9739:5:5","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"tokenId","nameLocation":"9753:7:5","nodeType":"VariableDeclaration","scope":1000,"src":"9745:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"9745:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9744:17:5"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[],"src":"9779:0:5"},"scope":1167,"src":"9730:348:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1068,"nodeType":"Block","src":"10511:451:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1013,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"10544:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1011,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"10529:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1167_$","typeString":"type(contract ERC721)"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10536:7:5","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":497,"src":"10529:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10529:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1015,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"10556:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10529:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10562:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950","typeString":"literal_string \"ERC721: transfer of token that is not own\""},"value":"ERC721: transfer of token that is not own"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950","typeString":"literal_string \"ERC721: transfer of token that is not own\""}],"id":1010,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10521:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10521:85:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1019,"nodeType":"ExpressionStatement","src":"10521:85:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1021,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"10624:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10638:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10630:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1022,"name":"address","nodeType":"ElementaryTypeName","src":"10630:7:5","typeDescriptions":{}}},"id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10630:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10624:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10642:38:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":1020,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10616:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10616:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1029,"nodeType":"ExpressionStatement","src":"10616:65:5"},{"expression":{"arguments":[{"id":1031,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"10713:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1032,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"10719:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1033,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"10723:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1030,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"10692:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10692:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1035,"nodeType":"ExpressionStatement","src":"10692:39:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10810:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10802:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"10802:7:5","typeDescriptions":{}}},"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10802:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"10814:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1036,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"10793:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1043,"nodeType":"ExpressionStatement","src":"10793:29:5"},{"expression":{"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1044,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"10833:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1046,"indexExpression":{"id":1045,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"10843:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10833:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10852:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10833:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1049,"nodeType":"ExpressionStatement","src":"10833:20:5"},{"expression":{"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1050,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"10863:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1052,"indexExpression":{"id":1051,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"10873:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10863:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10880:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10863:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1055,"nodeType":"ExpressionStatement","src":"10863:18:5"},{"expression":{"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1056,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"10891:7:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1058,"indexExpression":{"id":1057,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"10899:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10891:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1059,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"10910:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10891:21:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1061,"nodeType":"ExpressionStatement","src":"10891:21:5"},{"eventCall":{"arguments":[{"id":1063,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"10937:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1064,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"10943:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1065,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"10947:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1062,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"10928:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10928:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1067,"nodeType":"EmitStatement","src":"10923:32:5"}]},"documentation":{"id":1001,"nodeType":"StructuredDocumentation","src":"10084:313:5","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1069,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"10411:9:5","nodeType":"FunctionDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"from","nameLocation":"10438:4:5","nodeType":"VariableDeclaration","scope":1069,"src":"10430:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"10430:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1005,"mutability":"mutable","name":"to","nameLocation":"10460:2:5","nodeType":"VariableDeclaration","scope":1069,"src":"10452:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"10452:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"tokenId","nameLocation":"10480:7:5","nodeType":"VariableDeclaration","scope":1069,"src":"10472:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1006,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10420:73:5"},"returnParameters":{"id":1009,"nodeType":"ParameterList","parameters":[],"src":"10511:0:5"},"scope":1167,"src":"10402:560:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1092,"nodeType":"Block","src":"11137:107:5","statements":[{"expression":{"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1077,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"11147:15:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1079,"indexExpression":{"id":1078,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"11163:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11147:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1080,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"11174:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11147:29:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1082,"nodeType":"ExpressionStatement","src":"11147:29:5"},{"eventCall":{"arguments":[{"arguments":[{"id":1086,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"11215:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1084,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"11200:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1167_$","typeString":"type(contract ERC721)"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11207:7:5","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":497,"src":"11200:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11200:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1088,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"11225:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1089,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"11229:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1083,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"11191:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11191:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1091,"nodeType":"EmitStatement","src":"11186:51:5"}]},"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"10968:100:5","text":" @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."},"id":1093,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"11082:8:5","nodeType":"FunctionDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"to","nameLocation":"11099:2:5","nodeType":"VariableDeclaration","scope":1093,"src":"11091:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"11091:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"tokenId","nameLocation":"11111:7:5","nodeType":"VariableDeclaration","scope":1093,"src":"11103:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"11103:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11090:29:5"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[],"src":"11137:0:5"},"scope":1167,"src":"11073:171:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1154,"nodeType":"Block","src":"11953:622:5","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1107,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"11967:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11970:10:5","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1476,"src":"11967:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11967:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1152,"nodeType":"Block","src":"12533:36:5","statements":[{"expression":{"hexValue":"74727565","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12554:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1106,"id":1151,"nodeType":"Return","src":"12547:11:5"}]},"id":1153,"nodeType":"IfStatement","src":"11963:606:5","trueBody":{"id":1149,"nodeType":"Block","src":"11984:543:5","statements":[{"clauses":[{"block":{"id":1129,"nodeType":"Block","src":"12099:91:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1123,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"12124:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1124,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"12134:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1301_$","typeString":"type(contract IERC721Receiver)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12150:16:5","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1300,"src":"12134:32:5","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12167:8:5","memberName":"selector","nodeType":"MemberAccess","src":"12134:41:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"12124:51:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1106,"id":1128,"nodeType":"Return","src":"12117:58:5"}]},"errorName":"","id":1130,"nodeType":"TryCatchClause","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"retval","nameLocation":"12091:6:5","nodeType":"VariableDeclaration","scope":1130,"src":"12084:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1120,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12084:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"12083:15:5"},"src":"12075:115:5"},{"block":{"id":1146,"nodeType":"Block","src":"12219:298:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1134,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"12241:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12248:6:5","memberName":"length","nodeType":"MemberAccess","src":"12241:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12258:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12241:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1144,"nodeType":"Block","src":"12368:135:5","statements":[{"AST":{"nodeType":"YulBlock","src":"12399:86:5","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12436:2:5","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"12440:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12432:3:5"},"nodeType":"YulFunctionCall","src":"12432:15:5"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"12455:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12449:5:5"},"nodeType":"YulFunctionCall","src":"12449:13:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12425:6:5"},"nodeType":"YulFunctionCall","src":"12425:38:5"},"nodeType":"YulExpressionStatement","src":"12425:38:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":1132,"isOffset":false,"isSlot":false,"src":"12440:6:5","valueSize":1},{"declaration":1132,"isOffset":false,"isSlot":false,"src":"12455:6:5","valueSize":1}],"id":1143,"nodeType":"InlineAssembly","src":"12390:95:5"}]},"id":1145,"nodeType":"IfStatement","src":"12237:266:5","trueBody":{"id":1142,"nodeType":"Block","src":"12261:101:5","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12290:52:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1138,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"12283:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1141,"nodeType":"ExpressionStatement","src":"12283:60:5"}]}}]},"errorName":"","id":1147,"nodeType":"TryCatchClause","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"reason","nameLocation":"12211:6:5","nodeType":"VariableDeclaration","scope":1147,"src":"12198:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1131,"name":"bytes","nodeType":"ElementaryTypeName","src":"12198:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12197:21:5"},"src":"12191:326:5"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1114,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"12039:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12039:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1116,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"12053:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1117,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"12059:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1118,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"12068:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1111,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"12018:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1110,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"12002:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1301_$","typeString":"type(contract IERC721Receiver)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12002:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1301","typeString":"contract IERC721Receiver"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12022:16:5","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1300,"src":"12002:36:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12002:72:5","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1148,"nodeType":"TryStatement","src":"11998:519:5"}]}}]},"documentation":{"id":1094,"nodeType":"StructuredDocumentation","src":"11250:542:5","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":1155,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"11806:22:5","nodeType":"FunctionDefinition","parameters":{"id":1103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"from","nameLocation":"11846:4:5","nodeType":"VariableDeclaration","scope":1155,"src":"11838:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"11838:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"to","nameLocation":"11868:2:5","nodeType":"VariableDeclaration","scope":1155,"src":"11860:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"11860:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"tokenId","nameLocation":"11888:7:5","nodeType":"VariableDeclaration","scope":1155,"src":"11880:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1099,"name":"uint256","nodeType":"ElementaryTypeName","src":"11880:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"_data","nameLocation":"11918:5:5","nodeType":"VariableDeclaration","scope":1155,"src":"11905:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1101,"name":"bytes","nodeType":"ElementaryTypeName","src":"11905:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11828:101:5"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1155,"src":"11947:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1104,"name":"bool","nodeType":"ElementaryTypeName","src":"11947:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11946:6:5"},"scope":1167,"src":"11797:778:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1165,"nodeType":"Block","src":"13251:2:5","statements":[]},"documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"12581:545:5","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1166,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"13140:20:5","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"from","nameLocation":"13178:4:5","nodeType":"VariableDeclaration","scope":1166,"src":"13170:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"13170:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1160,"mutability":"mutable","name":"to","nameLocation":"13200:2:5","nodeType":"VariableDeclaration","scope":1166,"src":"13192:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"13192:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"tokenId","nameLocation":"13220:7:5","nodeType":"VariableDeclaration","scope":1166,"src":"13212:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"13212:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13160:73:5"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[],"src":"13251:0:5"},"scope":1167,"src":"13131:122:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1168,"src":"554:12701:5","usedErrors":[]}],"src":"33:13223:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2014],"IERC721":[1283]},"id":1284,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1169,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1284,"sourceUnit":2015,"src":"58:47:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1172,"name":"IERC165","nameLocations":["196:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2014,"src":"196:7:6"},"id":1173,"nodeType":"InheritanceSpecifier","src":"196:7:6"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"107:67:6","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1283,"linearizedBaseContracts":[1283,2014],"name":"IERC721","nameLocation":"185:7:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1174,"nodeType":"StructuredDocumentation","src":"210:88:6","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1182,"name":"Transfer","nameLocation":"309:8:6","nodeType":"EventDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"334:4:6","nodeType":"VariableDeclaration","scope":1182,"src":"318:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1175,"name":"address","nodeType":"ElementaryTypeName","src":"318:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1178,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"356:2:6","nodeType":"VariableDeclaration","scope":1182,"src":"340:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"340:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1180,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"376:7:6","nodeType":"VariableDeclaration","scope":1182,"src":"360:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"317:67:6"},"src":"303:82:6"},{"anonymous":false,"documentation":{"id":1183,"nodeType":"StructuredDocumentation","src":"391:94:6","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1191,"name":"Approval","nameLocation":"496:8:6","nodeType":"EventDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"521:5:6","nodeType":"VariableDeclaration","scope":1191,"src":"505:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"505:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1187,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"544:8:6","nodeType":"VariableDeclaration","scope":1191,"src":"528:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"528:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1189,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"570:7:6","nodeType":"VariableDeclaration","scope":1191,"src":"554:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"554:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:74:6"},"src":"490:89:6"},{"anonymous":false,"documentation":{"id":1192,"nodeType":"StructuredDocumentation","src":"585:117:6","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1200,"name":"ApprovalForAll","nameLocation":"713:14:6","nodeType":"EventDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"744:5:6","nodeType":"VariableDeclaration","scope":1200,"src":"728:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1196,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"767:8:6","nodeType":"VariableDeclaration","scope":1200,"src":"751:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"751:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1198,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"782:8:6","nodeType":"VariableDeclaration","scope":1200,"src":"777:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1197,"name":"bool","nodeType":"ElementaryTypeName","src":"777:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"727:64:6"},"src":"707:85:6"},{"documentation":{"id":1201,"nodeType":"StructuredDocumentation","src":"798:76:6","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1208,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"888:9:6","nodeType":"FunctionDefinition","parameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1203,"mutability":"mutable","name":"owner","nameLocation":"906:5:6","nodeType":"VariableDeclaration","scope":1208,"src":"898:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"898:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"897:15:6"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"balance","nameLocation":"944:7:6","nodeType":"VariableDeclaration","scope":1208,"src":"936:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"935:17:6"},"scope":1283,"src":"879:74:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"959:131:6","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1216,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1104:7:6","nodeType":"FunctionDefinition","parameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"tokenId","nameLocation":"1120:7:6","nodeType":"VariableDeclaration","scope":1216,"src":"1112:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1112:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1111:17:6"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"owner","nameLocation":"1160:5:6","nodeType":"VariableDeclaration","scope":1216,"src":"1152:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"1152:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1151:15:6"},"scope":1283,"src":"1095:72:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1217,"nodeType":"StructuredDocumentation","src":"1173:690:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1226,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1877:16:6","nodeType":"FunctionDefinition","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"from","nameLocation":"1911:4:6","nodeType":"VariableDeclaration","scope":1226,"src":"1903:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"1903:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"to","nameLocation":"1933:2:6","nodeType":"VariableDeclaration","scope":1226,"src":"1925:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"1925:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"tokenId","nameLocation":"1953:7:6","nodeType":"VariableDeclaration","scope":1226,"src":"1945:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1945:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1893:73:6"},"returnParameters":{"id":1225,"nodeType":"ParameterList","parameters":[],"src":"1975:0:6"},"scope":1283,"src":"1868:108:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"1982:504:6","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1236,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2500:12:6","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"from","nameLocation":"2530:4:6","nodeType":"VariableDeclaration","scope":1236,"src":"2522:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"to","nameLocation":"2552:2:6","nodeType":"VariableDeclaration","scope":1236,"src":"2544:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"2544:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"tokenId","nameLocation":"2572:7:6","nodeType":"VariableDeclaration","scope":1236,"src":"2564:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"2564:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2512:73:6"},"returnParameters":{"id":1235,"nodeType":"ParameterList","parameters":[],"src":"2594:0:6"},"scope":1283,"src":"2491:104:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"2601:452:6","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1244,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3067:7:6","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"to","nameLocation":"3083:2:6","nodeType":"VariableDeclaration","scope":1244,"src":"3075:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"3075:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"tokenId","nameLocation":"3095:7:6","nodeType":"VariableDeclaration","scope":1244,"src":"3087:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"3087:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3074:29:6"},"returnParameters":{"id":1243,"nodeType":"ParameterList","parameters":[],"src":"3112:0:6"},"scope":1283,"src":"3058:55:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"3119:139:6","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1252,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3272:11:6","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"tokenId","nameLocation":"3292:7:6","nodeType":"VariableDeclaration","scope":1252,"src":"3284:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"3284:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3283:17:6"},"returnParameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"operator","nameLocation":"3332:8:6","nodeType":"VariableDeclaration","scope":1252,"src":"3324:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"3324:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3323:18:6"},"scope":1283,"src":"3263:79:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"3348:309:6","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1260,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3671:17:6","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"operator","nameLocation":"3697:8:6","nodeType":"VariableDeclaration","scope":1260,"src":"3689:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"3689:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"_approved","nameLocation":"3712:9:6","nodeType":"VariableDeclaration","scope":1260,"src":"3707:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1256,"name":"bool","nodeType":"ElementaryTypeName","src":"3707:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3688:34:6"},"returnParameters":{"id":1259,"nodeType":"ParameterList","parameters":[],"src":"3731:0:6"},"scope":1283,"src":"3662:70:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1261,"nodeType":"StructuredDocumentation","src":"3738:138:6","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1270,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3890:16:6","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"owner","nameLocation":"3915:5:6","nodeType":"VariableDeclaration","scope":1270,"src":"3907:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1262,"name":"address","nodeType":"ElementaryTypeName","src":"3907:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"operator","nameLocation":"3930:8:6","nodeType":"VariableDeclaration","scope":1270,"src":"3922:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"3922:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3906:33:6"},"returnParameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1270,"src":"3963:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1267,"name":"bool","nodeType":"ElementaryTypeName","src":"3963:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3962:6:6"},"scope":1283,"src":"3881:88:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"3975:556:6","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1282,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4545:16:6","nodeType":"FunctionDefinition","parameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"from","nameLocation":"4579:4:6","nodeType":"VariableDeclaration","scope":1282,"src":"4571:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"4571:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"to","nameLocation":"4601:2:6","nodeType":"VariableDeclaration","scope":1282,"src":"4593:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"4593:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1277,"mutability":"mutable","name":"tokenId","nameLocation":"4621:7:6","nodeType":"VariableDeclaration","scope":1282,"src":"4613:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"4613:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"data","nameLocation":"4653:4:6","nodeType":"VariableDeclaration","scope":1282,"src":"4638:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1278,"name":"bytes","nodeType":"ElementaryTypeName","src":"4638:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4561:102:6"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[],"src":"4672:0:6"},"scope":1283,"src":"4536:137:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1284,"src":"175:4500:6","usedErrors":[]}],"src":"33:4643:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1301]},"id":1302,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1285,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1286,"nodeType":"StructuredDocumentation","src":"58:152:7","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1301,"linearizedBaseContracts":[1301],"name":"IERC721Receiver","nameLocation":"221:15:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1287,"nodeType":"StructuredDocumentation","src":"243:485:7","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1300,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"742:16:7","nodeType":"FunctionDefinition","parameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"operator","nameLocation":"776:8:7","nodeType":"VariableDeclaration","scope":1300,"src":"768:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"768:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"from","nameLocation":"802:4:7","nodeType":"VariableDeclaration","scope":1300,"src":"794:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1290,"name":"address","nodeType":"ElementaryTypeName","src":"794:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"tokenId","nameLocation":"824:7:7","nodeType":"VariableDeclaration","scope":1300,"src":"816:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"816:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"data","nameLocation":"856:4:7","nodeType":"VariableDeclaration","scope":1300,"src":"841:19:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1294,"name":"bytes","nodeType":"ElementaryTypeName","src":"841:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"758:108:7"},"returnParameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1300,"src":"885:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1297,"name":"bytes4","nodeType":"ElementaryTypeName","src":"885:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"884:8:7"},"scope":1301,"src":"733:160:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1302,"src":"211:684:7","usedErrors":[]}],"src":"33:863:7"},"id":7},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[1753],"Context":[1775],"ERC165":[2002],"ERC721":[1167],"ERC721URIStorage":[1429],"IERC165":[2014],"IERC721":[1283],"IERC721Metadata":[1456],"IERC721Receiver":[1301],"Strings":[1978]},"id":1430,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1303,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1304,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1430,"sourceUnit":1168,"src":"58:23:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1306,"name":"ERC721","nameLocations":["191:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1167,"src":"191:6:8"},"id":1307,"nodeType":"InheritanceSpecifier","src":"191:6:8"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1305,"nodeType":"StructuredDocumentation","src":"83:69:8","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":true,"id":1429,"linearizedBaseContracts":[1429,1167,1456,1283,2002,2014,1775],"name":"ERC721URIStorage","nameLocation":"171:16:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1310,"libraryName":{"id":1308,"name":"Strings","nameLocations":["210:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1978,"src":"210:7:8"},"nodeType":"UsingForDirective","src":"204:26:8","typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"222:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1314,"mutability":"mutable","name":"_tokenURIs","nameLocation":"310:10:8","nodeType":"VariableDeclaration","scope":1429,"src":"275:45:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1313,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"283:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"275:26:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1312,"name":"string","nodeType":"ElementaryTypeName","src":"294:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[559],"body":{"id":1375,"nodeType":"Block","src":"475:575:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1325,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"501:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1324,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"493:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"493:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":1327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"511:51:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a","typeString":"literal_string \"ERC721URIStorage: URI query for nonexistent token\""},"value":"ERC721URIStorage: URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a","typeString":"literal_string \"ERC721URIStorage: URI query for nonexistent token\""}],"id":1323,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"485:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"485:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1329,"nodeType":"ExpressionStatement","src":"485:78:8"},{"assignments":[1331],"declarations":[{"constant":false,"id":1331,"mutability":"mutable","name":"_tokenURI","nameLocation":"588:9:8","nodeType":"VariableDeclaration","scope":1375,"src":"574:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1330,"name":"string","nodeType":"ElementaryTypeName","src":"574:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1335,"initialValue":{"baseExpression":{"id":1332,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"600:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1334,"indexExpression":{"id":1333,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"611:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"600:19:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"574:45:8"},{"assignments":[1337],"declarations":[{"constant":false,"id":1337,"mutability":"mutable","name":"base","nameLocation":"643:4:8","nodeType":"VariableDeclaration","scope":1375,"src":"629:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1336,"name":"string","nodeType":"ElementaryTypeName","src":"629:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1340,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1338,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"650:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"650:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"629:31:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1343,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"739:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"733:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1341,"name":"bytes","nodeType":"ElementaryTypeName","src":"733:5:8","typeDescriptions":{}}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"733:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"745:6:8","memberName":"length","nodeType":"MemberAccess","src":"733:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"755:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"733:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1351,"nodeType":"IfStatement","src":"729:70:8","trueBody":{"id":1350,"nodeType":"Block","src":"758:41:8","statements":[{"expression":{"id":1348,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"779:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1322,"id":1349,"nodeType":"Return","src":"772:16:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1354,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"907:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"901:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1352,"name":"bytes","nodeType":"ElementaryTypeName","src":"901:5:8","typeDescriptions":{}}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"901:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"918:6:8","memberName":"length","nodeType":"MemberAccess","src":"901:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"927:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"901:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1369,"nodeType":"IfStatement","src":"897:106:8","trueBody":{"id":1368,"nodeType":"Block","src":"930:73:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1363,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"975:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1364,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"981:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1361,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"958:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"962:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"958:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"958:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"951:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1359,"name":"string","nodeType":"ElementaryTypeName","src":"951:6:8","typeDescriptions":{}}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"951:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1322,"id":1367,"nodeType":"Return","src":"944:48:8"}]}},{"expression":{"arguments":[{"id":1372,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"1035:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1370,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1020:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1429_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:8:8","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":559,"src":"1020:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1322,"id":1374,"nodeType":"Return","src":"1013:30:8"}]},"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"327:55:8","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1376,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"396:8:8","nodeType":"FunctionDefinition","overrides":{"id":1319,"nodeType":"OverrideSpecifier","overrides":[],"src":"442:8:8"},"parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"tokenId","nameLocation":"413:7:8","nodeType":"VariableDeclaration","scope":1376,"src":"405:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:17:8"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1376,"src":"460:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1320,"name":"string","nodeType":"ElementaryTypeName","src":"460:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"459:15:8"},"scope":1429,"src":"387:663:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1397,"nodeType":"Block","src":"1278:133:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1386,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"1304:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1385,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"1296:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1296:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1314:48:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":1384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1288:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1288:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1390,"nodeType":"ExpressionStatement","src":"1288:75:8"},{"expression":{"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1391,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"1373:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1393,"indexExpression":{"id":1392,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"1384:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1373:19:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1394,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"1395:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1373:31:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1396,"nodeType":"ExpressionStatement","src":"1373:31:8"}]},"documentation":{"id":1377,"nodeType":"StructuredDocumentation","src":"1056:136:8","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1398,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1206:12:8","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"tokenId","nameLocation":"1227:7:8","nodeType":"VariableDeclaration","scope":1398,"src":"1219:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"_tokenURI","nameLocation":"1250:9:8","nodeType":"VariableDeclaration","scope":1398,"src":"1236:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1380,"name":"string","nodeType":"ElementaryTypeName","src":"1236:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1218:42:8"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[],"src":"1278:0:8"},"scope":1429,"src":"1197:214:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1000],"body":{"id":1427,"nodeType":"Block","src":"1686:142:8","statements":[{"expression":{"arguments":[{"id":1408,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"1708:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1405,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1696:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1429_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1702:5:8","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1000,"src":"1696:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1410,"nodeType":"ExpressionStatement","src":"1696:20:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":1413,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"1737:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1415,"indexExpression":{"id":1414,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"1748:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1737:19:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1731:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1411,"name":"bytes","nodeType":"ElementaryTypeName","src":"1731:5:8","typeDescriptions":{}}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1731:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1758:6:8","memberName":"length","nodeType":"MemberAccess","src":"1731:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1768:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1731:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1426,"nodeType":"IfStatement","src":"1727:95:8","trueBody":{"id":1425,"nodeType":"Block","src":"1771:51:8","statements":[{"expression":{"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1785:26:8","subExpression":{"baseExpression":{"id":1420,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"1792:10:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1422,"indexExpression":{"id":1421,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"1803:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1792:19:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1424,"nodeType":"ExpressionStatement","src":"1785:26:8"}]}}]},"documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"1417:206:8","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1428,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1637:5:8","nodeType":"FunctionDefinition","overrides":{"id":1403,"nodeType":"OverrideSpecifier","overrides":[],"src":"1677:8:8"},"parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"tokenId","nameLocation":"1651:7:8","nodeType":"VariableDeclaration","scope":1428,"src":"1643:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"1643:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1642:17:8"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[],"src":"1686:0:8"},"scope":1429,"src":"1628:200:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1430,"src":"153:1677:8","usedErrors":[]}],"src":"33:1798:8"},"id":8},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2014],"IERC721":[1283],"IERC721Metadata":[1456]},"id":1457,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1431,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1432,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1457,"sourceUnit":1284,"src":"58:24:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1434,"name":"IERC721","nameLocations":["247:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1283,"src":"247:7:9"},"id":1435,"nodeType":"InheritanceSpecifier","src":"247:7:9"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1433,"nodeType":"StructuredDocumentation","src":"84:133:9","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1456,"linearizedBaseContracts":[1456,1283,2014],"name":"IERC721Metadata","nameLocation":"228:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"261:58:9","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1441,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"333:4:9","nodeType":"FunctionDefinition","parameters":{"id":1437,"nodeType":"ParameterList","parameters":[],"src":"337:2:9"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1441,"src":"363:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1438,"name":"string","nodeType":"ElementaryTypeName","src":"363:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"362:15:9"},"scope":1456,"src":"324:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"384:60:9","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1447,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"458:6:9","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[],"src":"464:2:9"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1447,"src":"490:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1444,"name":"string","nodeType":"ElementaryTypeName","src":"490:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"489:15:9"},"scope":1456,"src":"449:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1448,"nodeType":"StructuredDocumentation","src":"511:90:9","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1455,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"615:8:9","nodeType":"FunctionDefinition","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"tokenId","nameLocation":"632:7:9","nodeType":"VariableDeclaration","scope":1455,"src":"624:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:17:9"},"returnParameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1455,"src":"664:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1452,"name":"string","nodeType":"ElementaryTypeName","src":"664:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"663:15:9"},"scope":1456,"src":"606:73:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1457,"src":"218:463:9","usedErrors":[]}],"src":"33:649:9"},"id":9},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1753]},"id":1754,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1458,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"58:67:10","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1753,"linearizedBaseContracts":[1753],"name":"Address","nameLocation":"134:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1475,"nodeType":"Block","src":"784:311:10","statements":[{"assignments":[1468],"declarations":[{"constant":false,"id":1468,"mutability":"mutable","name":"size","nameLocation":"989:4:10","nodeType":"VariableDeclaration","scope":1475,"src":"981:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"981:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1469,"nodeType":"VariableDeclarationStatement","src":"981:12:10"},{"AST":{"nodeType":"YulBlock","src":"1012:52:10","statements":[{"nodeType":"YulAssignment","src":"1026:28:10","value":{"arguments":[{"name":"account","nodeType":"YulIdentifier","src":"1046:7:10"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"1034:11:10"},"nodeType":"YulFunctionCall","src":"1034:20:10"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1026:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1462,"isOffset":false,"isSlot":false,"src":"1046:7:10","valueSize":1},{"declaration":1468,"isOffset":false,"isSlot":false,"src":"1026:4:10","valueSize":1}],"id":1470,"nodeType":"InlineAssembly","src":"1003:61:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1471,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"1080:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1087:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1080:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1466,"id":1474,"nodeType":"Return","src":"1073:15:10"}]},"documentation":{"id":1460,"nodeType":"StructuredDocumentation","src":"148:565:10","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="},"id":1476,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"727:10:10","nodeType":"FunctionDefinition","parameters":{"id":1463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"account","nameLocation":"746:7:10","nodeType":"VariableDeclaration","scope":1476,"src":"738:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"737:17:10"},"returnParameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1476,"src":"778:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1464,"name":"bool","nodeType":"ElementaryTypeName","src":"778:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"777:6:10"},"scope":1753,"src":"718:377:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1509,"nodeType":"Block","src":"2083:241:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1487,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2109:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1753","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1753","typeString":"library Address"}],"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2101:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:10","typeDescriptions":{}}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2101:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2115:7:10","memberName":"balance","nodeType":"MemberAccess","src":"2101:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1490,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"2126:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2101:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2134:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1484,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2093:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2093:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1494,"nodeType":"ExpressionStatement","src":"2093:73:10"},{"assignments":[1496,null],"declarations":[{"constant":false,"id":1496,"mutability":"mutable","name":"success","nameLocation":"2183:7:10","nodeType":"VariableDeclaration","scope":1509,"src":"2178:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1495,"name":"bool","nodeType":"ElementaryTypeName","src":"2178:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1503,"initialValue":{"arguments":[{"hexValue":"","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2226:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1497,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"2196:9:10","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:4:10","memberName":"call","nodeType":"MemberAccess","src":"2196:14:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1499,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"2218:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2196:29:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2196:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2177:52:10"},{"expression":{"arguments":[{"id":1505,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"2247:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2256:60:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1504,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2239:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2239:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1508,"nodeType":"ExpressionStatement","src":"2239:78:10"}]},"documentation":{"id":1477,"nodeType":"StructuredDocumentation","src":"1101:906:10","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1510,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2021:9:10","nodeType":"FunctionDefinition","parameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"recipient","nameLocation":"2047:9:10","nodeType":"VariableDeclaration","scope":1510,"src":"2031:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1478,"name":"address","nodeType":"ElementaryTypeName","src":"2031:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1481,"mutability":"mutable","name":"amount","nameLocation":"2066:6:10","nodeType":"VariableDeclaration","scope":1510,"src":"2058:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"2058:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2030:43:10"},"returnParameters":{"id":1483,"nodeType":"ParameterList","parameters":[],"src":"2083:0:10"},"scope":1753,"src":"2012:312:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1526,"nodeType":"Block","src":"3155:84:10","statements":[{"expression":{"arguments":[{"id":1521,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"3185:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1522,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"3193:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3199:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1520,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1527,1547],"referencedDeclaration":1547,"src":"3172:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3172:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1519,"id":1525,"nodeType":"Return","src":"3165:67:10"}]},"documentation":{"id":1511,"nodeType":"StructuredDocumentation","src":"2330:731:10","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1527,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3075:12:10","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"target","nameLocation":"3096:6:10","nodeType":"VariableDeclaration","scope":1527,"src":"3088:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1512,"name":"address","nodeType":"ElementaryTypeName","src":"3088:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"data","nameLocation":"3117:4:10","nodeType":"VariableDeclaration","scope":1527,"src":"3104:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1514,"name":"bytes","nodeType":"ElementaryTypeName","src":"3104:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3087:35:10"},"returnParameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1527,"src":"3141:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1517,"name":"bytes","nodeType":"ElementaryTypeName","src":"3141:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3140:14:10"},"scope":1753,"src":"3066:173:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1546,"nodeType":"Block","src":"3608:76:10","statements":[{"expression":{"arguments":[{"id":1540,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"3647:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1541,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"3655:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3661:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1543,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"3664:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1539,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1567,1617],"referencedDeclaration":1617,"src":"3625:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3625:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1538,"id":1545,"nodeType":"Return","src":"3618:59:10"}]},"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"3245:211:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1547,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3470:12:10","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"target","nameLocation":"3500:6:10","nodeType":"VariableDeclaration","scope":1547,"src":"3492:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"3492:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"data","nameLocation":"3529:4:10","nodeType":"VariableDeclaration","scope":1547,"src":"3516:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1531,"name":"bytes","nodeType":"ElementaryTypeName","src":"3516:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1534,"mutability":"mutable","name":"errorMessage","nameLocation":"3557:12:10","nodeType":"VariableDeclaration","scope":1547,"src":"3543:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1533,"name":"string","nodeType":"ElementaryTypeName","src":"3543:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3482:93:10"},"returnParameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1547,"src":"3594:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1536,"name":"bytes","nodeType":"ElementaryTypeName","src":"3594:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3593:14:10"},"scope":1753,"src":"3461:223:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1566,"nodeType":"Block","src":"4189:111:10","statements":[{"expression":{"arguments":[{"id":1560,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"4228:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1561,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"4236:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"4242:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4249:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1559,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1567,1617],"referencedDeclaration":1617,"src":"4206:21:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4206:87:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1558,"id":1565,"nodeType":"Return","src":"4199:94:10"}]},"documentation":{"id":1548,"nodeType":"StructuredDocumentation","src":"3690:351:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1567,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4055:21:10","nodeType":"FunctionDefinition","parameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"target","nameLocation":"4094:6:10","nodeType":"VariableDeclaration","scope":1567,"src":"4086:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"4086:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"data","nameLocation":"4123:4:10","nodeType":"VariableDeclaration","scope":1567,"src":"4110:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1551,"name":"bytes","nodeType":"ElementaryTypeName","src":"4110:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1554,"mutability":"mutable","name":"value","nameLocation":"4145:5:10","nodeType":"VariableDeclaration","scope":1567,"src":"4137:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"4137:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4076:80:10"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1567,"src":"4175:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1556,"name":"bytes","nodeType":"ElementaryTypeName","src":"4175:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4174:14:10"},"scope":1753,"src":"4046:254:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1616,"nodeType":"Block","src":"4727:320:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1584,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4753:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1753","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1753","typeString":"library Address"}],"id":1583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4745:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1582,"name":"address","nodeType":"ElementaryTypeName","src":"4745:7:10","typeDescriptions":{}}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4745:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4759:7:10","memberName":"balance","nodeType":"MemberAccess","src":"4745:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"4770:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4745:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4777:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1581,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4737:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4737:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1591,"nodeType":"ExpressionStatement","src":"4737:81:10"},{"expression":{"arguments":[{"arguments":[{"id":1594,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"4847:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1593,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"4836:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4836:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4856:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1592,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4828:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4828:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"ExpressionStatement","src":"4828:60:10"},{"assignments":[1600,1602],"declarations":[{"constant":false,"id":1600,"mutability":"mutable","name":"success","nameLocation":"4905:7:10","nodeType":"VariableDeclaration","scope":1616,"src":"4900:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1599,"name":"bool","nodeType":"ElementaryTypeName","src":"4900:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1602,"mutability":"mutable","name":"returndata","nameLocation":"4927:10:10","nodeType":"VariableDeclaration","scope":1616,"src":"4914:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1601,"name":"bytes","nodeType":"ElementaryTypeName","src":"4914:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1609,"initialValue":{"arguments":[{"id":1607,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"4967:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1603,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"4941:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4948:4:10","memberName":"call","nodeType":"MemberAccess","src":"4941:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"4960:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4941:25:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4941:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4899:73:10"},{"expression":{"arguments":[{"id":1611,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"5006:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1612,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"5015:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1613,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"5027:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1610,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"4989:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4989:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1580,"id":1615,"nodeType":"Return","src":"4982:58:10"}]},"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"4306:237:10","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1617,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4557:21:10","nodeType":"FunctionDefinition","parameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"target","nameLocation":"4596:6:10","nodeType":"VariableDeclaration","scope":1617,"src":"4588:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1569,"name":"address","nodeType":"ElementaryTypeName","src":"4588:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"data","nameLocation":"4625:4:10","nodeType":"VariableDeclaration","scope":1617,"src":"4612:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1571,"name":"bytes","nodeType":"ElementaryTypeName","src":"4612:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1574,"mutability":"mutable","name":"value","nameLocation":"4647:5:10","nodeType":"VariableDeclaration","scope":1617,"src":"4639:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"4639:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"errorMessage","nameLocation":"4676:12:10","nodeType":"VariableDeclaration","scope":1617,"src":"4662:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1575,"name":"string","nodeType":"ElementaryTypeName","src":"4662:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4578:116:10"},"returnParameters":{"id":1580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1617,"src":"4713:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1578,"name":"bytes","nodeType":"ElementaryTypeName","src":"4713:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4712:14:10"},"scope":1753,"src":"4548:499:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1633,"nodeType":"Block","src":"5324:97:10","statements":[{"expression":{"arguments":[{"id":1628,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"5360:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1629,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"5368:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5374:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1627,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1634,1669],"referencedDeclaration":1669,"src":"5341:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5341:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1626,"id":1632,"nodeType":"Return","src":"5334:80:10"}]},"documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"5053:166:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1634,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5233:18:10","nodeType":"FunctionDefinition","parameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"mutability":"mutable","name":"target","nameLocation":"5260:6:10","nodeType":"VariableDeclaration","scope":1634,"src":"5252:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1619,"name":"address","nodeType":"ElementaryTypeName","src":"5252:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1622,"mutability":"mutable","name":"data","nameLocation":"5281:4:10","nodeType":"VariableDeclaration","scope":1634,"src":"5268:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1621,"name":"bytes","nodeType":"ElementaryTypeName","src":"5268:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5251:35:10"},"returnParameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1634,"src":"5310:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1624,"name":"bytes","nodeType":"ElementaryTypeName","src":"5310:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5309:14:10"},"scope":1753,"src":"5224:197:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1668,"nodeType":"Block","src":"5763:228:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1648,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"5792:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1647,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"5781:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5781:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5801:38:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5773:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5773:67:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1652,"nodeType":"ExpressionStatement","src":"5773:67:10"},{"assignments":[1654,1656],"declarations":[{"constant":false,"id":1654,"mutability":"mutable","name":"success","nameLocation":"5857:7:10","nodeType":"VariableDeclaration","scope":1668,"src":"5852:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1653,"name":"bool","nodeType":"ElementaryTypeName","src":"5852:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1656,"mutability":"mutable","name":"returndata","nameLocation":"5879:10:10","nodeType":"VariableDeclaration","scope":1668,"src":"5866:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1655,"name":"bytes","nodeType":"ElementaryTypeName","src":"5866:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1661,"initialValue":{"arguments":[{"id":1659,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"5911:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1657,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"5893:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5900:10:10","memberName":"staticcall","nodeType":"MemberAccess","src":"5893:17:10","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5893:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5851:65:10"},{"expression":{"arguments":[{"id":1663,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"5950:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1664,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"5959:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1665,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"5971:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1662,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"5933:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5933:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1645,"id":1667,"nodeType":"Return","src":"5926:58:10"}]},"documentation":{"id":1635,"nodeType":"StructuredDocumentation","src":"5427:173:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5614:18:10","nodeType":"FunctionDefinition","parameters":{"id":1642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"target","nameLocation":"5650:6:10","nodeType":"VariableDeclaration","scope":1669,"src":"5642:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1636,"name":"address","nodeType":"ElementaryTypeName","src":"5642:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1639,"mutability":"mutable","name":"data","nameLocation":"5679:4:10","nodeType":"VariableDeclaration","scope":1669,"src":"5666:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1638,"name":"bytes","nodeType":"ElementaryTypeName","src":"5666:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1641,"mutability":"mutable","name":"errorMessage","nameLocation":"5707:12:10","nodeType":"VariableDeclaration","scope":1669,"src":"5693:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1640,"name":"string","nodeType":"ElementaryTypeName","src":"5693:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5632:93:10"},"returnParameters":{"id":1645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1669,"src":"5749:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1643,"name":"bytes","nodeType":"ElementaryTypeName","src":"5749:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5748:14:10"},"scope":1753,"src":"5605:386:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1685,"nodeType":"Block","src":"6267:101:10","statements":[{"expression":{"arguments":[{"id":1680,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"6305:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1681,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"6313:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6319:41:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1679,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1686,1721],"referencedDeclaration":1721,"src":"6284:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6284:77:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1678,"id":1684,"nodeType":"Return","src":"6277:84:10"}]},"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"5997:168:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1686,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6179:20:10","nodeType":"FunctionDefinition","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"target","nameLocation":"6208:6:10","nodeType":"VariableDeclaration","scope":1686,"src":"6200:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"6200:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1674,"mutability":"mutable","name":"data","nameLocation":"6229:4:10","nodeType":"VariableDeclaration","scope":1686,"src":"6216:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1673,"name":"bytes","nodeType":"ElementaryTypeName","src":"6216:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6199:35:10"},"returnParameters":{"id":1678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1686,"src":"6253:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1676,"name":"bytes","nodeType":"ElementaryTypeName","src":"6253:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6252:14:10"},"scope":1753,"src":"6170:198:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1720,"nodeType":"Block","src":"6709:232:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":1700,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"6738:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1699,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"6727:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6727:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6747:40:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1698,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6719:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6719:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1704,"nodeType":"ExpressionStatement","src":"6719:69:10"},{"assignments":[1706,1708],"declarations":[{"constant":false,"id":1706,"mutability":"mutable","name":"success","nameLocation":"6805:7:10","nodeType":"VariableDeclaration","scope":1720,"src":"6800:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1705,"name":"bool","nodeType":"ElementaryTypeName","src":"6800:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"returndata","nameLocation":"6827:10:10","nodeType":"VariableDeclaration","scope":1720,"src":"6814:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1707,"name":"bytes","nodeType":"ElementaryTypeName","src":"6814:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1713,"initialValue":{"arguments":[{"id":1711,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"6861:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1709,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"6841:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6848:12:10","memberName":"delegatecall","nodeType":"MemberAccess","src":"6841:19:10","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6841:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6799:67:10"},{"expression":{"arguments":[{"id":1715,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"6900:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1716,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"6909:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1717,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"6921:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1714,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"6883:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6883:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1697,"id":1719,"nodeType":"Return","src":"6876:58:10"}]},"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"6374:175:10","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1721,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6563:20:10","nodeType":"FunctionDefinition","parameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"target","nameLocation":"6601:6:10","nodeType":"VariableDeclaration","scope":1721,"src":"6593:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"6593:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"data","nameLocation":"6630:4:10","nodeType":"VariableDeclaration","scope":1721,"src":"6617:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1690,"name":"bytes","nodeType":"ElementaryTypeName","src":"6617:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1693,"mutability":"mutable","name":"errorMessage","nameLocation":"6658:12:10","nodeType":"VariableDeclaration","scope":1721,"src":"6644:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1692,"name":"string","nodeType":"ElementaryTypeName","src":"6644:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6583:93:10"},"returnParameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1721,"src":"6695:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1695,"name":"bytes","nodeType":"ElementaryTypeName","src":"6695:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6694:14:10"},"scope":1753,"src":"6554:387:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1751,"nodeType":"Block","src":"7321:532:10","statements":[{"condition":{"id":1733,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"7335:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1749,"nodeType":"Block","src":"7392:455:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1737,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"7476:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7487:6:10","memberName":"length","nodeType":"MemberAccess","src":"7476:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7496:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7476:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1747,"nodeType":"Block","src":"7784:53:10","statements":[{"expression":{"arguments":[{"id":1744,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"7809:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1743,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7802:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1746,"nodeType":"ExpressionStatement","src":"7802:20:10"}]},"id":1748,"nodeType":"IfStatement","src":"7472:365:10","trueBody":{"id":1742,"nodeType":"Block","src":"7499:279:10","statements":[{"AST":{"nodeType":"YulBlock","src":"7619:145:10","statements":[{"nodeType":"YulVariableDeclaration","src":"7641:40:10","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7670:10:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7664:5:10"},"nodeType":"YulFunctionCall","src":"7664:17:10"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7645:15:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7713:2:10","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7717:10:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7709:3:10"},"nodeType":"YulFunctionCall","src":"7709:19:10"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7730:15:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7702:6:10"},"nodeType":"YulFunctionCall","src":"7702:44:10"},"nodeType":"YulExpressionStatement","src":"7702:44:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1726,"isOffset":false,"isSlot":false,"src":"7670:10:10","valueSize":1},{"declaration":1726,"isOffset":false,"isSlot":false,"src":"7717:10:10","valueSize":1}],"id":1741,"nodeType":"InlineAssembly","src":"7610:154:10"}]}}]},"id":1750,"nodeType":"IfStatement","src":"7331:516:10","trueBody":{"id":1736,"nodeType":"Block","src":"7344:42:10","statements":[{"expression":{"id":1734,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"7365:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1732,"id":1735,"nodeType":"Return","src":"7358:17:10"}]}}]},"documentation":{"id":1722,"nodeType":"StructuredDocumentation","src":"6947:209:10","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":1752,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7170:16:10","nodeType":"FunctionDefinition","parameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"success","nameLocation":"7201:7:10","nodeType":"VariableDeclaration","scope":1752,"src":"7196:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1723,"name":"bool","nodeType":"ElementaryTypeName","src":"7196:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1726,"mutability":"mutable","name":"returndata","nameLocation":"7231:10:10","nodeType":"VariableDeclaration","scope":1752,"src":"7218:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1725,"name":"bytes","nodeType":"ElementaryTypeName","src":"7218:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1728,"mutability":"mutable","name":"errorMessage","nameLocation":"7265:12:10","nodeType":"VariableDeclaration","scope":1752,"src":"7251:26:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1727,"name":"string","nodeType":"ElementaryTypeName","src":"7251:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7186:97:10"},"returnParameters":{"id":1732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1752,"src":"7307:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1730,"name":"bytes","nodeType":"ElementaryTypeName","src":"7307:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7306:14:10"},"scope":1753,"src":"7161:692:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1754,"src":"126:7729:10","usedErrors":[]}],"src":"33:7823:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1775]},"id":1776,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1755,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1756,"nodeType":"StructuredDocumentation","src":"58:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1775,"linearizedBaseContracts":[1775],"name":"Context","nameLocation":"573:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1764,"nodeType":"Block","src":"649:34:11","statements":[{"expression":{"expression":{"id":1761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"666:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"670:6:11","memberName":"sender","nodeType":"MemberAccess","src":"666:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1760,"id":1763,"nodeType":"Return","src":"659:17:11"}]},"id":1765,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"596:10:11","nodeType":"FunctionDefinition","parameters":{"id":1757,"nodeType":"ParameterList","parameters":[],"src":"606:2:11"},"returnParameters":{"id":1760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1765,"src":"640:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1758,"name":"address","nodeType":"ElementaryTypeName","src":"640:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"639:9:11"},"scope":1775,"src":"587:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1773,"nodeType":"Block","src":"756:32:11","statements":[{"expression":{"expression":{"id":1770,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"773:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"777:4:11","memberName":"data","nodeType":"MemberAccess","src":"773:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1769,"id":1772,"nodeType":"Return","src":"766:15:11"}]},"id":1774,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"698:8:11","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[],"src":"706:2:11"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1774,"src":"740:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1767,"name":"bytes","nodeType":"ElementaryTypeName","src":"740:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"739:16:11"},"scope":1775,"src":"689:99:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1776,"src":"555:235:11","usedErrors":[]}],"src":"33:758:11"},"id":11},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[1978]},"id":1979,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1777,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"58:34:12","text":" @dev String operations."},"fullyImplemented":true,"id":1978,"linearizedBaseContracts":[1978],"name":"Strings","nameLocation":"101:7:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1781,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"140:12:12","nodeType":"VariableDeclaration","scope":1978,"src":"115:58:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1779,"name":"bytes16","nodeType":"ElementaryTypeName","src":"115:7:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"155:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"body":{"id":1859,"nodeType":"Block","src":"346:632:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"548:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"548:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1795,"nodeType":"IfStatement","src":"544:51:12","trueBody":{"id":1794,"nodeType":"Block","src":"560:35:12","statements":[{"expression":{"hexValue":"30","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"581:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":1788,"id":1793,"nodeType":"Return","src":"574:10:12"}]}},{"assignments":[1797],"declarations":[{"constant":false,"id":1797,"mutability":"mutable","name":"temp","nameLocation":"612:4:12","nodeType":"VariableDeclaration","scope":1859,"src":"604:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1799,"initialValue":{"id":1798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"619:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"604:20:12"},{"assignments":[1801],"declarations":[{"constant":false,"id":1801,"mutability":"mutable","name":"digits","nameLocation":"642:6:12","nodeType":"VariableDeclaration","scope":1859,"src":"634:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1802,"nodeType":"VariableDeclarationStatement","src":"634:14:12"},{"body":{"id":1813,"nodeType":"Block","src":"676:57:12","statements":[{"expression":{"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"690:8:12","subExpression":{"id":1806,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"690:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1808,"nodeType":"ExpressionStatement","src":"690:8:12"},{"expression":{"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1809,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"712:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"720:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"712:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1812,"nodeType":"ExpressionStatement","src":"712:10:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1803,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"665:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"673:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"665:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1814,"nodeType":"WhileStatement","src":"658:75:12"},{"assignments":[1816],"declarations":[{"constant":false,"id":1816,"mutability":"mutable","name":"buffer","nameLocation":"755:6:12","nodeType":"VariableDeclaration","scope":1859,"src":"742:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1815,"name":"bytes","nodeType":"ElementaryTypeName","src":"742:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1821,"initialValue":{"arguments":[{"id":1819,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"774:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"764:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1817,"name":"bytes","nodeType":"ElementaryTypeName","src":"768:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"764:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"742:39:12"},{"body":{"id":1852,"nodeType":"Block","src":"810:131:12","statements":[{"expression":{"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1825,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"824:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"834:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"824:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1828,"nodeType":"ExpressionStatement","src":"824:11:12"},{"expression":{"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1829,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"849:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1831,"indexExpression":{"id":1830,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"856:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"849:14:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"879:2:12","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"892:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"900:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"892:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"884:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:12","typeDescriptions":{}}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"884:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"879:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"873:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1834,"name":"uint8","nodeType":"ElementaryTypeName","src":"873:5:12","typeDescriptions":{}}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"873:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"866:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1832,"name":"bytes1","nodeType":"ElementaryTypeName","src":"866:6:12","typeDescriptions":{}}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"866:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"849:56:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1847,"nodeType":"ExpressionStatement","src":"849:56:12"},{"expression":{"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"919:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"928:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"919:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1851,"nodeType":"ExpressionStatement","src":"919:11:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"798:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"807:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"798:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1853,"nodeType":"WhileStatement","src":"791:150:12"},{"expression":{"arguments":[{"id":1856,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"964:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"957:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1854,"name":"string","nodeType":"ElementaryTypeName","src":"957:6:12","typeDescriptions":{}}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"957:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1788,"id":1858,"nodeType":"Return","src":"950:21:12"}]},"documentation":{"id":1782,"nodeType":"StructuredDocumentation","src":"180:90:12","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1860,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"284:8:12","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1784,"mutability":"mutable","name":"value","nameLocation":"301:5:12","nodeType":"VariableDeclaration","scope":1860,"src":"293:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"293:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"292:15:12"},"returnParameters":{"id":1788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1860,"src":"331:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1786,"name":"string","nodeType":"ElementaryTypeName","src":"331:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"330:15:12"},"scope":1978,"src":"275:703:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1900,"nodeType":"Block","src":"1157:255:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"1171:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1180:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1171:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1874,"nodeType":"IfStatement","src":"1167:54:12","trueBody":{"id":1873,"nodeType":"Block","src":"1183:38:12","statements":[{"expression":{"hexValue":"30783030","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1204:6:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":1867,"id":1872,"nodeType":"Return","src":"1197:13:12"}]}},{"assignments":[1876],"declarations":[{"constant":false,"id":1876,"mutability":"mutable","name":"temp","nameLocation":"1238:4:12","nodeType":"VariableDeclaration","scope":1900,"src":"1230:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1878,"initialValue":{"id":1877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"1245:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1230:20:12"},{"assignments":[1880],"declarations":[{"constant":false,"id":1880,"mutability":"mutable","name":"length","nameLocation":"1268:6:12","nodeType":"VariableDeclaration","scope":1900,"src":"1260:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1879,"name":"uint256","nodeType":"ElementaryTypeName","src":"1260:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1882,"initialValue":{"hexValue":"30","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1277:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1260:18:12"},{"body":{"id":1893,"nodeType":"Block","src":"1306:57:12","statements":[{"expression":{"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1320:8:12","subExpression":{"id":1886,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"1320:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1888,"nodeType":"ExpressionStatement","src":"1320:8:12"},{"expression":{"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1889,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"1342:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1351:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1342:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1892,"nodeType":"ExpressionStatement","src":"1342:10:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1883,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"1295:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1303:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1295:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1894,"nodeType":"WhileStatement","src":"1288:75:12"},{"expression":{"arguments":[{"id":1896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"1391:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1897,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"1398:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1895,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1901,1977],"referencedDeclaration":1977,"src":"1379:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1379:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1867,"id":1899,"nodeType":"Return","src":"1372:33:12"}]},"documentation":{"id":1861,"nodeType":"StructuredDocumentation","src":"984:94:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1092:11:12","nodeType":"FunctionDefinition","parameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"value","nameLocation":"1112:5:12","nodeType":"VariableDeclaration","scope":1901,"src":"1104:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1862,"name":"uint256","nodeType":"ElementaryTypeName","src":"1104:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1103:15:12"},"returnParameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"1142:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1865,"name":"string","nodeType":"ElementaryTypeName","src":"1142:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1141:15:12"},"scope":1978,"src":"1083:329:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1976,"nodeType":"Block","src":"1625:351:12","statements":[{"assignments":[1912],"declarations":[{"constant":false,"id":1912,"mutability":"mutable","name":"buffer","nameLocation":"1648:6:12","nodeType":"VariableDeclaration","scope":1976,"src":"1635:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1911,"name":"bytes","nodeType":"ElementaryTypeName","src":"1635:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1921,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1667:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1916,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"1671:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1667:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1680:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1667:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1657:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1913,"name":"bytes","nodeType":"ElementaryTypeName","src":"1661:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1657:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1635:47:12"},{"expression":{"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1922,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"1692:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1924,"indexExpression":{"hexValue":"30","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1699:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1692:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1704:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1692:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1927,"nodeType":"ExpressionStatement","src":"1692:15:12"},{"expression":{"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1928,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"1717:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1930,"indexExpression":{"hexValue":"31","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1717:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1729:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1717:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1933,"nodeType":"ExpressionStatement","src":"1717:15:12"},{"body":{"id":1962,"nodeType":"Block","src":"1787:87:12","statements":[{"expression":{"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1948,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"1801:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1950,"indexExpression":{"id":1949,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"1808:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1801:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1951,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"1813:12:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1955,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"1826:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1826:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1813:25:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1801:37:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1957,"nodeType":"ExpressionStatement","src":"1801:37:12"},{"expression":{"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"1852:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1862:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1852:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1961,"nodeType":"ExpressionStatement","src":"1852:11:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1942,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"1775:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1779:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1775:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1963,"initializationExpression":{"assignments":[1935],"declarations":[{"constant":false,"id":1935,"mutability":"mutable","name":"i","nameLocation":"1755:1:12","nodeType":"VariableDeclaration","scope":1963,"src":"1747:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1941,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1937,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"1763:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1759:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1772:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1759:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1747:26:12"},"loopExpression":{"expression":{"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1782:3:12","subExpression":{"id":1945,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"1784:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1947,"nodeType":"ExpressionStatement","src":"1782:3:12"},"nodeType":"ForStatement","src":"1742:132:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"1891:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1900:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1891:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1903:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1964,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1883:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1883:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1970,"nodeType":"ExpressionStatement","src":"1883:55:12"},{"expression":{"arguments":[{"id":1973,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"1962:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1955:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1971,"name":"string","nodeType":"ElementaryTypeName","src":"1955:6:12","typeDescriptions":{}}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1955:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1910,"id":1975,"nodeType":"Return","src":"1948:21:12"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"1418:112:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1977,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1544:11:12","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"value","nameLocation":"1564:5:12","nodeType":"VariableDeclaration","scope":1977,"src":"1556:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"1556:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"length","nameLocation":"1579:6:12","nodeType":"VariableDeclaration","scope":1977,"src":"1571:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1571:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1555:31:12"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1977,"src":"1610:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1908,"name":"string","nodeType":"ElementaryTypeName","src":"1610:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1609:15:12"},"scope":1978,"src":"1535:441:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1979,"src":"93:1885:12","usedErrors":[]}],"src":"33:1946:12"},"id":12},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2002],"IERC165":[2014]},"id":2003,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1980,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:13"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1981,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2003,"sourceUnit":2015,"src":"58:23:13","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1983,"name":"IERC165","nameLocations":["688:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2014,"src":"688:7:13"},"id":1984,"nodeType":"InheritanceSpecifier","src":"688:7:13"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1982,"nodeType":"StructuredDocumentation","src":"83:576:13","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2002,"linearizedBaseContracts":[2002,2014],"name":"ERC165","nameLocation":"678:6:13","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2013],"body":{"id":2000,"nodeType":"Block","src":"854:64:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1993,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1987,"src":"871:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1995,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"891:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2014_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2014_$","typeString":"type(contract IERC165)"}],"id":1994,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"886:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"886:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2014","typeString":"type(contract IERC165)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"900:11:13","memberName":"interfaceId","nodeType":"MemberAccess","src":"886:25:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"871:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1992,"id":1999,"nodeType":"Return","src":"864:47:13"}]},"documentation":{"id":1985,"nodeType":"StructuredDocumentation","src":"702:56:13","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2001,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:13","nodeType":"FunctionDefinition","overrides":{"id":1989,"nodeType":"OverrideSpecifier","overrides":[],"src":"830:8:13"},"parameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:13","nodeType":"VariableDeclaration","scope":2001,"src":"790:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1986,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:13"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2001,"src":"848:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1990,"name":"bool","nodeType":"ElementaryTypeName","src":"848:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"847:6:13"},"scope":2002,"src":"763:155:13","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2003,"src":"660:260:13","usedErrors":[]}],"src":"33:888:13"},"id":13},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2014]},"id":2015,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2004,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"58:279:14","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2014,"linearizedBaseContracts":[2014],"name":"IERC165","nameLocation":"348:7:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2006,"nodeType":"StructuredDocumentation","src":"362:340:14","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2013,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"716:17:14","nodeType":"FunctionDefinition","parameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2008,"mutability":"mutable","name":"interfaceId","nameLocation":"741:11:14","nodeType":"VariableDeclaration","scope":2013,"src":"734:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2007,"name":"bytes4","nodeType":"ElementaryTypeName","src":"734:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"733:20:14"},"returnParameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2013,"src":"777:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2010,"name":"bool","nodeType":"ElementaryTypeName","src":"777:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"776:6:14"},"scope":2014,"src":"707:76:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2015,"src":"338:447:14","usedErrors":[]}],"src":"33:753:14"},"id":14},"contracts/RandomIpfsNft.sol":{"ast":{"absolutePath":"contracts/RandomIpfsNft.sol","exportedSymbols":{"Address":[1753],"ConfirmedOwner":[115],"ConfirmedOwnerWithProposal":[277],"Context":[1775],"ERC165":[2002],"ERC721":[1167],"ERC721URIStorage":[1429],"IERC165":[2014],"IERC721":[1283],"IERC721Metadata":[1456],"IERC721Receiver":[1301],"IOwnable":[293],"RandomIpfsNft":[2370],"RandomIpfsNft__NeedMoreETHSent":[2024],"RandomIpfsNft__RangeOutOfBounds":[2022],"RandomIpfsNft__TransferFailed":[2026],"Strings":[1978],"VRFConsumerBaseV2":[351],"VRFCoordinatorV2Interface":[95]},"id":2371,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2016,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":2017,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2371,"sourceUnit":1430,"src":"58:78:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":2018,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2371,"sourceUnit":96,"src":"137:80:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","id":2019,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2371,"sourceUnit":352,"src":"218:65:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","file":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","id":2020,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2371,"sourceUnit":116,"src":"284:72:15","symbolAliases":[],"unitAlias":""},{"errorSelector":"12806c9d","id":2022,"name":"RandomIpfsNft__RangeOutOfBounds","nameLocation":"364:31:15","nodeType":"ErrorDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[],"src":"395:2:15"},"src":"358:40:15"},{"errorSelector":"b90f4910","id":2024,"name":"RandomIpfsNft__NeedMoreETHSent","nameLocation":"405:30:15","nodeType":"ErrorDefinition","parameters":{"id":2023,"nodeType":"ParameterList","parameters":[],"src":"435:2:15"},"src":"399:39:15"},{"errorSelector":"ca7e25b7","id":2026,"name":"RandomIpfsNft__TransferFailed","nameLocation":"445:29:15","nodeType":"ErrorDefinition","parameters":{"id":2025,"nodeType":"ParameterList","parameters":[],"src":"474:2:15"},"src":"439:38:15"},{"abstract":false,"baseContracts":[{"baseName":{"id":2027,"name":"VRFConsumerBaseV2","nameLocations":["505:17:15"],"nodeType":"IdentifierPath","referencedDeclaration":351,"src":"505:17:15"},"id":2028,"nodeType":"InheritanceSpecifier","src":"505:17:15"},{"baseName":{"id":2029,"name":"ERC721URIStorage","nameLocations":["524:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":1429,"src":"524:16:15"},"id":2030,"nodeType":"InheritanceSpecifier","src":"524:16:15"},{"baseName":{"id":2031,"name":"ConfirmedOwner","nameLocations":["542:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":115,"src":"542:14:15"},"id":2032,"nodeType":"InheritanceSpecifier","src":"542:14:15"}],"canonicalName":"RandomIpfsNft","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2370,"linearizedBaseContracts":[2370,115,277,293,1429,1167,1456,1283,2002,2014,1775,351],"name":"RandomIpfsNft","nameLocation":"488:13:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"RandomIpfsNft.Breed","id":2036,"members":[{"id":2033,"name":"PUG","nameLocation":"608:3:15","nodeType":"EnumValue","src":"608:3:15"},{"id":2034,"name":"SHIBA_UNU","nameLocation":"621:9:15","nodeType":"EnumValue","src":"621:9:15"},{"id":2035,"name":"ST_BERNARD","nameLocation":"640:10:15","nodeType":"EnumValue","src":"640:10:15"}],"name":"Breed","nameLocation":"592:5:15","nodeType":"EnumDefinition","src":"587:69:15"},{"constant":false,"id":2039,"mutability":"immutable","name":"i_vrfCoordinatorV2","nameLocation":"736:18:15","nodeType":"VariableDeclaration","scope":2370,"src":"692:62:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":2038,"nodeType":"UserDefinedTypeName","pathNode":{"id":2037,"name":"VRFCoordinatorV2Interface","nameLocations":["692:25:15"],"nodeType":"IdentifierPath","referencedDeclaration":95,"src":"692:25:15"},"referencedDeclaration":95,"src":"692:25:15","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"constant":false,"id":2041,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"785:16:15","nodeType":"VariableDeclaration","scope":2370,"src":"760:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2040,"name":"uint64","nodeType":"ElementaryTypeName","src":"760:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":2043,"mutability":"immutable","name":"i_gasLane","nameLocation":"833:9:15","nodeType":"VariableDeclaration","scope":2370,"src":"807:35:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"807:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2045,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"873:18:15","nodeType":"VariableDeclaration","scope":2370,"src":"848:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2044,"name":"uint32","nodeType":"ElementaryTypeName","src":"848:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":2048,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"921:21:15","nodeType":"VariableDeclaration","scope":2370,"src":"897:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2046,"name":"uint16","nodeType":"ElementaryTypeName","src":"897:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"945:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":2051,"mutability":"constant","name":"NUM_WORDS","nameLocation":"976:9:15","nodeType":"VariableDeclaration","scope":2370,"src":"952:37:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2049,"name":"uint32","nodeType":"ElementaryTypeName","src":"952:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"988:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"functionSelector":"a36f573b","id":2055,"mutability":"mutable","name":"s_requestIdToSender","nameLocation":"1049:19:15","nodeType":"VariableDeclaration","scope":2370,"src":"1014:54:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2054,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"1022:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1014:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2053,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"0b21a83b","id":2057,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"1110:14:15","nodeType":"VariableDeclaration","scope":2370,"src":"1095:29:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"1095:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"id":2060,"mutability":"constant","name":"MAX_CHANCE_VALUE","nameLocation":"1156:16:15","nodeType":"VariableDeclaration","scope":2370,"src":"1130:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1130:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1175:3:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"constant":false,"id":2063,"mutability":"mutable","name":"s_dogTokenUris","nameLocation":"1202:14:15","nodeType":"VariableDeclaration","scope":2370,"src":"1184:32:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":2061,"name":"string","nodeType":"ElementaryTypeName","src":"1184:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2062,"nodeType":"ArrayTypeName","src":"1184:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2065,"mutability":"immutable","name":"i_mintFee","nameLocation":"1240:9:15","nodeType":"VariableDeclaration","scope":2370,"src":"1222:27:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2064,"name":"uint256","nodeType":"ElementaryTypeName","src":"1222:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"f873236e6cc0ecc5be1a9a35c95ee5b8d1ac4cc7bfef0cc5060391d6cc98e26b","id":2071,"name":"NftRequested","nameLocation":"1275:12:15","nodeType":"EventDefinition","parameters":{"id":2070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2067,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1304:9:15","nodeType":"VariableDeclaration","scope":2071,"src":"1288:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1288:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2069,"indexed":false,"mutability":"mutable","name":"requester","nameLocation":"1323:9:15","nodeType":"VariableDeclaration","scope":2071,"src":"1315:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2068,"name":"address","nodeType":"ElementaryTypeName","src":"1315:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1287:46:15"},"src":"1269:65:15"},{"anonymous":false,"eventSelector":"8a269f26b688e110e9cbd887d163dab35cae678fa353a0292de532c0cac1ecdc","id":2078,"name":"NftMinted","nameLocation":"1345:9:15","nodeType":"EventDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"indexed":false,"mutability":"mutable","name":"dogBreed","nameLocation":"1361:8:15","nodeType":"VariableDeclaration","scope":2078,"src":"1355:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2036","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":2073,"nodeType":"UserDefinedTypeName","pathNode":{"id":2072,"name":"Breed","nameLocations":["1355:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"1355:5:15"},"referencedDeclaration":2036,"src":"1355:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2036","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"},{"constant":false,"id":2076,"indexed":false,"mutability":"mutable","name":"minter","nameLocation":"1379:6:15","nodeType":"VariableDeclaration","scope":2078,"src":"1371:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2075,"name":"address","nodeType":"ElementaryTypeName","src":"1371:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1354:32:15"},"src":"1339:48:15"},{"body":{"id":2132,"nodeType":"Block","src":"1722:268:15","statements":[{"expression":{"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2106,"name":"i_vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1732:18:15","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2108,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"1779:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2107,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"1753:25:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$95_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1753:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"}},"src":"1732:64:15","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"}},"id":2111,"nodeType":"ExpressionStatement","src":"1732:64:15"},{"expression":{"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2112,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"1806:16:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2113,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"1825:14:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1806:33:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":2115,"nodeType":"ExpressionStatement","src":"1806:33:15"},{"expression":{"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2116,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"1849:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2117,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"1861:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1849:19:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2119,"nodeType":"ExpressionStatement","src":"1849:19:15"},{"expression":{"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2120,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"1878:18:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2121,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"1899:16:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1878:37:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2123,"nodeType":"ExpressionStatement","src":"1878:37:15"},{"expression":{"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2124,"name":"s_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"1925:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2125,"name":"dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"1942:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string memory[3] memory"}},"src":"1925:29:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":2127,"nodeType":"ExpressionStatement","src":"1925:29:15"},{"expression":{"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2128,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"1964:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2129,"name":"mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"1976:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1964:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2131,"nodeType":"ExpressionStatement","src":"1964:19:15"}]},"id":2133,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2095,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"1624:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2096,"kind":"baseConstructorSpecifier","modifierName":{"id":2094,"name":"VRFConsumerBaseV2","nameLocations":["1606:17:15"],"nodeType":"IdentifierPath","referencedDeclaration":351,"src":"1606:17:15"},"nodeType":"ModifierInvocation","src":"1606:35:15"},{"arguments":[{"hexValue":"52616e646f6d2049504653204e4654","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1657:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_060d1bdab5c66f2c3459267e43d1a510b3c61ad39afb4b1b9b944fbc6d6a9661","typeString":"literal_string \"Random IPFS NFT\""},"value":"Random IPFS NFT"},{"hexValue":"52494e","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1676:5:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c2493aacafadd9e7cfb3e25fe184ffa39fa77c9794b3bfc81822f04194b6f764","typeString":"literal_string \"RIN\""},"value":"RIN"}],"id":2100,"kind":"baseConstructorSpecifier","modifierName":{"id":2097,"name":"ERC721","nameLocations":["1650:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1167,"src":"1650:6:15"},"nodeType":"ModifierInvocation","src":"1650:32:15"},{"arguments":[{"expression":{"id":2102,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1706:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1706:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2104,"kind":"baseConstructorSpecifier","modifierName":{"id":2101,"name":"ConfirmedOwner","nameLocations":["1691:14:15"],"nodeType":"IdentifierPath","referencedDeclaration":115,"src":"1691:14:15"},"nodeType":"ModifierInvocation","src":"1691:26:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2080,"mutability":"mutable","name":"vrfCoordinatorV2","nameLocation":"1422:16:15","nodeType":"VariableDeclaration","scope":2133,"src":"1414:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2079,"name":"address","nodeType":"ElementaryTypeName","src":"1414:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2082,"mutability":"mutable","name":"subscriptionId","nameLocation":"1455:14:15","nodeType":"VariableDeclaration","scope":2133,"src":"1448:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2081,"name":"uint64","nodeType":"ElementaryTypeName","src":"1448:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2084,"mutability":"mutable","name":"gasLane","nameLocation":"1487:7:15","nodeType":"VariableDeclaration","scope":2133,"src":"1479:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1479:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2086,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1511:16:15","nodeType":"VariableDeclaration","scope":2133,"src":"1504:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2085,"name":"uint32","nodeType":"ElementaryTypeName","src":"1504:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2090,"mutability":"mutable","name":"dogTokenUris","nameLocation":"1554:12:15","nodeType":"VariableDeclaration","scope":2133,"src":"1537:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string[3]"},"typeName":{"baseType":{"id":2087,"name":"string","nodeType":"ElementaryTypeName","src":"1537:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2089,"length":{"hexValue":"33","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1544:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"1537:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$3_storage_ptr","typeString":"string[3]"}},"visibility":"internal"},{"constant":false,"id":2092,"mutability":"mutable","name":"mintFee","nameLocation":"1584:7:15","nodeType":"VariableDeclaration","scope":2133,"src":"1576:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"1576:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1404:193:15"},"returnParameters":{"id":2105,"nodeType":"ParameterList","parameters":[],"src":"1722:0:15"},"scope":2370,"src":"1393:597:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2171,"nodeType":"Block","src":"2061:422:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2138,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2075:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2079:5:15","memberName":"value","nodeType":"MemberAccess","src":"2075:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2140,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"2087:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2075:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2146,"nodeType":"IfStatement","src":"2071:91:15","trueBody":{"id":2145,"nodeType":"Block","src":"2098:64:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2142,"name":"RandomIpfsNft__NeedMoreETHSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"2119:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2119:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2144,"nodeType":"RevertStatement","src":"2112:39:15"}]}},{"expression":{"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2147,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"2171:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2150,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"2234:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2151,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"2257:16:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2152,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"2287:21:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2153,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"2322:18:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2154,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"2354:9:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":2148,"name":"i_vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"2183:18:15","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$95","typeString":"contract VRFCoordinatorV2Interface"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2202:18:15","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":28,"src":"2183:37:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2183:190:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2171:202:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2157,"nodeType":"ExpressionStatement","src":"2171:202:15"},{"expression":{"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2158,"name":"s_requestIdToSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"2383:19:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2160,"indexExpression":{"id":2159,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"2403:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2383:30:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2161,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2416:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2420:6:15","memberName":"sender","nodeType":"MemberAccess","src":"2416:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2383:43:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2164,"nodeType":"ExpressionStatement","src":"2383:43:15"},{"eventCall":{"arguments":[{"id":2166,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"2454:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2167,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2465:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2469:6:15","memberName":"sender","nodeType":"MemberAccess","src":"2465:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2165,"name":"NftRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"2441:12:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2441:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2170,"nodeType":"EmitStatement","src":"2436:40:15"}]},"functionSelector":"aa152491","id":2172,"implemented":true,"kind":"function","modifiers":[],"name":"requestNft","nameLocation":"2005:10:15","nodeType":"FunctionDefinition","parameters":{"id":2134,"nodeType":"ParameterList","parameters":[],"src":"2015:2:15"},"returnParameters":{"id":2137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2136,"mutability":"mutable","name":"requestId","nameLocation":"2050:9:15","nodeType":"VariableDeclaration","scope":2172,"src":"2042:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2135,"name":"uint256","nodeType":"ElementaryTypeName","src":"2042:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:19:15"},"scope":2370,"src":"1996:487:15","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[324],"body":{"id":2230,"nodeType":"Block","src":"2584:415:15","statements":[{"assignments":[2182],"declarations":[{"constant":false,"id":2182,"mutability":"mutable","name":"dogOwner","nameLocation":"2602:8:15","nodeType":"VariableDeclaration","scope":2230,"src":"2594:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2181,"name":"address","nodeType":"ElementaryTypeName","src":"2594:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2186,"initialValue":{"baseExpression":{"id":2183,"name":"s_requestIdToSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"2613:19:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2185,"indexExpression":{"id":2184,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"2633:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2613:30:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2594:49:15"},{"assignments":[2188],"declarations":[{"constant":false,"id":2188,"mutability":"mutable","name":"newTokenId","nameLocation":"2661:10:15","nodeType":"VariableDeclaration","scope":2230,"src":"2653:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2187,"name":"uint256","nodeType":"ElementaryTypeName","src":"2653:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2190,"initialValue":{"id":2189,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"2674:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2653:35:15"},{"assignments":[2192],"declarations":[{"constant":false,"id":2192,"mutability":"mutable","name":"moddedRng","nameLocation":"2706:9:15","nodeType":"VariableDeclaration","scope":2230,"src":"2698:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"2698:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2198,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2193,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"2718:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2195,"indexExpression":{"hexValue":"30","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2730:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2718:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2196,"name":"MAX_CHANCE_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"2735:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2718:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2698:53:15"},{"assignments":[2201],"declarations":[{"constant":false,"id":2201,"mutability":"mutable","name":"dogBreed","nameLocation":"2767:8:15","nodeType":"VariableDeclaration","scope":2230,"src":"2761:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2036","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":2200,"nodeType":"UserDefinedTypeName","pathNode":{"id":2199,"name":"Breed","nameLocations":["2761:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"2761:5:15"},"referencedDeclaration":2036,"src":"2761:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2036","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"}],"id":2205,"initialValue":{"arguments":[{"id":2203,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"2800:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2202,"name":"getBreedFromModdedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"2778:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_enum$_Breed_$2036_$","typeString":"function (uint256) pure returns (enum RandomIpfsNft.Breed)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2778:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2036","typeString":"enum RandomIpfsNft.Breed"}},"nodeType":"VariableDeclarationStatement","src":"2761:49:15"},{"expression":{"arguments":[{"id":2207,"name":"dogOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"2830:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2208,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"2840:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2206,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[863,892],"referencedDeclaration":863,"src":"2820:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2820:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2210,"nodeType":"ExpressionStatement","src":"2820:31:15"},{"expression":{"arguments":[{"id":2212,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"2874:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2213,"name":"s_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2886:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":2218,"indexExpression":{"arguments":[{"id":2216,"name":"dogBreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"2909:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2036","typeString":"enum RandomIpfsNft.Breed"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Breed_$2036","typeString":"enum RandomIpfsNft.Breed"}],"id":2215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2901:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2214,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:15","typeDescriptions":{}}},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2901:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2886:33:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2211,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"2861:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2861:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2220,"nodeType":"ExpressionStatement","src":"2861:59:15"},{"expression":{"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2930:16:15","subExpression":{"id":2221,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"2930:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2223,"nodeType":"ExpressionStatement","src":"2930:16:15"},{"eventCall":{"arguments":[{"id":2225,"name":"dogBreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"2971:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2036","typeString":"enum RandomIpfsNft.Breed"}},{"expression":{"id":2226,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2981:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2985:6:15","memberName":"sender","nodeType":"MemberAccess","src":"2981:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Breed_$2036","typeString":"enum RandomIpfsNft.Breed"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2224,"name":"NftMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"2961:9:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_Breed_$2036_$_t_address_$returns$__$","typeString":"function (enum RandomIpfsNft.Breed,address)"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2961:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2229,"nodeType":"EmitStatement","src":"2956:36:15"}]},"id":2231,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"2498:18:15","nodeType":"FunctionDefinition","overrides":{"id":2179,"nodeType":"OverrideSpecifier","overrides":[],"src":"2575:8:15"},"parameters":{"id":2178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"requestId","nameLocation":"2525:9:15","nodeType":"VariableDeclaration","scope":2231,"src":"2517:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2173,"name":"uint256","nodeType":"ElementaryTypeName","src":"2517:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2177,"mutability":"mutable","name":"randomWords","nameLocation":"2553:11:15","nodeType":"VariableDeclaration","scope":2231,"src":"2536:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"2536:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2176,"nodeType":"ArrayTypeName","src":"2536:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2516:49:15"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[],"src":"2584:0:15"},"scope":2370,"src":"2489:510:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2264,"nodeType":"Block","src":"3042:213:15","statements":[{"assignments":[2237],"declarations":[{"constant":false,"id":2237,"mutability":"mutable","name":"amount","nameLocation":"3060:6:15","nodeType":"VariableDeclaration","scope":2264,"src":"3052:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"3052:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2243,"initialValue":{"expression":{"arguments":[{"id":2240,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3077:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_RandomIpfsNft_$2370","typeString":"contract RandomIpfsNft"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RandomIpfsNft_$2370","typeString":"contract RandomIpfsNft"}],"id":2239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3069:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2238,"name":"address","nodeType":"ElementaryTypeName","src":"3069:7:15","typeDescriptions":{}}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3069:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3083:7:15","memberName":"balance","nodeType":"MemberAccess","src":"3069:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3052:38:15"},{"assignments":[2245,null],"declarations":[{"constant":false,"id":2245,"mutability":"mutable","name":"success","nameLocation":"3106:7:15","nodeType":"VariableDeclaration","scope":2264,"src":"3101:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2244,"name":"bool","nodeType":"ElementaryTypeName","src":"3101:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2256,"initialValue":{"arguments":[{"hexValue":"","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3159:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":2248,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3127:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3131:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3127:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3119:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"3119:8:15","stateMutability":"payable","typeDescriptions":{}}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3119:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3139:4:15","memberName":"call","nodeType":"MemberAccess","src":"3119:24:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2252,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"3151:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3119:39:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3119:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3100:62:15"},{"condition":{"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3176:8:15","subExpression":{"id":2257,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"3177:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2263,"nodeType":"IfStatement","src":"3172:77:15","trueBody":{"id":2262,"nodeType":"Block","src":"3186:63:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2259,"name":"RandomIpfsNft__TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"3207:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3207:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2261,"nodeType":"RevertStatement","src":"3200:38:15"}]}}]},"functionSelector":"3ccfd60b","id":2265,"implemented":true,"kind":"function","modifiers":[{"id":2234,"kind":"modifierInvocation","modifierName":{"id":2233,"name":"onlyOwner","nameLocations":["3032:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":276,"src":"3032:9:15"},"nodeType":"ModifierInvocation","src":"3032:9:15"}],"name":"withdraw","nameLocation":"3014:8:15","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[],"src":"3022:2:15"},"returnParameters":{"id":2235,"nodeType":"ParameterList","parameters":[],"src":"3042:0:15"},"scope":2370,"src":"3005:250:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2327,"nodeType":"Block","src":"3339:418:15","statements":[{"assignments":[2274],"declarations":[{"constant":false,"id":2274,"mutability":"mutable","name":"cumulativeSum","nameLocation":"3357:13:15","nodeType":"VariableDeclaration","scope":2327,"src":"3349:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2276,"initialValue":{"hexValue":"30","id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3373:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3349:25:15"},{"assignments":[2282],"declarations":[{"constant":false,"id":2282,"mutability":"mutable","name":"chanceArray","nameLocation":"3402:11:15","nodeType":"VariableDeclaration","scope":2327,"src":"3384:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2281,"length":{"hexValue":"33","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3392:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"3384:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"id":2285,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2283,"name":"getChanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"3416:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_array$_t_uint256_$3_memory_ptr_$","typeString":"function () pure returns (uint256[3] memory)"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"nodeType":"VariableDeclarationStatement","src":"3384:48:15"},{"body":{"id":2322,"nodeType":"Block","src":"3491:210:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"3509:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2298,"name":"cumulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"3522:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3509:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2300,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"3539:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2301,"name":"cumulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"3551:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":2302,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"3567:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":2304,"indexExpression":{"id":2303,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"3579:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3567:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3551:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3539:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3509:72:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2313,"nodeType":"IfStatement","src":"3505:126:15","trueBody":{"id":2312,"nodeType":"Block","src":"3583:48:15","statements":[{"expression":{"arguments":[{"id":2309,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"3614:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2308,"name":"Breed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"3608:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Breed_$2036_$","typeString":"type(enum RandomIpfsNft.Breed)"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3608:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2036","typeString":"enum RandomIpfsNft.Breed"}},"functionReturnParameters":2272,"id":2311,"nodeType":"Return","src":"3601:15:15"}]}},{"expression":{"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2314,"name":"cumulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"3644:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2315,"name":"cumulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"3660:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":2316,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"3676:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":2318,"indexExpression":{"id":2317,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"3688:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3676:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3660:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3644:46:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2321,"nodeType":"ExpressionStatement","src":"3644:46:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2290,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"3462:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2291,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"3466:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3478:6:15","memberName":"length","nodeType":"MemberAccess","src":"3466:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3462:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2323,"initializationExpression":{"assignments":[2287],"declarations":[{"constant":false,"id":2287,"mutability":"mutable","name":"i","nameLocation":"3455:1:15","nodeType":"VariableDeclaration","scope":2323,"src":"3447:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"3447:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2289,"initialValue":{"hexValue":"30","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3459:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3447:13:15"},"loopExpression":{"expression":{"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3486:3:15","subExpression":{"id":2294,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"3486:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2296,"nodeType":"ExpressionStatement","src":"3486:3:15"},"nodeType":"ForStatement","src":"3442:259:15"},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2324,"name":"RandomIpfsNft__RangeOutOfBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"3717:31:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3717:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2326,"nodeType":"RevertStatement","src":"3710:40:15"}]},"functionSelector":"a51cccf3","id":2328,"implemented":true,"kind":"function","modifiers":[],"name":"getBreedFromModdedRng","nameLocation":"3270:21:15","nodeType":"FunctionDefinition","parameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"moddedRng","nameLocation":"3300:9:15","nodeType":"VariableDeclaration","scope":2328,"src":"3292:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"3292:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3291:19:15"},"returnParameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2328,"src":"3332:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2036","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":2270,"nodeType":"UserDefinedTypeName","pathNode":{"id":2269,"name":"Breed","nameLocations":["3332:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"3332:5:15"},"referencedDeclaration":2036,"src":"3332:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2036","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"}],"src":"3331:7:15"},"scope":2370,"src":"3261:496:15","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":2340,"nodeType":"Block","src":"3829:50:15","statements":[{"expression":{"components":[{"hexValue":"3130","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3847:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},{"hexValue":"3330","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3851:2:15","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},{"id":2337,"name":"MAX_CHANCE_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"3855:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2338,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3846:26:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"functionReturnParameters":2334,"id":2339,"nodeType":"Return","src":"3839:33:15"}]},"functionSelector":"5dacf5f4","id":2341,"implemented":true,"kind":"function","modifiers":[],"name":"getChanceArray","nameLocation":"3772:14:15","nodeType":"FunctionDefinition","parameters":{"id":2329,"nodeType":"ParameterList","parameters":[],"src":"3786:2:15"},"returnParameters":{"id":2334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2341,"src":"3810:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"3810:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2332,"length":{"hexValue":"33","id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3818:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"3810:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"src":"3809:19:15"},"scope":2370,"src":"3763:116:15","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":2348,"nodeType":"Block","src":"3937:33:15","statements":[{"expression":{"id":2346,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"3954:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2345,"id":2347,"nodeType":"Return","src":"3947:16:15"}]},"functionSelector":"7a5caab3","id":2349,"implemented":true,"kind":"function","modifiers":[],"name":"getMintFee","nameLocation":"3894:10:15","nodeType":"FunctionDefinition","parameters":{"id":2342,"nodeType":"ParameterList","parameters":[],"src":"3904:2:15"},"returnParameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2349,"src":"3928:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"3928:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3927:9:15"},"scope":2370,"src":"3885:85:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2360,"nodeType":"Block","src":"4052:45:15","statements":[{"expression":{"baseExpression":{"id":2356,"name":"s_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"4069:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":2358,"indexExpression":{"id":2357,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"4084:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4069:21:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2355,"id":2359,"nodeType":"Return","src":"4062:28:15"}]},"functionSelector":"3af25975","id":2361,"implemented":true,"kind":"function","modifiers":[],"name":"getDogTokenUris","nameLocation":"3985:15:15","nodeType":"FunctionDefinition","parameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"index","nameLocation":"4009:5:15","nodeType":"VariableDeclaration","scope":2361,"src":"4001:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"4001:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4000:15:15"},"returnParameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2361,"src":"4037:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2353,"name":"string","nodeType":"ElementaryTypeName","src":"4037:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4036:15:15"},"scope":2370,"src":"3976:121:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2368,"nodeType":"Block","src":"4160:38:15","statements":[{"expression":{"id":2366,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"4177:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2365,"id":2367,"nodeType":"Return","src":"4170:21:15"}]},"functionSelector":"6e02007d","id":2369,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"4112:15:15","nodeType":"FunctionDefinition","parameters":{"id":2362,"nodeType":"ParameterList","parameters":[],"src":"4127:2:15"},"returnParameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2369,"src":"4151:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2363,"name":"uint256","nodeType":"ElementaryTypeName","src":"4151:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4150:9:15"},"scope":2370,"src":"4103:95:15","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2371,"src":"479:3721:15","usedErrors":[302,2022,2024,2026]}],"src":"32:4169:15"},"id":15}},"contracts":{"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"ConfirmedOwner":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_114":{"entryPoint":null,"id":114,"parameterSlots":1,"returnSlots":0},"@_171":{"entryPoint":null,"id":171,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_255":{"entryPoint":303,"id":255,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":805,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":913,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":840,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":948,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":747,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":640,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":608,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":603,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":764,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":872,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":658,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3327:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"379:81:16","statements":[{"nodeType":"YulAssignment","src":"389:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:16"},"nodeType":"YulFunctionCall","src":"400:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:16","type":""}],"src":"334:126:16"},{"body":{"nodeType":"YulBlock","src":"511:51:16","statements":[{"nodeType":"YulAssignment","src":"521:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:16"},"nodeType":"YulFunctionCall","src":"532:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:16","type":""}],"src":"466:96:16"},{"body":{"nodeType":"YulBlock","src":"611:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:16"},"nodeType":"YulFunctionCall","src":"670:12:16"},"nodeType":"YulExpressionStatement","src":"670:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:16"},"nodeType":"YulFunctionCall","src":"641:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:16"},"nodeType":"YulFunctionCall","src":"631:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:16"},"nodeType":"YulFunctionCall","src":"624:43:16"},"nodeType":"YulIf","src":"621:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:16","type":""}],"src":"568:122:16"},{"body":{"nodeType":"YulBlock","src":"759:80:16","statements":[{"nodeType":"YulAssignment","src":"769:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:16"},"nodeType":"YulFunctionCall","src":"778:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:16"},"nodeType":"YulFunctionCall","src":"800:33:16"},"nodeType":"YulExpressionStatement","src":"800:33:16"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:16","type":""}],"src":"696:143:16"},{"body":{"nodeType":"YulBlock","src":"922:274:16","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:16"},"nodeType":"YulFunctionCall","src":"970:79:16"},"nodeType":"YulExpressionStatement","src":"970:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:16"},"nodeType":"YulFunctionCall","src":"939:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:16"},"nodeType":"YulFunctionCall","src":"935:32:16"},"nodeType":"YulIf","src":"932:119:16"},{"nodeType":"YulBlock","src":"1061:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:16"},"nodeType":"YulFunctionCall","src":"1147:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:16"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:16"},"nodeType":"YulFunctionCall","src":"1115:64:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:16"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:16","type":""}],"src":"845:351:16"},{"body":{"nodeType":"YulBlock","src":"1298:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1315:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1320:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1308:6:16"},"nodeType":"YulFunctionCall","src":"1308:19:16"},"nodeType":"YulExpressionStatement","src":"1308:19:16"},{"nodeType":"YulAssignment","src":"1336:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1355:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1360:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1351:3:16"},"nodeType":"YulFunctionCall","src":"1351:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1336:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1270:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1275:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1286:11:16","type":""}],"src":"1202:169:16"},{"body":{"nodeType":"YulBlock","src":"1483:68:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1505:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1513:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1501:3:16"},"nodeType":"YulFunctionCall","src":"1501:14:16"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"1517:26:16","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1494:6:16"},"nodeType":"YulFunctionCall","src":"1494:50:16"},"nodeType":"YulExpressionStatement","src":"1494:50:16"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1475:6:16","type":""}],"src":"1377:174:16"},{"body":{"nodeType":"YulBlock","src":"1703:220:16","statements":[{"nodeType":"YulAssignment","src":"1713:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1779:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1784:2:16","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1720:58:16"},"nodeType":"YulFunctionCall","src":"1720:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1713:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1885:3:16"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"1796:88:16"},"nodeType":"YulFunctionCall","src":"1796:93:16"},"nodeType":"YulExpressionStatement","src":"1796:93:16"},{"nodeType":"YulAssignment","src":"1898:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1909:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1914:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:16"},"nodeType":"YulFunctionCall","src":"1905:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1898:3:16"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1699:3:16","type":""}],"src":"1557:366:16"},{"body":{"nodeType":"YulBlock","src":"2100:248:16","statements":[{"nodeType":"YulAssignment","src":"2110:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2122:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2118:3:16"},"nodeType":"YulFunctionCall","src":"2118:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2110:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2157:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2168:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:16"},"nodeType":"YulFunctionCall","src":"2153:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2176:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2182:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2172:3:16"},"nodeType":"YulFunctionCall","src":"2172:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2146:6:16"},"nodeType":"YulFunctionCall","src":"2146:47:16"},"nodeType":"YulExpressionStatement","src":"2146:47:16"},{"nodeType":"YulAssignment","src":"2202:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2336:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2210:124:16"},"nodeType":"YulFunctionCall","src":"2210:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2202:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2080:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2095:4:16","type":""}],"src":"1929:419:16"},{"body":{"nodeType":"YulBlock","src":"2460:67:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2482:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2490:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2478:3:16"},"nodeType":"YulFunctionCall","src":"2478:14:16"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"2494:25:16","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2471:6:16"},"nodeType":"YulFunctionCall","src":"2471:49:16"},"nodeType":"YulExpressionStatement","src":"2471:49:16"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2452:6:16","type":""}],"src":"2354:173:16"},{"body":{"nodeType":"YulBlock","src":"2679:220:16","statements":[{"nodeType":"YulAssignment","src":"2689:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2755:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2760:2:16","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2696:58:16"},"nodeType":"YulFunctionCall","src":"2696:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2689:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2861:3:16"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"2772:88:16"},"nodeType":"YulFunctionCall","src":"2772:93:16"},"nodeType":"YulExpressionStatement","src":"2772:93:16"},{"nodeType":"YulAssignment","src":"2874:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2885:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2890:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2881:3:16"},"nodeType":"YulFunctionCall","src":"2881:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2874:3:16"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2667:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2675:3:16","type":""}],"src":"2533:366:16"},{"body":{"nodeType":"YulBlock","src":"3076:248:16","statements":[{"nodeType":"YulAssignment","src":"3086:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3098:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3109:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3094:3:16"},"nodeType":"YulFunctionCall","src":"3094:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3086:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3133:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3144:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3129:3:16"},"nodeType":"YulFunctionCall","src":"3129:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3152:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3158:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3148:3:16"},"nodeType":"YulFunctionCall","src":"3148:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3122:6:16"},"nodeType":"YulFunctionCall","src":"3122:47:16"},"nodeType":"YulExpressionStatement","src":"3122:47:16"},{"nodeType":"YulAssignment","src":"3178:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3312:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3186:124:16"},"nodeType":"YulFunctionCall","src":"3186:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3178:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3056:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3071:4:16","type":""}],"src":"2905:419:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a40380380610a40833981810160405281019061003291906102be565b8060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009a90610348565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610127576101268161012f60201b60201c565b5b5050506103d4565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361019d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610194906103b4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061028b82610260565b9050919050565b61029b81610280565b81146102a657600080fd5b50565b6000815190506102b881610292565b92915050565b6000602082840312156102d4576102d361025b565b5b60006102e2848285016102a9565b91505092915050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006103326018836102eb565b915061033d826102fc565b602082019050919050565b6000602082019050818103600083015261036181610325565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b600061039e6017836102eb565b91506103a982610368565b602082019050919050565b600060208201905081810360008301526103cd81610391565b9050919050565b61065d806103e36000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea2646970667358221220ed3eaba2bf8bbfe4b54a5bd3866fc97822c07aa2ef43128ea23e01b042479a8164736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA40 CODESIZE SUB DUP1 PUSH2 0xA40 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x2BE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A SWAP1 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x127 JUMPI PUSH2 0x126 DUP2 PUSH2 0x12F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP PUSH2 0x3D4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194 SWAP1 PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B DUP3 PUSH2 0x260 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B DUP2 PUSH2 0x280 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B8 DUP2 PUSH2 0x292 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D4 JUMPI PUSH2 0x2D3 PUSH2 0x25B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E2 DUP5 DUP3 DUP6 ADD PUSH2 0x2A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x332 PUSH1 0x18 DUP4 PUSH2 0x2EB JUMP JUMPDEST SWAP2 POP PUSH2 0x33D DUP3 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x361 DUP2 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39E PUSH1 0x17 DUP4 PUSH2 0x2EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3A9 DUP3 PUSH2 0x368 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CD DUP2 PUSH2 0x391 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65D DUP1 PUSH2 0x3E3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED RETURNDATACOPY 0xAB LOG2 0xBF DUP12 0xBF 0xE4 0xB5 0x4A JUMPDEST 0xD3 DUP7 PUSH16 0xC97822C07AA2EF43128EA23E01B04247 SWAP11 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"212:141:1:-:0;;;270:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;327:8;345:1;557::2;537:22;;:8;:22;;;529:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;605:8;595:7;;:18;;;;;;;;;;;;;;;;;;647:1;623:26;;:12;:26;;;619:79;;659:32;678:12;659:18;;;:32;;:::i;:::-;619:79;471:231;;270:81:1;212:141;;1482:188:2;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;88:117:16:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:174::-;1517:26;1513:1;1505:6;1501:14;1494:50;1377:174;:::o;1557:366::-;1699:3;1720:67;1784:2;1779:3;1720:67;:::i;:::-;1713:74;;1796:93;1885:3;1796:93;:::i;:::-;1914:2;1909:3;1905:12;1898:19;;1557:366;;;:::o;1929:419::-;2095:4;2133:2;2122:9;2118:18;2110:26;;2182:9;2176:4;2172:20;2168:1;2157:9;2153:17;2146:47;2210:131;2336:4;2210:131;:::i;:::-;2202:139;;1929:419;;;:::o;2354:173::-;2494:25;2490:1;2482:6;2478:14;2471:49;2354:173;:::o;2533:366::-;2675:3;2696:67;2760:2;2755:3;2696:67;:::i;:::-;2689:74;;2772:93;2861:3;2772:93;:::i;:::-;2890:2;2885:3;2881:12;2874:19;;2533:366;;;:::o;2905:419::-;3071:4;3109:2;3098:9;3094:18;3086:26;;3158:9;3152:4;3148:20;3144:1;3133:9;3129:17;3122:47;3186:131;3312:4;3186:131;:::i;:::-;3178:139;;2905:419;;;:::o;212:141:1:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_255":{"entryPoint":748,"id":255,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_268":{"entryPoint":604,"id":268,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_221":{"entryPoint":138,"id":221,"parameterSlots":0,"returnSlots":0},"@owner_231":{"entryPoint":543,"id":231,"parameterSlots":0,"returnSlots":1},"@transferOwnership_185":{"entryPoint":584,"id":185,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1098,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":1292,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1113,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1327,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1543,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1234,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1080,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1048,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1140,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":1251,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1359,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1467,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1145,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4626:16","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:16","statements":[{"nodeType":"YulAssignment","src":"62:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:16"},"nodeType":"YulFunctionCall","src":"73:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:16","type":""}],"src":"7:126:16"},{"body":{"nodeType":"YulBlock","src":"184:51:16","statements":[{"nodeType":"YulAssignment","src":"194:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:16"},"nodeType":"YulFunctionCall","src":"205:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:16","type":""}],"src":"139:96:16"},{"body":{"nodeType":"YulBlock","src":"306:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:16"},"nodeType":"YulFunctionCall","src":"328:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:16"},"nodeType":"YulFunctionCall","src":"316:37:16"},"nodeType":"YulExpressionStatement","src":"316:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:16","type":""}],"src":"241:118:16"},{"body":{"nodeType":"YulBlock","src":"463:124:16","statements":[{"nodeType":"YulAssignment","src":"473:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:16"},"nodeType":"YulFunctionCall","src":"481:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:16"},"nodeType":"YulFunctionCall","src":"562:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:16"},"nodeType":"YulFunctionCall","src":"509:71:16"},"nodeType":"YulExpressionStatement","src":"509:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:16","type":""}],"src":"365:222:16"},{"body":{"nodeType":"YulBlock","src":"633:35:16","statements":[{"nodeType":"YulAssignment","src":"643:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:16"},"nodeType":"YulFunctionCall","src":"653:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:16","type":""}],"src":"593:75:16"},{"body":{"nodeType":"YulBlock","src":"763:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:16"},"nodeType":"YulFunctionCall","src":"773:12:16"},"nodeType":"YulExpressionStatement","src":"773:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:16"},{"body":{"nodeType":"YulBlock","src":"886:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:16"},"nodeType":"YulFunctionCall","src":"896:12:16"},"nodeType":"YulExpressionStatement","src":"896:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:16"},{"body":{"nodeType":"YulBlock","src":"963:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"1020:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1029:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1032:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1022:6:16"},"nodeType":"YulFunctionCall","src":"1022:12:16"},"nodeType":"YulExpressionStatement","src":"1022:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1011:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"993:17:16"},"nodeType":"YulFunctionCall","src":"993:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"983:2:16"},"nodeType":"YulFunctionCall","src":"983:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"976:6:16"},"nodeType":"YulFunctionCall","src":"976:43:16"},"nodeType":"YulIf","src":"973:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"956:5:16","type":""}],"src":"920:122:16"},{"body":{"nodeType":"YulBlock","src":"1100:87:16","statements":[{"nodeType":"YulAssignment","src":"1110:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1119:12:16"},"nodeType":"YulFunctionCall","src":"1119:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1110:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1148:26:16"},"nodeType":"YulFunctionCall","src":"1148:33:16"},"nodeType":"YulExpressionStatement","src":"1148:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1078:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1086:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1094:5:16","type":""}],"src":"1048:139:16"},{"body":{"nodeType":"YulBlock","src":"1259:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"1305:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1307:77:16"},"nodeType":"YulFunctionCall","src":"1307:79:16"},"nodeType":"YulExpressionStatement","src":"1307:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1280:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1289:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1276:3:16"},"nodeType":"YulFunctionCall","src":"1276:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1301:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1272:3:16"},"nodeType":"YulFunctionCall","src":"1272:32:16"},"nodeType":"YulIf","src":"1269:119:16"},{"nodeType":"YulBlock","src":"1398:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1413:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1427:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1417:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1442:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1477:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:16"},"nodeType":"YulFunctionCall","src":"1473:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1497:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1452:20:16"},"nodeType":"YulFunctionCall","src":"1452:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1442:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1229:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1240:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1252:6:16","type":""}],"src":"1193:329:16"},{"body":{"nodeType":"YulBlock","src":"1624:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1641:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1646:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1634:6:16"},"nodeType":"YulFunctionCall","src":"1634:19:16"},"nodeType":"YulExpressionStatement","src":"1634:19:16"},{"nodeType":"YulAssignment","src":"1662:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1681:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1686:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1677:3:16"},"nodeType":"YulFunctionCall","src":"1677:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1662:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1596:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1601:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1612:11:16","type":""}],"src":"1528:169:16"},{"body":{"nodeType":"YulBlock","src":"1809:66:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1831:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1839:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:16"},"nodeType":"YulFunctionCall","src":"1827:14:16"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1843:24:16","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1820:6:16"},"nodeType":"YulFunctionCall","src":"1820:48:16"},"nodeType":"YulExpressionStatement","src":"1820:48:16"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1801:6:16","type":""}],"src":"1703:172:16"},{"body":{"nodeType":"YulBlock","src":"2027:220:16","statements":[{"nodeType":"YulAssignment","src":"2037:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2103:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2108:2:16","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2044:58:16"},"nodeType":"YulFunctionCall","src":"2044:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2037:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2209:3:16"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"2120:88:16"},"nodeType":"YulFunctionCall","src":"2120:93:16"},"nodeType":"YulExpressionStatement","src":"2120:93:16"},{"nodeType":"YulAssignment","src":"2222:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2233:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2238:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2229:3:16"},"nodeType":"YulFunctionCall","src":"2229:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2222:3:16"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2015:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2023:3:16","type":""}],"src":"1881:366:16"},{"body":{"nodeType":"YulBlock","src":"2424:248:16","statements":[{"nodeType":"YulAssignment","src":"2434:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2446:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2457:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2442:3:16"},"nodeType":"YulFunctionCall","src":"2442:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2434:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2481:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2492:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2477:3:16"},"nodeType":"YulFunctionCall","src":"2477:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2500:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2506:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2496:3:16"},"nodeType":"YulFunctionCall","src":"2496:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2470:6:16"},"nodeType":"YulFunctionCall","src":"2470:47:16"},"nodeType":"YulExpressionStatement","src":"2470:47:16"},{"nodeType":"YulAssignment","src":"2526:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2660:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2534:124:16"},"nodeType":"YulFunctionCall","src":"2534:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2526:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2404:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2419:4:16","type":""}],"src":"2253:419:16"},{"body":{"nodeType":"YulBlock","src":"2784:66:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2806:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2814:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2802:3:16"},"nodeType":"YulFunctionCall","src":"2802:14:16"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2818:24:16","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2795:6:16"},"nodeType":"YulFunctionCall","src":"2795:48:16"},"nodeType":"YulExpressionStatement","src":"2795:48:16"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2776:6:16","type":""}],"src":"2678:172:16"},{"body":{"nodeType":"YulBlock","src":"3002:220:16","statements":[{"nodeType":"YulAssignment","src":"3012:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3078:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"3083:2:16","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3019:58:16"},"nodeType":"YulFunctionCall","src":"3019:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3012:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3184:3:16"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"3095:88:16"},"nodeType":"YulFunctionCall","src":"3095:93:16"},"nodeType":"YulExpressionStatement","src":"3095:93:16"},{"nodeType":"YulAssignment","src":"3197:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3208:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"3213:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3204:3:16"},"nodeType":"YulFunctionCall","src":"3204:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3197:3:16"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2990:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2998:3:16","type":""}],"src":"2856:366:16"},{"body":{"nodeType":"YulBlock","src":"3399:248:16","statements":[{"nodeType":"YulAssignment","src":"3409:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3432:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3417:3:16"},"nodeType":"YulFunctionCall","src":"3417:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3409:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3456:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3467:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3452:3:16"},"nodeType":"YulFunctionCall","src":"3452:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3475:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3481:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3471:3:16"},"nodeType":"YulFunctionCall","src":"3471:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:16"},"nodeType":"YulFunctionCall","src":"3445:47:16"},"nodeType":"YulExpressionStatement","src":"3445:47:16"},{"nodeType":"YulAssignment","src":"3501:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3635:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3509:124:16"},"nodeType":"YulFunctionCall","src":"3509:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3501:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3379:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3394:4:16","type":""}],"src":"3228:419:16"},{"body":{"nodeType":"YulBlock","src":"3759:67:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3781:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3789:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3777:3:16"},"nodeType":"YulFunctionCall","src":"3777:14:16"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"3793:25:16","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3770:6:16"},"nodeType":"YulFunctionCall","src":"3770:49:16"},"nodeType":"YulExpressionStatement","src":"3770:49:16"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3751:6:16","type":""}],"src":"3653:173:16"},{"body":{"nodeType":"YulBlock","src":"3978:220:16","statements":[{"nodeType":"YulAssignment","src":"3988:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4054:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"4059:2:16","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3995:58:16"},"nodeType":"YulFunctionCall","src":"3995:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3988:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4160:3:16"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"4071:88:16"},"nodeType":"YulFunctionCall","src":"4071:93:16"},"nodeType":"YulExpressionStatement","src":"4071:93:16"},{"nodeType":"YulAssignment","src":"4173:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4184:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"4189:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4180:3:16"},"nodeType":"YulFunctionCall","src":"4180:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4173:3:16"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3966:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3974:3:16","type":""}],"src":"3832:366:16"},{"body":{"nodeType":"YulBlock","src":"4375:248:16","statements":[{"nodeType":"YulAssignment","src":"4385:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4397:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4408:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4393:3:16"},"nodeType":"YulFunctionCall","src":"4393:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4385:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4432:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4443:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4428:3:16"},"nodeType":"YulFunctionCall","src":"4428:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4451:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4457:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4447:3:16"},"nodeType":"YulFunctionCall","src":"4447:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4421:6:16"},"nodeType":"YulFunctionCall","src":"4421:47:16"},"nodeType":"YulExpressionStatement","src":"4421:47:16"},{"nodeType":"YulAssignment","src":"4477:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4611:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4485:124:16"},"nodeType":"YulFunctionCall","src":"4485:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4477:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4355:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4370:4:16","type":""}],"src":"4204:419:16"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea2646970667358221220ed3eaba2bf8bbfe4b54a5bd3866fc97822c07aa2ef43128ea23e01b042479a8164736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED RETURNDATACOPY 0xAB LOG2 0xBF DUP12 0xBF 0xE4 0xB5 0x4A JUMPDEST 0xD3 DUP7 PUSH16 0xC97822C07AA2EF43128EA23E01B04247 SWAP11 DUP2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"212:141:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:265:2;;;:::i;:::-;;1317:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;811:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1001:265;1074:14;;;;;;;;;;;1060:28;;:10;:28;;;1052:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1122:16;1141:7;;;;;;;;;;;1122:26;;1164:10;1154:7;;:20;;;;;;;;;;;;;;;;;;1205:1;1180:14;;:27;;;;;;;;;;;;;;;;;;1250:10;1219:42;;1240:8;1219:42;;;;;;;;;;;;1046:220;1001:265::o;1317:81::-;1364:7;1386;;;;;;;;;;;1379:14;;1317:81;:::o;811:98::-;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;:::-;811:98:::0;:::o;1715:111::-;1787:7;;;;;;;;;;1773:21;;:10;:21;;;1765:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1715:111::o;1482:188::-;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;7:126:16:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:172::-;1843:24;1839:1;1831:6;1827:14;1820:48;1703:172;:::o;1881:366::-;2023:3;2044:67;2108:2;2103:3;2044:67;:::i;:::-;2037:74;;2120:93;2209:3;2120:93;:::i;:::-;2238:2;2233:3;2229:12;2222:19;;1881:366;;;:::o;2253:419::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2506:9;2500:4;2496:20;2492:1;2481:9;2477:17;2470:47;2534:131;2660:4;2534:131;:::i;:::-;2526:139;;2253:419;;;:::o;2678:172::-;2818:24;2814:1;2806:6;2802:14;2795:48;2678:172;:::o;2856:366::-;2998:3;3019:67;3083:2;3078:3;3019:67;:::i;:::-;3012:74;;3095:93;3184:3;3095:93;:::i;:::-;3213:2;3208:3;3204:12;3197:19;;2856:366;;;:::o;3228:419::-;3394:4;3432:2;3421:9;3417:18;3409:26;;3481:9;3475:4;3471:20;3467:1;3456:9;3452:17;3445:47;3509:131;3635:4;3509:131;:::i;:::-;3501:139;;3228:419;;;:::o;3653:173::-;3793:25;3789:1;3781:6;3777:14;3770:49;3653:173;:::o;3832:366::-;3974:3;3995:67;4059:2;4054:3;3995:67;:::i;:::-;3988:74;;4071:93;4160:3;4071:93;:::i;:::-;4189:2;4184:3;4180:12;4173:19;;3832:366;;;:::o;4204:419::-;4370:4;4408:2;4397:9;4393:18;4385:26;;4457:9;4451:4;4447:20;4443:1;4432:9;4428:17;4421:47;4485:131;4611:4;4485:131;:::i;:::-;4477:139;;4204:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"325800","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54518","owner()":"2522","transferOwnership(address)":"30676"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IOwnable.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /**\\n   * @notice Allows an owner to begin transferring ownership to a new address,\\n   * pending.\\n   */\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /**\\n   * @notice Allows an ownership transfer to be completed by the recipient.\\n   */\\n  function acceptOwnership() external override {\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @notice Get the current owner\\n   */\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /**\\n   * @notice validate, transfer ownership, and emit relevant events\\n   */\\n  function _transferOwnership(address to) private {\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /**\\n   * @notice validate access\\n   */\\n  function _validateOwnership() internal view {\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /**\\n   * @notice Reverts if called by anyone other than the contract owner.\\n   */\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":123,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":125,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address, pending."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"ConfirmedOwnerWithProposal":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"},{"internalType":"address","name":"pendingOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_171":{"entryPoint":null,"id":171,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_255":{"entryPoint":300,"id":255,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":699,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":821,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":929,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":856,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":964,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":763,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":637,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":605,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":600,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":780,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":888,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":655,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3483:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"379:81:16","statements":[{"nodeType":"YulAssignment","src":"389:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:16"},"nodeType":"YulFunctionCall","src":"400:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:16","type":""}],"src":"334:126:16"},{"body":{"nodeType":"YulBlock","src":"511:51:16","statements":[{"nodeType":"YulAssignment","src":"521:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:16"},"nodeType":"YulFunctionCall","src":"532:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:16","type":""}],"src":"466:96:16"},{"body":{"nodeType":"YulBlock","src":"611:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:16"},"nodeType":"YulFunctionCall","src":"670:12:16"},"nodeType":"YulExpressionStatement","src":"670:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:16"},"nodeType":"YulFunctionCall","src":"641:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:16"},"nodeType":"YulFunctionCall","src":"631:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:16"},"nodeType":"YulFunctionCall","src":"624:43:16"},"nodeType":"YulIf","src":"621:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:16","type":""}],"src":"568:122:16"},{"body":{"nodeType":"YulBlock","src":"759:80:16","statements":[{"nodeType":"YulAssignment","src":"769:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:16"},"nodeType":"YulFunctionCall","src":"778:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:16"},"nodeType":"YulFunctionCall","src":"800:33:16"},"nodeType":"YulExpressionStatement","src":"800:33:16"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:16","type":""}],"src":"696:143:16"},{"body":{"nodeType":"YulBlock","src":"939:413:16","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:16"},"nodeType":"YulFunctionCall","src":"987:79:16"},"nodeType":"YulExpressionStatement","src":"987:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:16"},"nodeType":"YulFunctionCall","src":"956:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:16"},"nodeType":"YulFunctionCall","src":"952:32:16"},"nodeType":"YulIf","src":"949:119:16"},{"nodeType":"YulBlock","src":"1078:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:16"},"nodeType":"YulFunctionCall","src":"1164:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:16"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:16"},"nodeType":"YulFunctionCall","src":"1132:64:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:16"}]}]},{"nodeType":"YulBlock","src":"1216:129:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:16"},"nodeType":"YulFunctionCall","src":"1303:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:16"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:16"},"nodeType":"YulFunctionCall","src":"1271:64:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:16","type":""}],"src":"845:507:16"},{"body":{"nodeType":"YulBlock","src":"1454:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1471:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1476:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1464:6:16"},"nodeType":"YulFunctionCall","src":"1464:19:16"},"nodeType":"YulExpressionStatement","src":"1464:19:16"},{"nodeType":"YulAssignment","src":"1492:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1511:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1516:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1507:3:16"},"nodeType":"YulFunctionCall","src":"1507:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1492:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1426:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1431:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1442:11:16","type":""}],"src":"1358:169:16"},{"body":{"nodeType":"YulBlock","src":"1639:68:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1661:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1669:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1657:3:16"},"nodeType":"YulFunctionCall","src":"1657:14:16"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"1673:26:16","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1650:6:16"},"nodeType":"YulFunctionCall","src":"1650:50:16"},"nodeType":"YulExpressionStatement","src":"1650:50:16"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1631:6:16","type":""}],"src":"1533:174:16"},{"body":{"nodeType":"YulBlock","src":"1859:220:16","statements":[{"nodeType":"YulAssignment","src":"1869:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1935:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1940:2:16","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1876:58:16"},"nodeType":"YulFunctionCall","src":"1876:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1869:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2041:3:16"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"1952:88:16"},"nodeType":"YulFunctionCall","src":"1952:93:16"},"nodeType":"YulExpressionStatement","src":"1952:93:16"},{"nodeType":"YulAssignment","src":"2054:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2065:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2070:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2061:3:16"},"nodeType":"YulFunctionCall","src":"2061:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2054:3:16"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1847:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1855:3:16","type":""}],"src":"1713:366:16"},{"body":{"nodeType":"YulBlock","src":"2256:248:16","statements":[{"nodeType":"YulAssignment","src":"2266:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2289:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2274:3:16"},"nodeType":"YulFunctionCall","src":"2274:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2266:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2313:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2324:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2309:3:16"},"nodeType":"YulFunctionCall","src":"2309:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2332:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2338:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2328:3:16"},"nodeType":"YulFunctionCall","src":"2328:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2302:6:16"},"nodeType":"YulFunctionCall","src":"2302:47:16"},"nodeType":"YulExpressionStatement","src":"2302:47:16"},{"nodeType":"YulAssignment","src":"2358:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2492:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2366:124:16"},"nodeType":"YulFunctionCall","src":"2366:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2358:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2236:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2251:4:16","type":""}],"src":"2085:419:16"},{"body":{"nodeType":"YulBlock","src":"2616:67:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2638:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2646:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:16"},"nodeType":"YulFunctionCall","src":"2634:14:16"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"2650:25:16","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2627:6:16"},"nodeType":"YulFunctionCall","src":"2627:49:16"},"nodeType":"YulExpressionStatement","src":"2627:49:16"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2608:6:16","type":""}],"src":"2510:173:16"},{"body":{"nodeType":"YulBlock","src":"2835:220:16","statements":[{"nodeType":"YulAssignment","src":"2845:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2911:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2916:2:16","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2852:58:16"},"nodeType":"YulFunctionCall","src":"2852:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2845:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3017:3:16"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"2928:88:16"},"nodeType":"YulFunctionCall","src":"2928:93:16"},"nodeType":"YulExpressionStatement","src":"2928:93:16"},{"nodeType":"YulAssignment","src":"3030:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3041:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"3046:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3037:3:16"},"nodeType":"YulFunctionCall","src":"3037:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3030:3:16"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2823:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2831:3:16","type":""}],"src":"2689:366:16"},{"body":{"nodeType":"YulBlock","src":"3232:248:16","statements":[{"nodeType":"YulAssignment","src":"3242:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3254:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3265:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3250:3:16"},"nodeType":"YulFunctionCall","src":"3250:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3242:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3289:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3300:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3285:3:16"},"nodeType":"YulFunctionCall","src":"3285:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3308:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3314:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3304:3:16"},"nodeType":"YulFunctionCall","src":"3304:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3278:6:16"},"nodeType":"YulFunctionCall","src":"3278:47:16"},"nodeType":"YulExpressionStatement","src":"3278:47:16"},{"nodeType":"YulAssignment","src":"3334:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3468:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3342:124:16"},"nodeType":"YulFunctionCall","src":"3342:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3334:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3212:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3227:4:16","type":""}],"src":"3061:419:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a50380380610a50833981810160405281019061003291906102bb565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009890610358565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610125576101248161012c60201b60201c565b5b50506103e4565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361019a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610191906103c4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102888261025d565b9050919050565b6102988161027d565b81146102a357600080fd5b50565b6000815190506102b58161028f565b92915050565b600080604083850312156102d2576102d1610258565b5b60006102e0858286016102a6565b92505060206102f1858286016102a6565b9150509250929050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006103426018836102fb565b915061034d8261030c565b602082019050919050565b6000602082019050818103600083015261037181610335565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006103ae6017836102fb565b91506103b982610378565b602082019050919050565b600060208201905081810360008301526103dd816103a1565b9050919050565b61065d806103f36000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea264697066735822122037e5ce73adbf79440a8f17d2f9b1ac6760233621cf9065a9ad8d177ccfb5fd5664736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA50 CODESIZE SUB DUP1 PUSH2 0xA50 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98 SWAP1 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x125 JUMPI PUSH2 0x124 DUP2 PUSH2 0x12C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP PUSH2 0x3E4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x288 DUP3 PUSH2 0x25D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x298 DUP2 PUSH2 0x27D JUMP JUMPDEST DUP2 EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B5 DUP2 PUSH2 0x28F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D2 JUMPI PUSH2 0x2D1 PUSH2 0x258 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E0 DUP6 DUP3 DUP7 ADD PUSH2 0x2A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F1 DUP6 DUP3 DUP7 ADD PUSH2 0x2A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x342 PUSH1 0x18 DUP4 PUSH2 0x2FB JUMP JUMPDEST SWAP2 POP PUSH2 0x34D DUP3 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x371 DUP2 PUSH2 0x335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE PUSH1 0x17 DUP4 PUSH2 0x2FB JUMP JUMPDEST SWAP2 POP PUSH2 0x3B9 DUP3 PUSH2 0x378 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DD DUP2 PUSH2 0x3A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65D DUP1 PUSH2 0x3F3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xE5 0xCE PUSH20 0xADBF79440A8F17D2F9B1AC6760233621CF9065A9 0xAD DUP14 OR PUSH29 0xCFB5FD5664736F6C634300081300330000000000000000000000000000 ","sourceMap":"206:1769:2:-:0;;;471:231;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;557:1;537:22;;:8;:22;;;529:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;605:8;595:7;;:18;;;;;;;;;;;;;;;;;;647:1;623:26;;:12;:26;;;619:79;;659:32;678:12;659:18;;;:32;;:::i;:::-;619:79;471:231;;206:1769;;1482:188;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;88:117:16:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:169::-;1442:11;1476:6;1471:3;1464:19;1516:4;1511:3;1507:14;1492:29;;1358:169;;;;:::o;1533:174::-;1673:26;1669:1;1661:6;1657:14;1650:50;1533:174;:::o;1713:366::-;1855:3;1876:67;1940:2;1935:3;1876:67;:::i;:::-;1869:74;;1952:93;2041:3;1952:93;:::i;:::-;2070:2;2065:3;2061:12;2054:19;;1713:366;;;:::o;2085:419::-;2251:4;2289:2;2278:9;2274:18;2266:26;;2338:9;2332:4;2328:20;2324:1;2313:9;2309:17;2302:47;2366:131;2492:4;2366:131;:::i;:::-;2358:139;;2085:419;;;:::o;2510:173::-;2650:25;2646:1;2638:6;2634:14;2627:49;2510:173;:::o;2689:366::-;2831:3;2852:67;2916:2;2911:3;2852:67;:::i;:::-;2845:74;;2928:93;3017:3;2928:93;:::i;:::-;3046:2;3041:3;3037:12;3030:19;;2689:366;;;:::o;3061:419::-;3227:4;3265:2;3254:9;3250:18;3242:26;;3314:9;3308:4;3304:20;3300:1;3289:9;3285:17;3278:47;3342:131;3468:4;3342:131;:::i;:::-;3334:139;;3061:419;;;:::o;206:1769:2:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_255":{"entryPoint":748,"id":255,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_268":{"entryPoint":604,"id":268,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_221":{"entryPoint":138,"id":221,"parameterSlots":0,"returnSlots":0},"@owner_231":{"entryPoint":543,"id":231,"parameterSlots":0,"returnSlots":1},"@transferOwnership_185":{"entryPoint":584,"id":185,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1098,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":1292,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1113,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1327,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1543,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1234,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1080,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1048,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1140,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":1251,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1359,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1467,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1145,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4626:16","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:16","statements":[{"nodeType":"YulAssignment","src":"62:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:16"},"nodeType":"YulFunctionCall","src":"73:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:16","type":""}],"src":"7:126:16"},{"body":{"nodeType":"YulBlock","src":"184:51:16","statements":[{"nodeType":"YulAssignment","src":"194:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:16"},"nodeType":"YulFunctionCall","src":"205:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:16","type":""}],"src":"139:96:16"},{"body":{"nodeType":"YulBlock","src":"306:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:16"},"nodeType":"YulFunctionCall","src":"328:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:16"},"nodeType":"YulFunctionCall","src":"316:37:16"},"nodeType":"YulExpressionStatement","src":"316:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:16","type":""}],"src":"241:118:16"},{"body":{"nodeType":"YulBlock","src":"463:124:16","statements":[{"nodeType":"YulAssignment","src":"473:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:16"},"nodeType":"YulFunctionCall","src":"481:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:16"},"nodeType":"YulFunctionCall","src":"562:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:16"},"nodeType":"YulFunctionCall","src":"509:71:16"},"nodeType":"YulExpressionStatement","src":"509:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:16","type":""}],"src":"365:222:16"},{"body":{"nodeType":"YulBlock","src":"633:35:16","statements":[{"nodeType":"YulAssignment","src":"643:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:16"},"nodeType":"YulFunctionCall","src":"653:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:16","type":""}],"src":"593:75:16"},{"body":{"nodeType":"YulBlock","src":"763:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:16"},"nodeType":"YulFunctionCall","src":"773:12:16"},"nodeType":"YulExpressionStatement","src":"773:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:16"},{"body":{"nodeType":"YulBlock","src":"886:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:16"},"nodeType":"YulFunctionCall","src":"896:12:16"},"nodeType":"YulExpressionStatement","src":"896:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:16"},{"body":{"nodeType":"YulBlock","src":"963:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"1020:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1029:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1032:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1022:6:16"},"nodeType":"YulFunctionCall","src":"1022:12:16"},"nodeType":"YulExpressionStatement","src":"1022:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"986:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1011:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"993:17:16"},"nodeType":"YulFunctionCall","src":"993:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"983:2:16"},"nodeType":"YulFunctionCall","src":"983:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"976:6:16"},"nodeType":"YulFunctionCall","src":"976:43:16"},"nodeType":"YulIf","src":"973:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"956:5:16","type":""}],"src":"920:122:16"},{"body":{"nodeType":"YulBlock","src":"1100:87:16","statements":[{"nodeType":"YulAssignment","src":"1110:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1132:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1119:12:16"},"nodeType":"YulFunctionCall","src":"1119:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1110:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1175:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1148:26:16"},"nodeType":"YulFunctionCall","src":"1148:33:16"},"nodeType":"YulExpressionStatement","src":"1148:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1078:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1086:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1094:5:16","type":""}],"src":"1048:139:16"},{"body":{"nodeType":"YulBlock","src":"1259:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"1305:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1307:77:16"},"nodeType":"YulFunctionCall","src":"1307:79:16"},"nodeType":"YulExpressionStatement","src":"1307:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1280:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"1289:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1276:3:16"},"nodeType":"YulFunctionCall","src":"1276:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"1301:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1272:3:16"},"nodeType":"YulFunctionCall","src":"1272:32:16"},"nodeType":"YulIf","src":"1269:119:16"},{"nodeType":"YulBlock","src":"1398:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1413:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1427:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1417:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1442:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1477:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1488:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:16"},"nodeType":"YulFunctionCall","src":"1473:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1497:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1452:20:16"},"nodeType":"YulFunctionCall","src":"1452:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1442:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1229:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1240:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1252:6:16","type":""}],"src":"1193:329:16"},{"body":{"nodeType":"YulBlock","src":"1624:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1641:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1646:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1634:6:16"},"nodeType":"YulFunctionCall","src":"1634:19:16"},"nodeType":"YulExpressionStatement","src":"1634:19:16"},{"nodeType":"YulAssignment","src":"1662:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1681:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1686:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1677:3:16"},"nodeType":"YulFunctionCall","src":"1677:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1662:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1596:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1601:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1612:11:16","type":""}],"src":"1528:169:16"},{"body":{"nodeType":"YulBlock","src":"1809:66:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1831:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1839:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:16"},"nodeType":"YulFunctionCall","src":"1827:14:16"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"1843:24:16","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1820:6:16"},"nodeType":"YulFunctionCall","src":"1820:48:16"},"nodeType":"YulExpressionStatement","src":"1820:48:16"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1801:6:16","type":""}],"src":"1703:172:16"},{"body":{"nodeType":"YulBlock","src":"2027:220:16","statements":[{"nodeType":"YulAssignment","src":"2037:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2103:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2108:2:16","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2044:58:16"},"nodeType":"YulFunctionCall","src":"2044:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2037:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2209:3:16"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"2120:88:16"},"nodeType":"YulFunctionCall","src":"2120:93:16"},"nodeType":"YulExpressionStatement","src":"2120:93:16"},{"nodeType":"YulAssignment","src":"2222:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2233:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"2238:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2229:3:16"},"nodeType":"YulFunctionCall","src":"2229:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2222:3:16"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2015:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2023:3:16","type":""}],"src":"1881:366:16"},{"body":{"nodeType":"YulBlock","src":"2424:248:16","statements":[{"nodeType":"YulAssignment","src":"2434:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2446:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2457:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2442:3:16"},"nodeType":"YulFunctionCall","src":"2442:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2434:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2481:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2492:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2477:3:16"},"nodeType":"YulFunctionCall","src":"2477:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2500:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2506:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2496:3:16"},"nodeType":"YulFunctionCall","src":"2496:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2470:6:16"},"nodeType":"YulFunctionCall","src":"2470:47:16"},"nodeType":"YulExpressionStatement","src":"2470:47:16"},{"nodeType":"YulAssignment","src":"2526:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2660:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2534:124:16"},"nodeType":"YulFunctionCall","src":"2534:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2526:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2404:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2419:4:16","type":""}],"src":"2253:419:16"},{"body":{"nodeType":"YulBlock","src":"2784:66:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2806:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2814:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2802:3:16"},"nodeType":"YulFunctionCall","src":"2802:14:16"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2818:24:16","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2795:6:16"},"nodeType":"YulFunctionCall","src":"2795:48:16"},"nodeType":"YulExpressionStatement","src":"2795:48:16"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2776:6:16","type":""}],"src":"2678:172:16"},{"body":{"nodeType":"YulBlock","src":"3002:220:16","statements":[{"nodeType":"YulAssignment","src":"3012:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3078:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"3083:2:16","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3019:58:16"},"nodeType":"YulFunctionCall","src":"3019:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3012:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3184:3:16"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"3095:88:16"},"nodeType":"YulFunctionCall","src":"3095:93:16"},"nodeType":"YulExpressionStatement","src":"3095:93:16"},{"nodeType":"YulAssignment","src":"3197:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3208:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"3213:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3204:3:16"},"nodeType":"YulFunctionCall","src":"3204:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3197:3:16"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2990:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2998:3:16","type":""}],"src":"2856:366:16"},{"body":{"nodeType":"YulBlock","src":"3399:248:16","statements":[{"nodeType":"YulAssignment","src":"3409:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3421:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3432:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3417:3:16"},"nodeType":"YulFunctionCall","src":"3417:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3409:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3456:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3467:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3452:3:16"},"nodeType":"YulFunctionCall","src":"3452:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3475:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3481:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3471:3:16"},"nodeType":"YulFunctionCall","src":"3471:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3445:6:16"},"nodeType":"YulFunctionCall","src":"3445:47:16"},"nodeType":"YulExpressionStatement","src":"3445:47:16"},{"nodeType":"YulAssignment","src":"3501:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3635:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3509:124:16"},"nodeType":"YulFunctionCall","src":"3509:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3501:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3379:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3394:4:16","type":""}],"src":"3228:419:16"},{"body":{"nodeType":"YulBlock","src":"3759:67:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3781:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3789:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3777:3:16"},"nodeType":"YulFunctionCall","src":"3777:14:16"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"3793:25:16","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3770:6:16"},"nodeType":"YulFunctionCall","src":"3770:49:16"},"nodeType":"YulExpressionStatement","src":"3770:49:16"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3751:6:16","type":""}],"src":"3653:173:16"},{"body":{"nodeType":"YulBlock","src":"3978:220:16","statements":[{"nodeType":"YulAssignment","src":"3988:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4054:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"4059:2:16","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3995:58:16"},"nodeType":"YulFunctionCall","src":"3995:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3988:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4160:3:16"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"4071:88:16"},"nodeType":"YulFunctionCall","src":"4071:93:16"},"nodeType":"YulExpressionStatement","src":"4071:93:16"},{"nodeType":"YulAssignment","src":"4173:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4184:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"4189:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4180:3:16"},"nodeType":"YulFunctionCall","src":"4180:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4173:3:16"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3966:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3974:3:16","type":""}],"src":"3832:366:16"},{"body":{"nodeType":"YulBlock","src":"4375:248:16","statements":[{"nodeType":"YulAssignment","src":"4385:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4397:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4408:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4393:3:16"},"nodeType":"YulFunctionCall","src":"4393:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4385:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4432:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4443:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4428:3:16"},"nodeType":"YulFunctionCall","src":"4428:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4451:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4457:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4447:3:16"},"nodeType":"YulFunctionCall","src":"4447:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4421:6:16"},"nodeType":"YulFunctionCall","src":"4421:47:16"},"nodeType":"YulExpressionStatement","src":"4421:47:16"},{"nodeType":"YulAssignment","src":"4477:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4611:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4485:124:16"},"nodeType":"YulFunctionCall","src":"4485:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4477:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4355:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4370:4:16","type":""}],"src":"4204:419:16"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea264697066735822122037e5ce73adbf79440a8f17d2f9b1ac6760233621cf9065a9ad8d177ccfb5fd5664736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xE5 0xCE PUSH20 0xADBF79440A8F17D2F9B1AC6760233621CF9065A9 0xAD DUP14 OR PUSH29 0xCFB5FD5664736F6C634300081300330000000000000000000000000000 ","sourceMap":"206:1769:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:265;;;:::i;:::-;;1317:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;811:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1001:265;1074:14;;;;;;;;;;;1060:28;;:10;:28;;;1052:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1122:16;1141:7;;;;;;;;;;;1122:26;;1164:10;1154:7;;:20;;;;;;;;;;;;;;;;;;1205:1;1180:14;;:27;;;;;;;;;;;;;;;;;;1250:10;1219:42;;1240:8;1219:42;;;;;;;;;;;;1046:220;1001:265::o;1317:81::-;1364:7;1386;;;;;;;;;;;1379:14;;1317:81;:::o;811:98::-;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;:::-;811:98:::0;:::o;1715:111::-;1787:7;;;;;;;;;;1773:21;;:10;:21;;;1765:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1715:111::o;1482:188::-;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;7:126:16:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:172::-;1843:24;1839:1;1831:6;1827:14;1820:48;1703:172;:::o;1881:366::-;2023:3;2044:67;2108:2;2103:3;2044:67;:::i;:::-;2037:74;;2120:93;2209:3;2120:93;:::i;:::-;2238:2;2233:3;2229:12;2222:19;;1881:366;;;:::o;2253:419::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2506:9;2500:4;2496:20;2492:1;2481:9;2477:17;2470:47;2534:131;2660:4;2534:131;:::i;:::-;2526:139;;2253:419;;;:::o;2678:172::-;2818:24;2814:1;2806:6;2802:14;2795:48;2678:172;:::o;2856:366::-;2998:3;3019:67;3083:2;3078:3;3019:67;:::i;:::-;3012:74;;3095:93;3184:3;3095:93;:::i;:::-;3213:2;3208:3;3204:12;3197:19;;2856:366;;;:::o;3228:419::-;3394:4;3432:2;3421:9;3417:18;3409:26;;3481:9;3475:4;3471:20;3467:1;3456:9;3452:17;3445:47;3509:131;3635:4;3509:131;:::i;:::-;3501:139;;3228:419;;;:::o;3653:173::-;3793:25;3789:1;3781:6;3777:14;3770:49;3653:173;:::o;3832:366::-;3974:3;3995:67;4059:2;4054:3;3995:67;:::i;:::-;3988:74;;4071:93;4160:3;4071:93;:::i;:::-;4189:2;4184:3;4180:12;4173:19;;3832:366;;;:::o;4204:419::-;4370:4;4408:2;4397:9;4393:18;4385:26;;4457:9;4451:4;4447:20;4443:1;4432:9;4428:17;4421:47;4485:131;4611:4;4485:131;:::i;:::-;4477:139;;4204:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"325800","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54518","owner()":"2522","transferOwnership(address)":"30676"},"internal":{"_transferOwnership(address)":"infinite","_validateOwnership()":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IOwnable.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /**\\n   * @notice Allows an owner to begin transferring ownership to a new address,\\n   * pending.\\n   */\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /**\\n   * @notice Allows an ownership transfer to be completed by the recipient.\\n   */\\n  function acceptOwnership() external override {\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @notice Get the current owner\\n   */\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /**\\n   * @notice validate, transfer ownership, and emit relevant events\\n   */\\n  function _transferOwnership(address to) private {\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /**\\n   * @notice validate access\\n   */\\n  function _validateOwnership() internal view {\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /**\\n   * @notice Reverts if called by anyone other than the contract owner.\\n   */\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":123,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":125,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address, pending."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"IOwnable":{"abi":[{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_414":{"entryPoint":null,"id":414,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"423:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:16"},"nodeType":"YulFunctionCall","src":"433:12:16"},"nodeType":"YulExpressionStatement","src":"433:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:16"},{"body":{"nodeType":"YulBlock","src":"546:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:16"},"nodeType":"YulFunctionCall","src":"556:12:16"},"nodeType":"YulExpressionStatement","src":"556:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:16"},{"body":{"nodeType":"YulBlock","src":"628:54:16","statements":[{"nodeType":"YulAssignment","src":"638:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:16"},"nodeType":"YulFunctionCall","src":"652:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:16"},"nodeType":"YulFunctionCall","src":"668:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:16"},"nodeType":"YulFunctionCall","src":"648:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:16","type":""}],"src":"580:102:16"},{"body":{"nodeType":"YulBlock","src":"716:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:16"},"nodeType":"YulFunctionCall","src":"726:88:16"},"nodeType":"YulExpressionStatement","src":"726:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:16"},"nodeType":"YulFunctionCall","src":"823:15:16"},"nodeType":"YulExpressionStatement","src":"823:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:16"},"nodeType":"YulFunctionCall","src":"847:15:16"},"nodeType":"YulExpressionStatement","src":"847:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:16"},{"body":{"nodeType":"YulBlock","src":"917:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:16"},"nodeType":"YulFunctionCall","src":"957:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:16"},"nodeType":"YulFunctionCall","src":"945:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:16"},"nodeType":"YulFunctionCall","src":"1098:18:16"},"nodeType":"YulExpressionStatement","src":"1098:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:16"},"nodeType":"YulFunctionCall","src":"1036:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:16"},"nodeType":"YulFunctionCall","src":"1072:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:16"},"nodeType":"YulFunctionCall","src":"1033:62:16"},"nodeType":"YulIf","src":"1030:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:16"},"nodeType":"YulFunctionCall","src":"1127:22:16"},"nodeType":"YulExpressionStatement","src":"1127:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:16","type":""}],"src":"874:281:16"},{"body":{"nodeType":"YulBlock","src":"1202:88:16","statements":[{"nodeType":"YulAssignment","src":"1212:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:16"},"nodeType":"YulFunctionCall","src":"1222:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:16"},"nodeType":"YulFunctionCall","src":"1251:33:16"},"nodeType":"YulExpressionStatement","src":"1251:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:16","type":""}],"src":"1161:129:16"},{"body":{"nodeType":"YulBlock","src":"1363:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:16"},"nodeType":"YulFunctionCall","src":"1470:18:16"},"nodeType":"YulExpressionStatement","src":"1470:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:16"},"nodeType":"YulFunctionCall","src":"1437:30:16"},"nodeType":"YulIf","src":"1434:56:16"},{"nodeType":"YulAssignment","src":"1500:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:16"},"nodeType":"YulFunctionCall","src":"1508:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:16"}]},{"nodeType":"YulAssignment","src":"1574:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:16"},"nodeType":"YulFunctionCall","src":"1582:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:16"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:16","type":""}],"src":"1296:308:16"},{"body":{"nodeType":"YulBlock","src":"1672:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:16"},"nodeType":"YulFunctionCall","src":"1772:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:16"},"nodeType":"YulFunctionCall","src":"1791:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:16"},"nodeType":"YulFunctionCall","src":"1785:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:16"},"nodeType":"YulFunctionCall","src":"1765:39:16"},"nodeType":"YulExpressionStatement","src":"1765:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:16"},"nodeType":"YulFunctionCall","src":"1709:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:16","statements":[{"nodeType":"YulAssignment","src":"1725:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:16"},"nodeType":"YulFunctionCall","src":"1730:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:16","statements":[]},"src":"1701:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:16"},"nodeType":"YulFunctionCall","src":"1830:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:16"},"nodeType":"YulFunctionCall","src":"1823:27:16"},"nodeType":"YulExpressionStatement","src":"1823:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:16","type":""}],"src":"1610:246:16"},{"body":{"nodeType":"YulBlock","src":"1957:339:16","statements":[{"nodeType":"YulAssignment","src":"1967:75:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:16"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:16"},"nodeType":"YulFunctionCall","src":"1992:49:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:16"},"nodeType":"YulFunctionCall","src":"1976:66:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:16"},"nodeType":"YulFunctionCall","src":"2051:21:16"},"nodeType":"YulExpressionStatement","src":"2051:21:16"},{"nodeType":"YulVariableDeclaration","src":"2081:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:16"},"nodeType":"YulFunctionCall","src":"2092:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:16"},"nodeType":"YulFunctionCall","src":"2148:79:16"},"nodeType":"YulExpressionStatement","src":"2148:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:16"},"nodeType":"YulFunctionCall","src":"2123:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:16"},"nodeType":"YulFunctionCall","src":"2120:25:16"},"nodeType":"YulIf","src":"2117:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:16"},"nodeType":"YulFunctionCall","src":"2238:52:16"},"nodeType":"YulExpressionStatement","src":"2238:52:16"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:16","type":""}],"src":"1862:434:16"},{"body":{"nodeType":"YulBlock","src":"2389:282:16","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:16"},"nodeType":"YulFunctionCall","src":"2440:79:16"},"nodeType":"YulExpressionStatement","src":"2440:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:16"},"nodeType":"YulFunctionCall","src":"2413:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:16"},"nodeType":"YulFunctionCall","src":"2409:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:16"},"nodeType":"YulFunctionCall","src":"2402:35:16"},"nodeType":"YulIf","src":"2399:122:16"},{"nodeType":"YulVariableDeclaration","src":"2530:27:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:16"},"nodeType":"YulFunctionCall","src":"2544:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:16"},"nodeType":"YulFunctionCall","src":"2634:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:16"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:16"},"nodeType":"YulFunctionCall","src":"2575:90:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:16"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:16","type":""}],"src":"2316:355:16"},{"body":{"nodeType":"YulBlock","src":"2791:739:16","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:16"},"nodeType":"YulFunctionCall","src":"2839:79:16"},"nodeType":"YulExpressionStatement","src":"2839:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:16"},"nodeType":"YulFunctionCall","src":"2808:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:16"},"nodeType":"YulFunctionCall","src":"2804:32:16"},"nodeType":"YulIf","src":"2801:119:16"},{"nodeType":"YulBlock","src":"2930:291:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:16"},"nodeType":"YulFunctionCall","src":"2965:17:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:16"},"nodeType":"YulFunctionCall","src":"2959:24:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:16"},"nodeType":"YulFunctionCall","src":"3032:79:16"},"nodeType":"YulExpressionStatement","src":"3032:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:16"},"nodeType":"YulFunctionCall","src":"2999:30:16"},"nodeType":"YulIf","src":"2996:117:16"},{"nodeType":"YulAssignment","src":"3127:84:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:16"},"nodeType":"YulFunctionCall","src":"3179:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:16"},"nodeType":"YulFunctionCall","src":"3137:74:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:16"}]}]},{"nodeType":"YulBlock","src":"3231:292:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:16"},"nodeType":"YulFunctionCall","src":"3266:18:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:16"},"nodeType":"YulFunctionCall","src":"3260:25:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:16"},"nodeType":"YulFunctionCall","src":"3334:79:16"},"nodeType":"YulExpressionStatement","src":"3334:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:16"},"nodeType":"YulFunctionCall","src":"3301:30:16"},"nodeType":"YulIf","src":"3298:117:16"},{"nodeType":"YulAssignment","src":"3429:84:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:16"},"nodeType":"YulFunctionCall","src":"3481:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:16"},"nodeType":"YulFunctionCall","src":"3439:74:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:16"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:16","type":""}],"src":"2677:853:16"},{"body":{"nodeType":"YulBlock","src":"3595:40:16","statements":[{"nodeType":"YulAssignment","src":"3606:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:16"},"nodeType":"YulFunctionCall","src":"3616:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:16","type":""}],"src":"3536:99:16"},{"body":{"nodeType":"YulBlock","src":"3669:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:16"},"nodeType":"YulFunctionCall","src":"3679:88:16"},"nodeType":"YulExpressionStatement","src":"3679:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:16"},"nodeType":"YulFunctionCall","src":"3776:15:16"},"nodeType":"YulExpressionStatement","src":"3776:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:16"},"nodeType":"YulFunctionCall","src":"3800:15:16"},"nodeType":"YulExpressionStatement","src":"3800:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:16"},{"body":{"nodeType":"YulBlock","src":"3878:269:16","statements":[{"nodeType":"YulAssignment","src":"3888:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:16"},"nodeType":"YulFunctionCall","src":"3898:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:16"},"nodeType":"YulFunctionCall","src":"3945:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:16","statements":[{"nodeType":"YulAssignment","src":"4010:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:16"},"nodeType":"YulFunctionCall","src":"4020:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:16"},"nodeType":"YulFunctionCall","src":"3969:26:16"},"nodeType":"YulIf","src":"3966:81:16"},{"body":{"nodeType":"YulBlock","src":"4099:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:16"},"nodeType":"YulFunctionCall","src":"4113:18:16"},"nodeType":"YulExpressionStatement","src":"4113:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:16"},"nodeType":"YulFunctionCall","src":"4083:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:16"},"nodeType":"YulFunctionCall","src":"4060:38:16"},"nodeType":"YulIf","src":"4057:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:16","type":""}],"src":"3827:320:16"},{"body":{"nodeType":"YulBlock","src":"4207:87:16","statements":[{"nodeType":"YulAssignment","src":"4217:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:16"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:16"},"nodeType":"YulFunctionCall","src":"4238:14:16"},"nodeType":"YulExpressionStatement","src":"4238:14:16"},{"nodeType":"YulAssignment","src":"4261:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:16"},"nodeType":"YulFunctionCall","src":"4269:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:16"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:16","type":""}],"src":"4153:141:16"},{"body":{"nodeType":"YulBlock","src":"4344:49:16","statements":[{"nodeType":"YulAssignment","src":"4354:33:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:16"},"nodeType":"YulFunctionCall","src":"4368:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:16","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:16"},"nodeType":"YulFunctionCall","src":"4364:23:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:16"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:16","type":""}],"src":"4300:93:16"},{"body":{"nodeType":"YulBlock","src":"4452:54:16","statements":[{"nodeType":"YulAssignment","src":"4462:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:16"},"nodeType":"YulFunctionCall","src":"4483:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:16"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:16","type":""}],"src":"4399:107:16"},{"body":{"nodeType":"YulBlock","src":"4588:317:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:16","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:16","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:16"},"nodeType":"YulFunctionCall","src":"4615:18:16"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:16"},"nodeType":"YulFunctionCall","src":"4654:97:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:16","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:16"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:16"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:16"},"nodeType":"YulFunctionCall","src":"4772:39:16"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:16"}]},{"nodeType":"YulAssignment","src":"4820:30:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:16"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:16"},"nodeType":"YulFunctionCall","src":"4840:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:16"},"nodeType":"YulFunctionCall","src":"4829:21:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:16"}]},{"nodeType":"YulAssignment","src":"4859:40:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:16"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:16"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:16"},"nodeType":"YulFunctionCall","src":"4879:19:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:16"},"nodeType":"YulFunctionCall","src":"4869:30:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:16"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:16","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:16","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:16","type":""}],"src":"4512:393:16"},{"body":{"nodeType":"YulBlock","src":"4956:32:16","statements":[{"nodeType":"YulAssignment","src":"4966:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:16","type":""}],"src":"4911:77:16"},{"body":{"nodeType":"YulBlock","src":"5026:28:16","statements":[{"nodeType":"YulAssignment","src":"5036:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:16","type":""}],"src":"4994:60:16"},{"body":{"nodeType":"YulBlock","src":"5120:82:16","statements":[{"nodeType":"YulAssignment","src":"5130:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:16"},"nodeType":"YulFunctionCall","src":"5170:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:16"},"nodeType":"YulFunctionCall","src":"5161:34:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:16"},"nodeType":"YulFunctionCall","src":"5143:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:16"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:16","type":""}],"src":"5060:142:16"},{"body":{"nodeType":"YulBlock","src":"5255:28:16","statements":[{"nodeType":"YulAssignment","src":"5265:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:16"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:16","type":""}],"src":"5208:75:16"},{"body":{"nodeType":"YulBlock","src":"5365:193:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:16","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:16"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:16"},"nodeType":"YulFunctionCall","src":"5399:39:16"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:16"},"nodeType":"YulFunctionCall","src":"5488:11:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:16"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:16"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:16"},"nodeType":"YulFunctionCall","src":"5509:41:16"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:16"},"nodeType":"YulFunctionCall","src":"5460:91:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:16"},"nodeType":"YulFunctionCall","src":"5447:105:16"},"nodeType":"YulExpressionStatement","src":"5447:105:16"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:16","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:16","type":""}],"src":"5289:269:16"},{"body":{"nodeType":"YulBlock","src":"5613:24:16","statements":[{"nodeType":"YulAssignment","src":"5623:8:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:16","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:16"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:16","type":""}],"src":"5564:73:16"},{"body":{"nodeType":"YulBlock","src":"5696:136:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:16","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:16"},"nodeType":"YulFunctionCall","src":"5720:32:16"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:16"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:16"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:16"},"nodeType":"YulFunctionCall","src":"5761:65:16"},"nodeType":"YulExpressionStatement","src":"5761:65:16"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:16","type":""}],"src":"5643:189:16"},{"body":{"nodeType":"YulBlock","src":"5888:136:16","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:16","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:16"},"nodeType":"YulFunctionCall","src":"5969:39:16"},"nodeType":"YulExpressionStatement","src":"5969:39:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:16"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:16"},"nodeType":"YulFunctionCall","src":"5905:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:16","statements":[{"nodeType":"YulAssignment","src":"5922:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:16"},"nodeType":"YulFunctionCall","src":"5931:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:16","statements":[]},"src":"5898:120:16"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:16","type":""}],"src":"5838:186:16"},{"body":{"nodeType":"YulBlock","src":"6109:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:16"},"nodeType":"YulFunctionCall","src":"6165:38:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:16","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:16"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:16"},"nodeType":"YulFunctionCall","src":"6249:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:16"},"nodeType":"YulFunctionCall","src":"6235:44:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:16","statements":[{"nodeType":"YulAssignment","src":"6438:23:16","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:16"},"nodeType":"YulFunctionCall","src":"6417:18:16"},"nodeType":"YulIf","src":"6414:49:16"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:16"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:16"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:16"},"nodeType":"YulFunctionCall","src":"6532:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:16"},"nodeType":"YulFunctionCall","src":"6518:37:16"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:16"},"nodeType":"YulFunctionCall","src":"6476:80:16"},"nodeType":"YulExpressionStatement","src":"6476:80:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:16"},"nodeType":"YulFunctionCall","src":"6123:11:16"},"nodeType":"YulIf","src":"6120:446:16"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:16","type":""}],"src":"6030:543:16"},{"body":{"nodeType":"YulBlock","src":"6642:54:16","statements":[{"nodeType":"YulAssignment","src":"6652:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:16"},"nodeType":"YulFunctionCall","src":"6673:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:16"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:16","type":""}],"src":"6579:117:16"},{"body":{"nodeType":"YulBlock","src":"6753:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:16","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:16"},"nodeType":"YulFunctionCall","src":"6808:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:16"},"nodeType":"YulFunctionCall","src":"6823:6:16"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:16"},"nodeType":"YulFunctionCall","src":"6779:51:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:16"},"nodeType":"YulFunctionCall","src":"6775:56:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:16","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:16"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:16"},"nodeType":"YulFunctionCall","src":"6850:15:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:16"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:16","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:16","type":""}],"src":"6702:169:16"},{"body":{"nodeType":"YulBlock","src":"6957:214:16","statements":[{"nodeType":"YulAssignment","src":"7090:37:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:16"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:16"},"nodeType":"YulFunctionCall","src":"7098:29:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:16"}]},{"nodeType":"YulAssignment","src":"7136:29:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:16","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:16"},"nodeType":"YulFunctionCall","src":"7153:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:16"},"nodeType":"YulFunctionCall","src":"7144:21:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:16","type":""}],"src":"6876:295:16"},{"body":{"nodeType":"YulBlock","src":"7268:1303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:16"},"nodeType":"YulFunctionCall","src":"7293:37:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:16"},"nodeType":"YulFunctionCall","src":"7417:18:16"},"nodeType":"YulExpressionStatement","src":"7417:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:16"},"nodeType":"YulFunctionCall","src":"7384:30:16"},"nodeType":"YulIf","src":"7381:56:16"},{"nodeType":"YulVariableDeclaration","src":"7447:52:16","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:16"},"nodeType":"YulFunctionCall","src":"7487:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:16"},"nodeType":"YulFunctionCall","src":"7461:38:16"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:16"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:16"},"nodeType":"YulFunctionCall","src":"7546:67:16"},"nodeType":"YulExpressionStatement","src":"7546:67:16"},{"nodeType":"YulVariableDeclaration","src":"7623:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:16","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:16","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:16","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:16"},"nodeType":"YulFunctionCall","src":"7756:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:16"},"nodeType":"YulFunctionCall","src":"7744:22:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:16"},"nodeType":"YulFunctionCall","src":"7794:37:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:16"},"nodeType":"YulFunctionCall","src":"7951:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:16"},"nodeType":"YulFunctionCall","src":"7945:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:16"},"nodeType":"YulFunctionCall","src":"7930:42:16"},"nodeType":"YulExpressionStatement","src":"7930:42:16"},{"nodeType":"YulAssignment","src":"7989:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:16"},"nodeType":"YulFunctionCall","src":"7999:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:16"}]},{"nodeType":"YulAssignment","src":"8030:31:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:16"},"nodeType":"YulFunctionCall","src":"8043:18:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:16"},"nodeType":"YulFunctionCall","src":"7875:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:16","statements":[{"nodeType":"YulAssignment","src":"7892:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:16"},"nodeType":"YulFunctionCall","src":"7897:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:16","statements":[]},"src":"7867:208:16"},{"body":{"nodeType":"YulBlock","src":"8111:156:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:16"},"nodeType":"YulFunctionCall","src":"8152:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:16"},"nodeType":"YulFunctionCall","src":"8146:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:16"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:16","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:16"},"nodeType":"YulFunctionCall","src":"8234:17:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:16"},"nodeType":"YulFunctionCall","src":"8204:48:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:16"},"nodeType":"YulFunctionCall","src":"8189:64:16"},"nodeType":"YulExpressionStatement","src":"8189:64:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:16"},"nodeType":"YulFunctionCall","src":"8091:19:16"},"nodeType":"YulIf","src":"8088:179:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:16"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:16","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:16"},"nodeType":"YulFunctionCall","src":"8297:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:16"},"nodeType":"YulFunctionCall","src":"8293:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:16"},"nodeType":"YulFunctionCall","src":"8280:36:16"},"nodeType":"YulExpressionStatement","src":"8280:36:16"}]},"nodeType":"YulCase","src":"7708:618:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:16","statements":[{"nodeType":"YulAssignment","src":"8412:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:16"},"nodeType":"YulFunctionCall","src":"8427:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:16"},"nodeType":"YulFunctionCall","src":"8421:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:16"},"nodeType":"YulIf","src":"8384:77:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:16"},"nodeType":"YulFunctionCall","src":"8487:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:16"},"nodeType":"YulFunctionCall","src":"8474:81:16"},"nodeType":"YulExpressionStatement","src":"8474:81:16"}]},"nodeType":"YulCase","src":"8335:230:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:16"},"nodeType":"YulFunctionCall","src":"7685:14:16"},"nodeType":"YulSwitch","src":"7678:887:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:16","type":""}],"src":"7176:1395:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162002946380380620029468339818101604052810190620000379190620001f6565b8160009081620000489190620004c6565b5080600190816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61238980620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611411565b6102bc565b6040516100fb9190611459565b60405180910390f35b61010c61039e565b6040516101199190611504565b60405180910390f35b61013c6004803603810190610137919061155c565b610430565b60405161014991906115ca565b60405180910390f35b61016c60048036038101906101679190611611565b6104b5565b005b61018860048036038101906101839190611651565b6105cc565b005b6101a4600480360381019061019f9190611651565b61062c565b005b6101c060048036038101906101bb919061155c565b61064c565b6040516101cd91906115ca565b60405180910390f35b6101f060048036038101906101eb91906116a4565b6106fd565b6040516101fd91906116e0565b60405180910390f35b61020e6107b4565b60405161021b9190611504565b60405180910390f35b61023e60048036038101906102399190611727565b610846565b005b61025a6004803603810190610255919061189c565b6109c6565b005b6102766004803603810190610271919061155c565b610a28565b6040516102839190611504565b60405180910390f35b6102a660048036038101906102a1919061191f565b610acf565b6040516102b39190611459565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610b63565b5b9050919050565b6060600080546103ad9061198e565b80601f01602080910402602001604051908101604052809291908181526020018280546103d99061198e565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b82610bcd565b61047a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047190611a31565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104c08261064c565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610530576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052790611ac3565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661054f610c39565b73ffffffffffffffffffffffffffffffffffffffff16148061057e575061057d81610578610c39565b610acf565b5b6105bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b490611b55565b60405180910390fd5b6105c78383610c41565b505050565b6105dd6105d7610c39565b82610cfa565b61061c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061390611be7565b60405180910390fd5b610627838383610dd8565b505050565b610647838383604051806020016040528060008152506109c6565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106eb90611c79565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361076d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076490611d0b565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546107c39061198e565b80601f01602080910402602001604051908101604052809291908181526020018280546107ef9061198e565b801561083c5780601f106108115761010080835404028352916020019161083c565b820191906000526020600020905b81548152906001019060200180831161081f57829003601f168201915b5050505050905090565b61084e610c39565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b290611d77565b60405180910390fd5b80600560006108c8610c39565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610975610c39565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516109ba9190611459565b60405180910390a35050565b6109d76109d1610c39565b83610cfa565b610a16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0d90611be7565b60405180910390fd5b610a2284848484611033565b50505050565b6060610a3382610bcd565b610a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6990611e09565b60405180910390fd5b6000610a7c61108f565b90506000815111610a9c5760405180602001604052806000815250610ac7565b80610aa6846110a6565b604051602001610ab7929190611e65565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610cb48361064c565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610d0582610bcd565b610d44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3b90611efb565b60405180910390fd5b6000610d4f8361064c565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610dbe57508373ffffffffffffffffffffffffffffffffffffffff16610da684610430565b73ffffffffffffffffffffffffffffffffffffffff16145b80610dcf5750610dce8185610acf565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610df88261064c565b73ffffffffffffffffffffffffffffffffffffffff1614610e4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4590611f8d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ebd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb49061201f565b60405180910390fd5b610ec8838383611206565b610ed3600082610c41565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f23919061206e565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f7a91906120a2565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b61103e848484610dd8565b61104a8484848461120b565b611089576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108090612148565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600082036110ed576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611201565b600082905060005b6000821461111f57808061110890612168565b915050600a8261111891906121df565b91506110f5565b60008167ffffffffffffffff81111561113b5761113a611771565b5b6040519080825280601f01601f19166020018201604052801561116d5781602001600182028036833780820191505090505b5090505b600085146111fa57600182611186919061206e565b9150600a856111959190612210565b60306111a191906120a2565b60f81b8183815181106111b7576111b6612241565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856111f391906121df565b9450611171565b8093505050505b919050565b505050565b600061122c8473ffffffffffffffffffffffffffffffffffffffff16611392565b15611385578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611255610c39565b8786866040518563ffffffff1660e01b815260040161127794939291906122c5565b6020604051808303816000875af19250505080156112b357506040513d601f19601f820116820180604052508101906112b09190612326565b60015b611335573d80600081146112e3576040519150601f19603f3d011682016040523d82523d6000602084013e6112e8565b606091505b50600081510361132d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132490612148565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061138a565b600190505b949350505050565b600080823b905060008111915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113ee816113b9565b81146113f957600080fd5b50565b60008135905061140b816113e5565b92915050565b600060208284031215611427576114266113af565b5b6000611435848285016113fc565b91505092915050565b60008115159050919050565b6114538161143e565b82525050565b600060208201905061146e600083018461144a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114ae578082015181840152602081019050611493565b60008484015250505050565b6000601f19601f8301169050919050565b60006114d682611474565b6114e0818561147f565b93506114f0818560208601611490565b6114f9816114ba565b840191505092915050565b6000602082019050818103600083015261151e81846114cb565b905092915050565b6000819050919050565b61153981611526565b811461154457600080fd5b50565b60008135905061155681611530565b92915050565b600060208284031215611572576115716113af565b5b600061158084828501611547565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115b482611589565b9050919050565b6115c4816115a9565b82525050565b60006020820190506115df60008301846115bb565b92915050565b6115ee816115a9565b81146115f957600080fd5b50565b60008135905061160b816115e5565b92915050565b60008060408385031215611628576116276113af565b5b6000611636858286016115fc565b925050602061164785828601611547565b9150509250929050565b60008060006060848603121561166a576116696113af565b5b6000611678868287016115fc565b9350506020611689868287016115fc565b925050604061169a86828701611547565b9150509250925092565b6000602082840312156116ba576116b96113af565b5b60006116c8848285016115fc565b91505092915050565b6116da81611526565b82525050565b60006020820190506116f560008301846116d1565b92915050565b6117048161143e565b811461170f57600080fd5b50565b600081359050611721816116fb565b92915050565b6000806040838503121561173e5761173d6113af565b5b600061174c858286016115fc565b925050602061175d85828601611712565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6117a9826114ba565b810181811067ffffffffffffffff821117156117c8576117c7611771565b5b80604052505050565b60006117db6113a5565b90506117e782826117a0565b919050565b600067ffffffffffffffff82111561180757611806611771565b5b611810826114ba565b9050602081019050919050565b82818337600083830152505050565b600061183f61183a846117ec565b6117d1565b90508281526020810184848401111561185b5761185a61176c565b5b61186684828561181d565b509392505050565b600082601f83011261188357611882611767565b5b813561189384826020860161182c565b91505092915050565b600080600080608085870312156118b6576118b56113af565b5b60006118c4878288016115fc565b94505060206118d5878288016115fc565b93505060406118e687828801611547565b925050606085013567ffffffffffffffff811115611907576119066113b4565b5b6119138782880161186e565b91505092959194509250565b60008060408385031215611936576119356113af565b5b6000611944858286016115fc565b9250506020611955858286016115fc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806119a657607f821691505b6020821081036119b9576119b861195f565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000611a1b602c8361147f565b9150611a26826119bf565b604082019050919050565b60006020820190508181036000830152611a4a81611a0e565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611aad60218361147f565b9150611ab882611a51565b604082019050919050565b60006020820190508181036000830152611adc81611aa0565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b6000611b3f60388361147f565b9150611b4a82611ae3565b604082019050919050565b60006020820190508181036000830152611b6e81611b32565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b6000611bd160318361147f565b9150611bdc82611b75565b604082019050919050565b60006020820190508181036000830152611c0081611bc4565b9050919050565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b6000611c6360298361147f565b9150611c6e82611c07565b604082019050919050565b60006020820190508181036000830152611c9281611c56565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000611cf5602a8361147f565b9150611d0082611c99565b604082019050919050565b60006020820190508181036000830152611d2481611ce8565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611d6160198361147f565b9150611d6c82611d2b565b602082019050919050565b60006020820190508181036000830152611d9081611d54565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b6000611df3602f8361147f565b9150611dfe82611d97565b604082019050919050565b60006020820190508181036000830152611e2281611de6565b9050919050565b600081905092915050565b6000611e3f82611474565b611e498185611e29565b9350611e59818560208601611490565b80840191505092915050565b6000611e718285611e34565b9150611e7d8284611e34565b91508190509392505050565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000611ee5602c8361147f565b9150611ef082611e89565b604082019050919050565b60006020820190508181036000830152611f1481611ed8565b9050919050565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b6000611f7760298361147f565b9150611f8282611f1b565b604082019050919050565b60006020820190508181036000830152611fa681611f6a565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061200960248361147f565b915061201482611fad565b604082019050919050565b6000602082019050818103600083015261203881611ffc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061207982611526565b915061208483611526565b925082820390508181111561209c5761209b61203f565b5b92915050565b60006120ad82611526565b91506120b883611526565b92508282019050808211156120d0576120cf61203f565b5b92915050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b600061213260328361147f565b915061213d826120d6565b604082019050919050565b6000602082019050818103600083015261216181612125565b9050919050565b600061217382611526565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121a5576121a461203f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006121ea82611526565b91506121f583611526565b925082612205576122046121b0565b5b828204905092915050565b600061221b82611526565b915061222683611526565b925082612236576122356121b0565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061229782612270565b6122a1818561227b565b93506122b1818560208601611490565b6122ba816114ba565b840191505092915050565b60006080820190506122da60008301876115bb565b6122e760208301866115bb565b6122f460408301856116d1565b8181036060830152612306818461228c565b905095945050505050565b600081519050612320816113e5565b92915050565b60006020828403121561233c5761233b6113af565b5b600061234a84828501612311565b9150509291505056fea264697066735822122029e1edc13e4587a4c78f0b53e9d07147d9f2304ad4df68df071cde8630cb10b264736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2946 CODESIZE SUB DUP1 PUSH3 0x2946 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2389 DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1611 JUMP JUMPDEST PUSH2 0x4B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x846 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x189C JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x191F JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0xB63 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x198E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x198E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x471 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C0 DUP3 PUSH2 0x64C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x527 SWAP1 PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x54F PUSH2 0xC39 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x57E JUMPI POP PUSH2 0x57D DUP2 PUSH2 0x578 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST JUMPDEST PUSH2 0x5BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B4 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C7 DUP4 DUP4 PUSH2 0xC41 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5DD PUSH2 0x5D7 PUSH2 0xC39 JUMP JUMPDEST DUP3 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x627 DUP4 DUP4 DUP4 PUSH2 0xDD8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x647 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9C6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EB SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x76D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x764 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7C3 SWAP1 PUSH2 0x198E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7EF SWAP1 PUSH2 0x198E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x83C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x811 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x83C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x81F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x84E PUSH2 0xC39 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x8C8 PUSH2 0xC39 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x975 PUSH2 0xC39 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x9D7 PUSH2 0x9D1 PUSH2 0xC39 JUMP JUMPDEST DUP4 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0xA16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0D SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA22 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1033 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA33 DUP3 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0xA72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA69 SWAP1 PUSH2 0x1E09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA7C PUSH2 0x108F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xA9C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAC7 JUMP JUMPDEST DUP1 PUSH2 0xAA6 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAB7 SWAP3 SWAP2 SWAP1 PUSH2 0x1E65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCB4 DUP4 PUSH2 0x64C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD05 DUP3 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0xD44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3B SWAP1 PUSH2 0x1EFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD4F DUP4 PUSH2 0x64C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xDBE JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDA6 DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xDCF JUMPI POP PUSH2 0xDCE DUP2 DUP6 PUSH2 0xACF JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDF8 DUP3 PUSH2 0x64C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE45 SWAP1 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB4 SWAP1 PUSH2 0x201F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEC8 DUP4 DUP4 DUP4 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0xED3 PUSH1 0x0 DUP3 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF23 SWAP2 SWAP1 PUSH2 0x206E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF7A SWAP2 SWAP1 PUSH2 0x20A2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x103E DUP5 DUP5 DUP5 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x104A DUP5 DUP5 DUP5 DUP5 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x1089 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1080 SWAP1 PUSH2 0x2148 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x111F JUMPI DUP1 DUP1 PUSH2 0x1108 SWAP1 PUSH2 0x2168 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1118 SWAP2 SWAP1 PUSH2 0x21DF JUMP JUMPDEST SWAP2 POP PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x113B JUMPI PUSH2 0x113A PUSH2 0x1771 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x116D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x11FA JUMPI PUSH1 0x1 DUP3 PUSH2 0x1186 SWAP2 SWAP1 PUSH2 0x206E JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1195 SWAP2 SWAP1 PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x11A1 SWAP2 SWAP1 PUSH2 0x20A2 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11B7 JUMPI PUSH2 0x11B6 PUSH2 0x2241 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x11F3 SWAP2 SWAP1 PUSH2 0x21DF JUMP JUMPDEST SWAP5 POP PUSH2 0x1171 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122C DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1392 JUMP JUMPDEST ISZERO PUSH2 0x1385 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1255 PUSH2 0xC39 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1277 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12B3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12B0 SWAP2 SWAP1 PUSH2 0x2326 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1335 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12E3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x132D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1324 SWAP1 PUSH2 0x2148 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x138A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13EE DUP2 PUSH2 0x13B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x13F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140B DUP2 PUSH2 0x13E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1427 JUMPI PUSH2 0x1426 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1435 DUP5 DUP3 DUP6 ADD PUSH2 0x13FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1453 DUP2 PUSH2 0x143E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x146E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x144A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14AE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D6 DUP3 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x14E0 DUP2 DUP6 PUSH2 0x147F JUMP JUMPDEST SWAP4 POP PUSH2 0x14F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1490 JUMP JUMPDEST PUSH2 0x14F9 DUP2 PUSH2 0x14BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x151E DUP2 DUP5 PUSH2 0x14CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1539 DUP2 PUSH2 0x1526 JUMP JUMPDEST DUP2 EQ PUSH2 0x1544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1556 DUP2 PUSH2 0x1530 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1572 JUMPI PUSH2 0x1571 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1580 DUP5 DUP3 DUP6 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B4 DUP3 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C4 DUP2 PUSH2 0x15A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15EE DUP2 PUSH2 0x15A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x15F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x160B DUP2 PUSH2 0x15E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1628 JUMPI PUSH2 0x1627 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1636 DUP6 DUP3 DUP7 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1647 DUP6 DUP3 DUP7 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x166A JUMPI PUSH2 0x1669 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1678 DUP7 DUP3 DUP8 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1689 DUP7 DUP3 DUP8 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x169A DUP7 DUP3 DUP8 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16BA JUMPI PUSH2 0x16B9 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16C8 DUP5 DUP3 DUP6 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16DA DUP2 PUSH2 0x1526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1704 DUP2 PUSH2 0x143E JUMP JUMPDEST DUP2 EQ PUSH2 0x170F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1721 DUP2 PUSH2 0x16FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x173E JUMPI PUSH2 0x173D PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x174C DUP6 DUP3 DUP7 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x175D DUP6 DUP3 DUP7 ADD PUSH2 0x1712 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x17A9 DUP3 PUSH2 0x14BA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17C8 JUMPI PUSH2 0x17C7 PUSH2 0x1771 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DB PUSH2 0x13A5 JUMP JUMPDEST SWAP1 POP PUSH2 0x17E7 DUP3 DUP3 PUSH2 0x17A0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1807 JUMPI PUSH2 0x1806 PUSH2 0x1771 JUMP JUMPDEST JUMPDEST PUSH2 0x1810 DUP3 PUSH2 0x14BA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x183F PUSH2 0x183A DUP5 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x17D1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x185B JUMPI PUSH2 0x185A PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH2 0x1866 DUP5 DUP3 DUP6 PUSH2 0x181D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1883 JUMPI PUSH2 0x1882 PUSH2 0x1767 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1893 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x182C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18B6 JUMPI PUSH2 0x18B5 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18C4 DUP8 DUP3 DUP9 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x18D5 DUP8 DUP3 DUP9 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18E6 DUP8 DUP3 DUP9 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1907 JUMPI PUSH2 0x1906 PUSH2 0x13B4 JUMP JUMPDEST JUMPDEST PUSH2 0x1913 DUP8 DUP3 DUP9 ADD PUSH2 0x186E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1936 JUMPI PUSH2 0x1935 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1944 DUP6 DUP3 DUP7 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1955 DUP6 DUP3 DUP7 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19B9 JUMPI PUSH2 0x19B8 PUSH2 0x195F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1B PUSH1 0x2C DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A26 DUP3 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4A DUP2 PUSH2 0x1A0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAD PUSH1 0x21 DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB8 DUP3 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ADC DUP2 PUSH2 0x1AA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3F PUSH1 0x38 DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B4A DUP3 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B6E DUP2 PUSH2 0x1B32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD1 PUSH1 0x31 DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BDC DUP3 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C00 DUP2 PUSH2 0x1BC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C63 PUSH1 0x29 DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6E DUP3 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C92 DUP2 PUSH2 0x1C56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF5 PUSH1 0x2A DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1D00 DUP3 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D24 DUP2 PUSH2 0x1CE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D61 PUSH1 0x19 DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6C DUP3 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D90 DUP2 PUSH2 0x1D54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF3 PUSH1 0x2F DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFE DUP3 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E22 DUP2 PUSH2 0x1DE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3F DUP3 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x1E49 DUP2 DUP6 PUSH2 0x1E29 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E59 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1490 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E71 DUP3 DUP6 PUSH2 0x1E34 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7D DUP3 DUP5 PUSH2 0x1E34 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE5 PUSH1 0x2C DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF0 DUP3 PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F14 DUP2 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x73206E6F74206F776E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F77 PUSH1 0x29 DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1F82 DUP3 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FA6 DUP2 PUSH2 0x1F6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2009 PUSH1 0x24 DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x2014 DUP3 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2038 DUP2 PUSH2 0x1FFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2079 DUP3 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x2084 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x209C JUMPI PUSH2 0x209B PUSH2 0x203F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AD DUP3 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B8 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20D0 JUMPI PUSH2 0x20CF PUSH2 0x203F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2132 PUSH1 0x32 DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x213D DUP3 PUSH2 0x20D6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2161 DUP2 PUSH2 0x2125 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2173 DUP3 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x21A5 JUMPI PUSH2 0x21A4 PUSH2 0x203F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21EA DUP3 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F5 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2205 JUMPI PUSH2 0x2204 PUSH2 0x21B0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221B DUP3 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x2226 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2236 JUMPI PUSH2 0x2235 PUSH2 0x21B0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2297 DUP3 PUSH2 0x2270 JUMP JUMPDEST PUSH2 0x22A1 DUP2 DUP6 PUSH2 0x227B JUMP JUMPDEST SWAP4 POP PUSH2 0x22B1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1490 JUMP JUMPDEST PUSH2 0x22BA DUP2 PUSH2 0x14BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x22DA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x22E7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x22F4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16D1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2306 DUP2 DUP5 PUSH2 0x228C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2320 DUP2 PUSH2 0x13E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x233C JUMPI PUSH2 0x233B PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x234A DUP5 DUP3 DUP6 ADD PUSH2 0x2311 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xE1 0xED 0xC1 RETURNDATACOPY GASLIMIT DUP8 LOG4 0xC7 DUP16 SIGNEXTEND MSTORE8 0xE9 0xD0 PUSH18 0x47D9F2304AD4DF68DF071CDE8630CB10B264 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"554:12701:5:-:0;;;1316:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:5;1382;:13;;;;;;:::i;:::-;;1415:7;1405;:17;;;;;;:::i;:::-;;1316:113;;554:12701;;7:75:16;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;554:12701:5:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1093":{"entryPoint":3137,"id":1093,"parameterSlots":2,"returnSlots":0},"@_baseURI_568":{"entryPoint":4239,"id":568,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_1166":{"entryPoint":4614,"id":1166,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_1155":{"entryPoint":4619,"id":1155,"parameterSlots":4,"returnSlots":1},"@_exists_807":{"entryPoint":3021,"id":807,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_848":{"entryPoint":3322,"id":848,"parameterSlots":2,"returnSlots":1},"@_msgSender_1765":{"entryPoint":3129,"id":1765,"parameterSlots":0,"returnSlots":1},"@_safeTransfer_789":{"entryPoint":4147,"id":789,"parameterSlots":4,"returnSlots":0},"@_transfer_1069":{"entryPoint":3544,"id":1069,"parameterSlots":3,"returnSlots":0},"@approve_611":{"entryPoint":1205,"id":611,"parameterSlots":2,"returnSlots":0},"@balanceOf_469":{"entryPoint":1789,"id":469,"parameterSlots":1,"returnSlots":1},"@getApproved_632":{"entryPoint":1072,"id":632,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_684":{"entryPoint":2767,"id":684,"parameterSlots":2,"returnSlots":1},"@isContract_1476":{"entryPoint":5010,"id":1476,"parameterSlots":1,"returnSlots":1},"@name_507":{"entryPoint":926,"id":507,"parameterSlots":0,"returnSlots":1},"@ownerOf_497":{"entryPoint":1612,"id":497,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_730":{"entryPoint":1580,"id":730,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_760":{"entryPoint":2502,"id":760,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_666":{"entryPoint":2118,"id":666,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2001":{"entryPoint":2915,"id":2001,"parameterSlots":1,"returnSlots":1},"@supportsInterface_445":{"entryPoint":700,"id":445,"parameterSlots":1,"returnSlots":1},"@symbol_517":{"entryPoint":1972,"id":517,"parameterSlots":0,"returnSlots":1},"@toString_1860":{"entryPoint":4262,"id":1860,"parameterSlots":1,"returnSlots":1},"@tokenURI_559":{"entryPoint":2600,"id":559,"parameterSlots":1,"returnSlots":1},"@transferFrom_711":{"entryPoint":1484,"id":711,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6188,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5628,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5906,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5116,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8977,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6254,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5447,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5796,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6431,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5713,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6300,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":5927,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5649,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8998,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5468,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5563,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5194,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8844,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5323,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7732,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":8485,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":8188,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":7508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack":{"entryPoint":7896,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack":{"entryPoint":6962,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack":{"entryPoint":7400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack":{"entryPoint":7254,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack":{"entryPoint":6670,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack":{"entryPoint":8042,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack":{"entryPoint":7654,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6816,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack":{"entryPoint":7108,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5841,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7781,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5578,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8901,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5380,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8520,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8223,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7543,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7931,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6997,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7289,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6705,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8077,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7689,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6851,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7143,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5856,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6097,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5029,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6124,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8816,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5236,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8827,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5247,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7721,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8354,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8671,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8302,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5545,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5182,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5049,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5513,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5414,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":6173,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5264,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6542,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6048,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":8552,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":8720,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":8255,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8624,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6495,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8769,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6001,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5991,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5996,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5044,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5039,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5306,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8406,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":8109,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":7467,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c":{"entryPoint":7817,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d":{"entryPoint":6883,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba":{"entryPoint":7321,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397":{"entryPoint":7175,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d":{"entryPoint":6591,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950":{"entryPoint":7963,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb":{"entryPoint":7575,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":6737,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2":{"entryPoint":7029,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5605,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":5883,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5093,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5424,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:27694:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"378:105:16","statements":[{"nodeType":"YulAssignment","src":"388:89:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:16","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:16"},"nodeType":"YulFunctionCall","src":"399:78:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:16"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:16","type":""}],"src":"334:149:16"},{"body":{"nodeType":"YulBlock","src":"531:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:16"},"nodeType":"YulFunctionCall","src":"589:12:16"},"nodeType":"YulExpressionStatement","src":"589:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:16"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:16"},"nodeType":"YulFunctionCall","src":"561:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:16"},"nodeType":"YulFunctionCall","src":"551:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:16"},"nodeType":"YulFunctionCall","src":"544:42:16"},"nodeType":"YulIf","src":"541:62:16"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:16","type":""}],"src":"489:120:16"},{"body":{"nodeType":"YulBlock","src":"666:86:16","statements":[{"nodeType":"YulAssignment","src":"676:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:16"},"nodeType":"YulFunctionCall","src":"685:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:16"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:16"},"nodeType":"YulFunctionCall","src":"714:32:16"},"nodeType":"YulExpressionStatement","src":"714:32:16"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:16","type":""}],"src":"615:137:16"},{"body":{"nodeType":"YulBlock","src":"823:262:16","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:16"},"nodeType":"YulFunctionCall","src":"871:79:16"},"nodeType":"YulExpressionStatement","src":"871:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:16"},"nodeType":"YulFunctionCall","src":"840:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:16"},"nodeType":"YulFunctionCall","src":"836:32:16"},"nodeType":"YulIf","src":"833:119:16"},{"nodeType":"YulBlock","src":"962:116:16","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:16"},"nodeType":"YulFunctionCall","src":"1036:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:16"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:16"},"nodeType":"YulFunctionCall","src":"1016:52:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:16","type":""}],"src":"758:327:16"},{"body":{"nodeType":"YulBlock","src":"1133:48:16","statements":[{"nodeType":"YulAssignment","src":"1143:32:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:16"},"nodeType":"YulFunctionCall","src":"1161:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:16"},"nodeType":"YulFunctionCall","src":"1154:21:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:16"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:16","type":""}],"src":"1091:90:16"},{"body":{"nodeType":"YulBlock","src":"1246:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:16"},"nodeType":"YulFunctionCall","src":"1268:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:16"},"nodeType":"YulFunctionCall","src":"1256:34:16"},"nodeType":"YulExpressionStatement","src":"1256:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:16","type":""}],"src":"1187:109:16"},{"body":{"nodeType":"YulBlock","src":"1394:118:16","statements":[{"nodeType":"YulAssignment","src":"1404:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:16"},"nodeType":"YulFunctionCall","src":"1412:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:16"},"nodeType":"YulFunctionCall","src":"1487:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:16"},"nodeType":"YulFunctionCall","src":"1440:65:16"},"nodeType":"YulExpressionStatement","src":"1440:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:16","type":""}],"src":"1302:210:16"},{"body":{"nodeType":"YulBlock","src":"1577:40:16","statements":[{"nodeType":"YulAssignment","src":"1588:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:16"},"nodeType":"YulFunctionCall","src":"1598:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:16","type":""}],"src":"1518:99:16"},{"body":{"nodeType":"YulBlock","src":"1719:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:16"},"nodeType":"YulFunctionCall","src":"1729:19:16"},"nodeType":"YulExpressionStatement","src":"1729:19:16"},{"nodeType":"YulAssignment","src":"1757:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:16"},"nodeType":"YulFunctionCall","src":"1772:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:16","type":""}],"src":"1623:169:16"},{"body":{"nodeType":"YulBlock","src":"1860:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:16"},"nodeType":"YulFunctionCall","src":"1960:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:16"},"nodeType":"YulFunctionCall","src":"1979:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:16"},"nodeType":"YulFunctionCall","src":"1973:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:16"},"nodeType":"YulFunctionCall","src":"1953:39:16"},"nodeType":"YulExpressionStatement","src":"1953:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:16"},"nodeType":"YulFunctionCall","src":"1897:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:16","statements":[{"nodeType":"YulAssignment","src":"1913:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:16"},"nodeType":"YulFunctionCall","src":"1918:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:16","statements":[]},"src":"1889:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:16"},"nodeType":"YulFunctionCall","src":"2018:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:16"},"nodeType":"YulFunctionCall","src":"2011:27:16"},"nodeType":"YulExpressionStatement","src":"2011:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:16","type":""}],"src":"1798:246:16"},{"body":{"nodeType":"YulBlock","src":"2098:54:16","statements":[{"nodeType":"YulAssignment","src":"2108:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:16"},"nodeType":"YulFunctionCall","src":"2122:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:16"},"nodeType":"YulFunctionCall","src":"2138:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:16"},"nodeType":"YulFunctionCall","src":"2118:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:16","type":""}],"src":"2050:102:16"},{"body":{"nodeType":"YulBlock","src":"2250:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:16"},"nodeType":"YulFunctionCall","src":"2274:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:16"},"nodeType":"YulFunctionCall","src":"2329:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:16"},"nodeType":"YulFunctionCall","src":"2444:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:16"},"nodeType":"YulFunctionCall","src":"2409:65:16"},"nodeType":"YulExpressionStatement","src":"2409:65:16"},{"nodeType":"YulAssignment","src":"2483:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:16"},"nodeType":"YulFunctionCall","src":"2499:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:16"},"nodeType":"YulFunctionCall","src":"2490:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:16","type":""}],"src":"2158:377:16"},{"body":{"nodeType":"YulBlock","src":"2659:195:16","statements":[{"nodeType":"YulAssignment","src":"2669:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:16"},"nodeType":"YulFunctionCall","src":"2677:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:16"},"nodeType":"YulFunctionCall","src":"2712:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:16"},"nodeType":"YulFunctionCall","src":"2731:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:16"},"nodeType":"YulFunctionCall","src":"2705:47:16"},"nodeType":"YulExpressionStatement","src":"2705:47:16"},{"nodeType":"YulAssignment","src":"2761:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:16"},"nodeType":"YulFunctionCall","src":"2769:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:16","type":""}],"src":"2541:313:16"},{"body":{"nodeType":"YulBlock","src":"2905:32:16","statements":[{"nodeType":"YulAssignment","src":"2915:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:16","type":""}],"src":"2860:77:16"},{"body":{"nodeType":"YulBlock","src":"2986:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:16"},"nodeType":"YulFunctionCall","src":"3045:12:16"},"nodeType":"YulExpressionStatement","src":"3045:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:16"},"nodeType":"YulFunctionCall","src":"3016:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:16"},"nodeType":"YulFunctionCall","src":"3006:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:16"},"nodeType":"YulFunctionCall","src":"2999:43:16"},"nodeType":"YulIf","src":"2996:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:16","type":""}],"src":"2943:122:16"},{"body":{"nodeType":"YulBlock","src":"3123:87:16","statements":[{"nodeType":"YulAssignment","src":"3133:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:16"},"nodeType":"YulFunctionCall","src":"3142:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:16"},"nodeType":"YulFunctionCall","src":"3171:33:16"},"nodeType":"YulExpressionStatement","src":"3171:33:16"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:16","type":""}],"src":"3071:139:16"},{"body":{"nodeType":"YulBlock","src":"3282:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:16"},"nodeType":"YulFunctionCall","src":"3330:79:16"},"nodeType":"YulExpressionStatement","src":"3330:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:16"},"nodeType":"YulFunctionCall","src":"3299:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:16"},"nodeType":"YulFunctionCall","src":"3295:32:16"},"nodeType":"YulIf","src":"3292:119:16"},{"nodeType":"YulBlock","src":"3421:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:16","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:16"},"nodeType":"YulFunctionCall","src":"3496:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:16"},"nodeType":"YulFunctionCall","src":"3475:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:16","type":""}],"src":"3216:329:16"},{"body":{"nodeType":"YulBlock","src":"3596:81:16","statements":[{"nodeType":"YulAssignment","src":"3606:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:16"},"nodeType":"YulFunctionCall","src":"3617:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:16","type":""}],"src":"3551:126:16"},{"body":{"nodeType":"YulBlock","src":"3728:51:16","statements":[{"nodeType":"YulAssignment","src":"3738:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:16"},"nodeType":"YulFunctionCall","src":"3749:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:16","type":""}],"src":"3683:96:16"},{"body":{"nodeType":"YulBlock","src":"3850:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:16"},"nodeType":"YulFunctionCall","src":"3872:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:16"},"nodeType":"YulFunctionCall","src":"3860:37:16"},"nodeType":"YulExpressionStatement","src":"3860:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:16","type":""}],"src":"3785:118:16"},{"body":{"nodeType":"YulBlock","src":"4007:124:16","statements":[{"nodeType":"YulAssignment","src":"4017:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:16"},"nodeType":"YulFunctionCall","src":"4025:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:16"},"nodeType":"YulFunctionCall","src":"4106:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:16"},"nodeType":"YulFunctionCall","src":"4053:71:16"},"nodeType":"YulExpressionStatement","src":"4053:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:16","type":""}],"src":"3909:222:16"},{"body":{"nodeType":"YulBlock","src":"4180:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:16"},"nodeType":"YulFunctionCall","src":"4239:12:16"},"nodeType":"YulExpressionStatement","src":"4239:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:16"},"nodeType":"YulFunctionCall","src":"4210:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:16"},"nodeType":"YulFunctionCall","src":"4200:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:16"},"nodeType":"YulFunctionCall","src":"4193:43:16"},"nodeType":"YulIf","src":"4190:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:16","type":""}],"src":"4137:122:16"},{"body":{"nodeType":"YulBlock","src":"4317:87:16","statements":[{"nodeType":"YulAssignment","src":"4327:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:16"},"nodeType":"YulFunctionCall","src":"4336:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:16"},"nodeType":"YulFunctionCall","src":"4365:33:16"},"nodeType":"YulExpressionStatement","src":"4365:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:16","type":""}],"src":"4265:139:16"},{"body":{"nodeType":"YulBlock","src":"4493:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:16"},"nodeType":"YulFunctionCall","src":"4541:79:16"},"nodeType":"YulExpressionStatement","src":"4541:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:16"},"nodeType":"YulFunctionCall","src":"4510:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:16"},"nodeType":"YulFunctionCall","src":"4506:32:16"},"nodeType":"YulIf","src":"4503:119:16"},{"nodeType":"YulBlock","src":"4632:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:16"},"nodeType":"YulFunctionCall","src":"4707:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:16"},"nodeType":"YulFunctionCall","src":"4686:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:16"}]}]},{"nodeType":"YulBlock","src":"4759:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:16"},"nodeType":"YulFunctionCall","src":"4835:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:16"},"nodeType":"YulFunctionCall","src":"4814:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:16","type":""}],"src":"4410:474:16"},{"body":{"nodeType":"YulBlock","src":"4990:519:16","statements":[{"body":{"nodeType":"YulBlock","src":"5036:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5038:77:16"},"nodeType":"YulFunctionCall","src":"5038:79:16"},"nodeType":"YulExpressionStatement","src":"5038:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5011:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5020:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5007:3:16"},"nodeType":"YulFunctionCall","src":"5007:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5032:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5003:3:16"},"nodeType":"YulFunctionCall","src":"5003:32:16"},"nodeType":"YulIf","src":"5000:119:16"},{"nodeType":"YulBlock","src":"5129:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5144:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5158:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5148:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5173:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5219:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:16"},"nodeType":"YulFunctionCall","src":"5204:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5228:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5183:20:16"},"nodeType":"YulFunctionCall","src":"5183:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5173:6:16"}]}]},{"nodeType":"YulBlock","src":"5256:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5271:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5285:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5275:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5301:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5336:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5347:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5332:3:16"},"nodeType":"YulFunctionCall","src":"5332:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5356:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5311:20:16"},"nodeType":"YulFunctionCall","src":"5311:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5301:6:16"}]}]},{"nodeType":"YulBlock","src":"5384:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5399:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5413:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5403:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5429:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5464:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5460:3:16"},"nodeType":"YulFunctionCall","src":"5460:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5484:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5439:20:16"},"nodeType":"YulFunctionCall","src":"5439:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5429:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4944:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4955:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4967:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4975:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4983:6:16","type":""}],"src":"4890:619:16"},{"body":{"nodeType":"YulBlock","src":"5581:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"5627:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5629:77:16"},"nodeType":"YulFunctionCall","src":"5629:79:16"},"nodeType":"YulExpressionStatement","src":"5629:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5602:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"5611:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5598:3:16"},"nodeType":"YulFunctionCall","src":"5598:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"5623:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5594:3:16"},"nodeType":"YulFunctionCall","src":"5594:32:16"},"nodeType":"YulIf","src":"5591:119:16"},{"nodeType":"YulBlock","src":"5720:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5735:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5749:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5739:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5764:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5799:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"5810:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5795:3:16"},"nodeType":"YulFunctionCall","src":"5795:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5819:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5774:20:16"},"nodeType":"YulFunctionCall","src":"5774:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5764:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5551:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5562:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5574:6:16","type":""}],"src":"5515:329:16"},{"body":{"nodeType":"YulBlock","src":"5915:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5932:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5955:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5937:17:16"},"nodeType":"YulFunctionCall","src":"5937:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5925:6:16"},"nodeType":"YulFunctionCall","src":"5925:37:16"},"nodeType":"YulExpressionStatement","src":"5925:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5903:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5910:3:16","type":""}],"src":"5850:118:16"},{"body":{"nodeType":"YulBlock","src":"6072:124:16","statements":[{"nodeType":"YulAssignment","src":"6082:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6105:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:16"},"nodeType":"YulFunctionCall","src":"6090:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6082:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6162:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6175:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"6186:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:16"},"nodeType":"YulFunctionCall","src":"6171:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6118:43:16"},"nodeType":"YulFunctionCall","src":"6118:71:16"},"nodeType":"YulExpressionStatement","src":"6118:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6044:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6056:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6067:4:16","type":""}],"src":"5974:222:16"},{"body":{"nodeType":"YulBlock","src":"6242:76:16","statements":[{"body":{"nodeType":"YulBlock","src":"6296:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6305:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6308:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6298:6:16"},"nodeType":"YulFunctionCall","src":"6298:12:16"},"nodeType":"YulExpressionStatement","src":"6298:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6265:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6287:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6272:14:16"},"nodeType":"YulFunctionCall","src":"6272:21:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6262:2:16"},"nodeType":"YulFunctionCall","src":"6262:32:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6255:6:16"},"nodeType":"YulFunctionCall","src":"6255:40:16"},"nodeType":"YulIf","src":"6252:60:16"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6235:5:16","type":""}],"src":"6202:116:16"},{"body":{"nodeType":"YulBlock","src":"6373:84:16","statements":[{"nodeType":"YulAssignment","src":"6383:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6405:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6392:12:16"},"nodeType":"YulFunctionCall","src":"6392:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6383:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6445:5:16"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6421:23:16"},"nodeType":"YulFunctionCall","src":"6421:30:16"},"nodeType":"YulExpressionStatement","src":"6421:30:16"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6351:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"6359:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6367:5:16","type":""}],"src":"6324:133:16"},{"body":{"nodeType":"YulBlock","src":"6543:388:16","statements":[{"body":{"nodeType":"YulBlock","src":"6589:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6591:77:16"},"nodeType":"YulFunctionCall","src":"6591:79:16"},"nodeType":"YulExpressionStatement","src":"6591:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6564:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"6573:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6560:3:16"},"nodeType":"YulFunctionCall","src":"6560:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"6585:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6556:3:16"},"nodeType":"YulFunctionCall","src":"6556:32:16"},"nodeType":"YulIf","src":"6553:119:16"},{"nodeType":"YulBlock","src":"6682:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6697:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6711:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6701:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6726:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6761:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6772:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6757:3:16"},"nodeType":"YulFunctionCall","src":"6757:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6781:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6736:20:16"},"nodeType":"YulFunctionCall","src":"6736:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6726:6:16"}]}]},{"nodeType":"YulBlock","src":"6809:115:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6824:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6838:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6828:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6854:60:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6886:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6897:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6882:3:16"},"nodeType":"YulFunctionCall","src":"6882:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6906:7:16"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6864:17:16"},"nodeType":"YulFunctionCall","src":"6864:50:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6854:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6505:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6516:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6528:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6536:6:16","type":""}],"src":"6463:468:16"},{"body":{"nodeType":"YulBlock","src":"7026:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7043:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7046:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7036:6:16"},"nodeType":"YulFunctionCall","src":"7036:12:16"},"nodeType":"YulExpressionStatement","src":"7036:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6937:117:16"},{"body":{"nodeType":"YulBlock","src":"7149:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7166:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7169:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7159:6:16"},"nodeType":"YulFunctionCall","src":"7159:12:16"},"nodeType":"YulExpressionStatement","src":"7159:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7060:117:16"},{"body":{"nodeType":"YulBlock","src":"7211:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7228:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7231:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7221:6:16"},"nodeType":"YulFunctionCall","src":"7221:88:16"},"nodeType":"YulExpressionStatement","src":"7221:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7325:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7328:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7318:6:16"},"nodeType":"YulFunctionCall","src":"7318:15:16"},"nodeType":"YulExpressionStatement","src":"7318:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7349:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7352:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7342:6:16"},"nodeType":"YulFunctionCall","src":"7342:15:16"},"nodeType":"YulExpressionStatement","src":"7342:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7183:180:16"},{"body":{"nodeType":"YulBlock","src":"7412:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7422:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7444:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7474:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7452:21:16"},"nodeType":"YulFunctionCall","src":"7452:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7440:3:16"},"nodeType":"YulFunctionCall","src":"7440:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7426:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7591:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7593:16:16"},"nodeType":"YulFunctionCall","src":"7593:18:16"},"nodeType":"YulExpressionStatement","src":"7593:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7534:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"7546:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7531:2:16"},"nodeType":"YulFunctionCall","src":"7531:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7570:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7582:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7567:2:16"},"nodeType":"YulFunctionCall","src":"7567:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7528:2:16"},"nodeType":"YulFunctionCall","src":"7528:62:16"},"nodeType":"YulIf","src":"7525:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7629:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7633:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7622:6:16"},"nodeType":"YulFunctionCall","src":"7622:22:16"},"nodeType":"YulExpressionStatement","src":"7622:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7398:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"7406:4:16","type":""}],"src":"7369:281:16"},{"body":{"nodeType":"YulBlock","src":"7697:88:16","statements":[{"nodeType":"YulAssignment","src":"7707:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7717:18:16"},"nodeType":"YulFunctionCall","src":"7717:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7707:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7766:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"7774:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7746:19:16"},"nodeType":"YulFunctionCall","src":"7746:33:16"},"nodeType":"YulExpressionStatement","src":"7746:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7681:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7690:6:16","type":""}],"src":"7656:129:16"},{"body":{"nodeType":"YulBlock","src":"7857:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"7962:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7964:16:16"},"nodeType":"YulFunctionCall","src":"7964:18:16"},"nodeType":"YulExpressionStatement","src":"7964:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7934:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7942:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7931:2:16"},"nodeType":"YulFunctionCall","src":"7931:30:16"},"nodeType":"YulIf","src":"7928:56:16"},{"nodeType":"YulAssignment","src":"7994:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8024:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8002:21:16"},"nodeType":"YulFunctionCall","src":"8002:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7994:4:16"}]},{"nodeType":"YulAssignment","src":"8068:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8080:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"8086:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8076:3:16"},"nodeType":"YulFunctionCall","src":"8076:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8068:4:16"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7841:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7852:4:16","type":""}],"src":"7791:307:16"},{"body":{"nodeType":"YulBlock","src":"8168:82:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8191:3:16"},{"name":"src","nodeType":"YulIdentifier","src":"8196:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"8201:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8178:12:16"},"nodeType":"YulFunctionCall","src":"8178:30:16"},"nodeType":"YulExpressionStatement","src":"8178:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8228:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"8233:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:16"},"nodeType":"YulFunctionCall","src":"8224:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"8242:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8217:6:16"},"nodeType":"YulFunctionCall","src":"8217:27:16"},"nodeType":"YulExpressionStatement","src":"8217:27:16"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8150:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8155:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"8160:6:16","type":""}],"src":"8104:146:16"},{"body":{"nodeType":"YulBlock","src":"8339:340:16","statements":[{"nodeType":"YulAssignment","src":"8349:74:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8415:6:16"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8374:40:16"},"nodeType":"YulFunctionCall","src":"8374:48:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8358:15:16"},"nodeType":"YulFunctionCall","src":"8358:65:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8349:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8439:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"8446:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8432:6:16"},"nodeType":"YulFunctionCall","src":"8432:21:16"},"nodeType":"YulExpressionStatement","src":"8432:21:16"},{"nodeType":"YulVariableDeclaration","src":"8462:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8477:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"8484:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8473:3:16"},"nodeType":"YulFunctionCall","src":"8473:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8466:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8527:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8529:77:16"},"nodeType":"YulFunctionCall","src":"8529:79:16"},"nodeType":"YulExpressionStatement","src":"8529:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8508:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"8513:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8504:3:16"},"nodeType":"YulFunctionCall","src":"8504:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"8522:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8501:2:16"},"nodeType":"YulFunctionCall","src":"8501:25:16"},"nodeType":"YulIf","src":"8498:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8656:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"8661:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"8666:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8619:36:16"},"nodeType":"YulFunctionCall","src":"8619:54:16"},"nodeType":"YulExpressionStatement","src":"8619:54:16"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8312:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"8317:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"8325:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8333:5:16","type":""}],"src":"8256:423:16"},{"body":{"nodeType":"YulBlock","src":"8759:277:16","statements":[{"body":{"nodeType":"YulBlock","src":"8808:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8810:77:16"},"nodeType":"YulFunctionCall","src":"8810:79:16"},"nodeType":"YulExpressionStatement","src":"8810:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8787:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8795:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8783:3:16"},"nodeType":"YulFunctionCall","src":"8783:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"8802:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8779:3:16"},"nodeType":"YulFunctionCall","src":"8779:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8772:6:16"},"nodeType":"YulFunctionCall","src":"8772:35:16"},"nodeType":"YulIf","src":"8769:122:16"},{"nodeType":"YulVariableDeclaration","src":"8900:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8927:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8914:12:16"},"nodeType":"YulFunctionCall","src":"8914:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8904:6:16","type":""}]},{"nodeType":"YulAssignment","src":"8943:87:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9003:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"9011:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8999:3:16"},"nodeType":"YulFunctionCall","src":"8999:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"9018:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"9026:3:16"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8952:46:16"},"nodeType":"YulFunctionCall","src":"8952:78:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8943:5:16"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8737:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"8745:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8753:5:16","type":""}],"src":"8698:338:16"},{"body":{"nodeType":"YulBlock","src":"9168:817:16","statements":[{"body":{"nodeType":"YulBlock","src":"9215:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9217:77:16"},"nodeType":"YulFunctionCall","src":"9217:79:16"},"nodeType":"YulExpressionStatement","src":"9217:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9189:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"9198:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9185:3:16"},"nodeType":"YulFunctionCall","src":"9185:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"9210:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9181:3:16"},"nodeType":"YulFunctionCall","src":"9181:33:16"},"nodeType":"YulIf","src":"9178:120:16"},{"nodeType":"YulBlock","src":"9308:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9323:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9337:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9327:6:16","type":""}]},{"nodeType":"YulAssignment","src":"9352:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9387:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9398:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9383:3:16"},"nodeType":"YulFunctionCall","src":"9383:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9407:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9362:20:16"},"nodeType":"YulFunctionCall","src":"9362:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9352:6:16"}]}]},{"nodeType":"YulBlock","src":"9435:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9450:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9464:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9454:6:16","type":""}]},{"nodeType":"YulAssignment","src":"9480:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9515:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9526:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9511:3:16"},"nodeType":"YulFunctionCall","src":"9511:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9535:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9490:20:16"},"nodeType":"YulFunctionCall","src":"9490:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9480:6:16"}]}]},{"nodeType":"YulBlock","src":"9563:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9578:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9592:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9582:6:16","type":""}]},{"nodeType":"YulAssignment","src":"9608:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9643:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9654:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9639:3:16"},"nodeType":"YulFunctionCall","src":"9639:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9663:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9618:20:16"},"nodeType":"YulFunctionCall","src":"9618:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9608:6:16"}]}]},{"nodeType":"YulBlock","src":"9691:287:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9706:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9737:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"9748:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9733:3:16"},"nodeType":"YulFunctionCall","src":"9733:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9720:12:16"},"nodeType":"YulFunctionCall","src":"9720:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9710:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"9799:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9801:77:16"},"nodeType":"YulFunctionCall","src":"9801:79:16"},"nodeType":"YulExpressionStatement","src":"9801:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9771:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"9779:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9768:2:16"},"nodeType":"YulFunctionCall","src":"9768:30:16"},"nodeType":"YulIf","src":"9765:117:16"},{"nodeType":"YulAssignment","src":"9896:72:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9940:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9951:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9936:3:16"},"nodeType":"YulFunctionCall","src":"9936:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9960:7:16"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9906:29:16"},"nodeType":"YulFunctionCall","src":"9906:62:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9896:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9114:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9125:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9137:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9145:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9153:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9161:6:16","type":""}],"src":"9042:943:16"},{"body":{"nodeType":"YulBlock","src":"10074:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"10120:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10122:77:16"},"nodeType":"YulFunctionCall","src":"10122:79:16"},"nodeType":"YulExpressionStatement","src":"10122:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10095:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"10104:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10091:3:16"},"nodeType":"YulFunctionCall","src":"10091:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"10116:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10087:3:16"},"nodeType":"YulFunctionCall","src":"10087:32:16"},"nodeType":"YulIf","src":"10084:119:16"},{"nodeType":"YulBlock","src":"10213:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10228:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10242:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10232:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10257:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10292:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10303:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10288:3:16"},"nodeType":"YulFunctionCall","src":"10288:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10312:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10267:20:16"},"nodeType":"YulFunctionCall","src":"10267:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10257:6:16"}]}]},{"nodeType":"YulBlock","src":"10340:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10355:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10369:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10359:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10385:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10420:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10431:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10416:3:16"},"nodeType":"YulFunctionCall","src":"10416:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10440:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10395:20:16"},"nodeType":"YulFunctionCall","src":"10395:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10385:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10036:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10047:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10059:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10067:6:16","type":""}],"src":"9991:474:16"},{"body":{"nodeType":"YulBlock","src":"10499:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10516:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10519:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10509:6:16"},"nodeType":"YulFunctionCall","src":"10509:88:16"},"nodeType":"YulExpressionStatement","src":"10509:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10613:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10616:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10606:6:16"},"nodeType":"YulFunctionCall","src":"10606:15:16"},"nodeType":"YulExpressionStatement","src":"10606:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10637:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10640:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10630:6:16"},"nodeType":"YulFunctionCall","src":"10630:15:16"},"nodeType":"YulExpressionStatement","src":"10630:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10471:180:16"},{"body":{"nodeType":"YulBlock","src":"10708:269:16","statements":[{"nodeType":"YulAssignment","src":"10718:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10732:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"10738:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10728:3:16"},"nodeType":"YulFunctionCall","src":"10728:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10718:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"10749:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10779:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"10785:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10775:3:16"},"nodeType":"YulFunctionCall","src":"10775:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10753:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"10826:51:16","statements":[{"nodeType":"YulAssignment","src":"10840:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10854:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"10862:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10850:3:16"},"nodeType":"YulFunctionCall","src":"10850:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10840:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10806:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10799:6:16"},"nodeType":"YulFunctionCall","src":"10799:26:16"},"nodeType":"YulIf","src":"10796:81:16"},{"body":{"nodeType":"YulBlock","src":"10929:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10943:16:16"},"nodeType":"YulFunctionCall","src":"10943:18:16"},"nodeType":"YulExpressionStatement","src":"10943:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10893:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10916:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"10924:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10913:2:16"},"nodeType":"YulFunctionCall","src":"10913:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10890:2:16"},"nodeType":"YulFunctionCall","src":"10890:38:16"},"nodeType":"YulIf","src":"10887:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10692:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10701:6:16","type":""}],"src":"10657:320:16"},{"body":{"nodeType":"YulBlock","src":"11089:125:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11111:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11119:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11107:3:16"},"nodeType":"YulFunctionCall","src":"11107:14:16"},{"hexValue":"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578","kind":"string","nodeType":"YulLiteral","src":"11123:34:16","type":"","value":"ERC721: approved query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11100:6:16"},"nodeType":"YulFunctionCall","src":"11100:58:16"},"nodeType":"YulExpressionStatement","src":"11100:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11179:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11187:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11175:3:16"},"nodeType":"YulFunctionCall","src":"11175:15:16"},{"hexValue":"697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"11192:14:16","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11168:6:16"},"nodeType":"YulFunctionCall","src":"11168:39:16"},"nodeType":"YulExpressionStatement","src":"11168:39:16"}]},"name":"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11081:6:16","type":""}],"src":"10983:231:16"},{"body":{"nodeType":"YulBlock","src":"11366:220:16","statements":[{"nodeType":"YulAssignment","src":"11376:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11442:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"11447:2:16","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11383:58:16"},"nodeType":"YulFunctionCall","src":"11383:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11376:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11548:3:16"}],"functionName":{"name":"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","nodeType":"YulIdentifier","src":"11459:88:16"},"nodeType":"YulFunctionCall","src":"11459:93:16"},"nodeType":"YulExpressionStatement","src":"11459:93:16"},{"nodeType":"YulAssignment","src":"11561:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11572:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"11577:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11568:3:16"},"nodeType":"YulFunctionCall","src":"11568:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11561:3:16"}]}]},"name":"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11354:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11362:3:16","type":""}],"src":"11220:366:16"},{"body":{"nodeType":"YulBlock","src":"11763:248:16","statements":[{"nodeType":"YulAssignment","src":"11773:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11785:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11796:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11781:3:16"},"nodeType":"YulFunctionCall","src":"11781:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11773:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11820:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"11831:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11816:3:16"},"nodeType":"YulFunctionCall","src":"11816:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11839:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"11845:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11835:3:16"},"nodeType":"YulFunctionCall","src":"11835:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11809:6:16"},"nodeType":"YulFunctionCall","src":"11809:47:16"},"nodeType":"YulExpressionStatement","src":"11809:47:16"},{"nodeType":"YulAssignment","src":"11865:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11999:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11873:124:16"},"nodeType":"YulFunctionCall","src":"11873:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11865:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11743:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11758:4:16","type":""}],"src":"11592:419:16"},{"body":{"nodeType":"YulBlock","src":"12123:114:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12145:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12153:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12141:3:16"},"nodeType":"YulFunctionCall","src":"12141:14:16"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"12157:34:16","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12134:6:16"},"nodeType":"YulFunctionCall","src":"12134:58:16"},"nodeType":"YulExpressionStatement","src":"12134:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12213:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12221:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12209:3:16"},"nodeType":"YulFunctionCall","src":"12209:15:16"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"12226:3:16","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12202:6:16"},"nodeType":"YulFunctionCall","src":"12202:28:16"},"nodeType":"YulExpressionStatement","src":"12202:28:16"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12115:6:16","type":""}],"src":"12017:220:16"},{"body":{"nodeType":"YulBlock","src":"12389:220:16","statements":[{"nodeType":"YulAssignment","src":"12399:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12465:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"12470:2:16","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12406:58:16"},"nodeType":"YulFunctionCall","src":"12406:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12399:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12571:3:16"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"12482:88:16"},"nodeType":"YulFunctionCall","src":"12482:93:16"},"nodeType":"YulExpressionStatement","src":"12482:93:16"},{"nodeType":"YulAssignment","src":"12584:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12595:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"12600:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12591:3:16"},"nodeType":"YulFunctionCall","src":"12591:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12584:3:16"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12377:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12385:3:16","type":""}],"src":"12243:366:16"},{"body":{"nodeType":"YulBlock","src":"12786:248:16","statements":[{"nodeType":"YulAssignment","src":"12796:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12808:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12819:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12804:3:16"},"nodeType":"YulFunctionCall","src":"12804:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12796:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12843:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12854:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12839:3:16"},"nodeType":"YulFunctionCall","src":"12839:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12862:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"12868:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12858:3:16"},"nodeType":"YulFunctionCall","src":"12858:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12832:6:16"},"nodeType":"YulFunctionCall","src":"12832:47:16"},"nodeType":"YulExpressionStatement","src":"12832:47:16"},{"nodeType":"YulAssignment","src":"12888:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13022:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12896:124:16"},"nodeType":"YulFunctionCall","src":"12896:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12888:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12766:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12781:4:16","type":""}],"src":"12615:419:16"},{"body":{"nodeType":"YulBlock","src":"13146:137:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13168:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13176:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13164:3:16"},"nodeType":"YulFunctionCall","src":"13164:14:16"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77","kind":"string","nodeType":"YulLiteral","src":"13180:34:16","type":"","value":"ERC721: approve caller is not ow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13157:6:16"},"nodeType":"YulFunctionCall","src":"13157:58:16"},"nodeType":"YulExpressionStatement","src":"13157:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13236:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13244:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13232:3:16"},"nodeType":"YulFunctionCall","src":"13232:15:16"},{"hexValue":"6e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"13249:26:16","type":"","value":"ner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13225:6:16"},"nodeType":"YulFunctionCall","src":"13225:51:16"},"nodeType":"YulExpressionStatement","src":"13225:51:16"}]},"name":"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13138:6:16","type":""}],"src":"13040:243:16"},{"body":{"nodeType":"YulBlock","src":"13435:220:16","statements":[{"nodeType":"YulAssignment","src":"13445:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13511:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"13516:2:16","type":"","value":"56"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13452:58:16"},"nodeType":"YulFunctionCall","src":"13452:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13445:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13617:3:16"}],"functionName":{"name":"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","nodeType":"YulIdentifier","src":"13528:88:16"},"nodeType":"YulFunctionCall","src":"13528:93:16"},"nodeType":"YulExpressionStatement","src":"13528:93:16"},{"nodeType":"YulAssignment","src":"13630:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13641:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"13646:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13637:3:16"},"nodeType":"YulFunctionCall","src":"13637:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13630:3:16"}]}]},"name":"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13423:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13431:3:16","type":""}],"src":"13289:366:16"},{"body":{"nodeType":"YulBlock","src":"13832:248:16","statements":[{"nodeType":"YulAssignment","src":"13842:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13854:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13865:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13850:3:16"},"nodeType":"YulFunctionCall","src":"13850:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13842:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13889:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13900:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13885:3:16"},"nodeType":"YulFunctionCall","src":"13885:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13908:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"13914:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13904:3:16"},"nodeType":"YulFunctionCall","src":"13904:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13878:6:16"},"nodeType":"YulFunctionCall","src":"13878:47:16"},"nodeType":"YulExpressionStatement","src":"13878:47:16"},{"nodeType":"YulAssignment","src":"13934:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14068:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13942:124:16"},"nodeType":"YulFunctionCall","src":"13942:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13934:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13812:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13827:4:16","type":""}],"src":"13661:419:16"},{"body":{"nodeType":"YulBlock","src":"14192:130:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14214:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"14222:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14210:3:16"},"nodeType":"YulFunctionCall","src":"14210:14:16"},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f","kind":"string","nodeType":"YulLiteral","src":"14226:34:16","type":"","value":"ERC721: transfer caller is not o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14203:6:16"},"nodeType":"YulFunctionCall","src":"14203:58:16"},"nodeType":"YulExpressionStatement","src":"14203:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14282:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"14290:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14278:3:16"},"nodeType":"YulFunctionCall","src":"14278:15:16"},{"hexValue":"776e6572206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"14295:19:16","type":"","value":"wner nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14271:6:16"},"nodeType":"YulFunctionCall","src":"14271:44:16"},"nodeType":"YulExpressionStatement","src":"14271:44:16"}]},"name":"store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14184:6:16","type":""}],"src":"14086:236:16"},{"body":{"nodeType":"YulBlock","src":"14474:220:16","statements":[{"nodeType":"YulAssignment","src":"14484:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14550:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14555:2:16","type":"","value":"49"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14491:58:16"},"nodeType":"YulFunctionCall","src":"14491:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14484:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14656:3:16"}],"functionName":{"name":"store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","nodeType":"YulIdentifier","src":"14567:88:16"},"nodeType":"YulFunctionCall","src":"14567:93:16"},"nodeType":"YulExpressionStatement","src":"14567:93:16"},{"nodeType":"YulAssignment","src":"14669:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14680:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14685:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14676:3:16"},"nodeType":"YulFunctionCall","src":"14676:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14669:3:16"}]}]},"name":"abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14462:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14470:3:16","type":""}],"src":"14328:366:16"},{"body":{"nodeType":"YulBlock","src":"14871:248:16","statements":[{"nodeType":"YulAssignment","src":"14881:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14893:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14904:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14889:3:16"},"nodeType":"YulFunctionCall","src":"14889:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14881:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14928:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14939:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14924:3:16"},"nodeType":"YulFunctionCall","src":"14924:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14947:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"14953:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14943:3:16"},"nodeType":"YulFunctionCall","src":"14943:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14917:6:16"},"nodeType":"YulFunctionCall","src":"14917:47:16"},"nodeType":"YulExpressionStatement","src":"14917:47:16"},{"nodeType":"YulAssignment","src":"14973:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15107:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14981:124:16"},"nodeType":"YulFunctionCall","src":"14981:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14973:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14851:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14866:4:16","type":""}],"src":"14700:419:16"},{"body":{"nodeType":"YulBlock","src":"15231:122:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15253:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15261:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15249:3:16"},"nodeType":"YulFunctionCall","src":"15249:14:16"},{"hexValue":"4552433732313a206f776e657220717565727920666f72206e6f6e6578697374","kind":"string","nodeType":"YulLiteral","src":"15265:34:16","type":"","value":"ERC721: owner query for nonexist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15242:6:16"},"nodeType":"YulFunctionCall","src":"15242:58:16"},"nodeType":"YulExpressionStatement","src":"15242:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15321:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15329:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15317:3:16"},"nodeType":"YulFunctionCall","src":"15317:15:16"},{"hexValue":"656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"15334:11:16","type":"","value":"ent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15310:6:16"},"nodeType":"YulFunctionCall","src":"15310:36:16"},"nodeType":"YulExpressionStatement","src":"15310:36:16"}]},"name":"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15223:6:16","type":""}],"src":"15125:228:16"},{"body":{"nodeType":"YulBlock","src":"15505:220:16","statements":[{"nodeType":"YulAssignment","src":"15515:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15581:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15586:2:16","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15522:58:16"},"nodeType":"YulFunctionCall","src":"15522:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15515:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15687:3:16"}],"functionName":{"name":"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","nodeType":"YulIdentifier","src":"15598:88:16"},"nodeType":"YulFunctionCall","src":"15598:93:16"},"nodeType":"YulExpressionStatement","src":"15598:93:16"},{"nodeType":"YulAssignment","src":"15700:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15711:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"15716:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15707:3:16"},"nodeType":"YulFunctionCall","src":"15707:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15700:3:16"}]}]},"name":"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15493:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15501:3:16","type":""}],"src":"15359:366:16"},{"body":{"nodeType":"YulBlock","src":"15902:248:16","statements":[{"nodeType":"YulAssignment","src":"15912:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15924:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15935:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15920:3:16"},"nodeType":"YulFunctionCall","src":"15920:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15912:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15959:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"15970:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15955:3:16"},"nodeType":"YulFunctionCall","src":"15955:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15978:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"15984:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15974:3:16"},"nodeType":"YulFunctionCall","src":"15974:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15948:6:16"},"nodeType":"YulFunctionCall","src":"15948:47:16"},"nodeType":"YulExpressionStatement","src":"15948:47:16"},{"nodeType":"YulAssignment","src":"16004:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16138:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16012:124:16"},"nodeType":"YulFunctionCall","src":"16012:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16004:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15882:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15897:4:16","type":""}],"src":"15731:419:16"},{"body":{"nodeType":"YulBlock","src":"16262:123:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16284:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16292:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16280:3:16"},"nodeType":"YulFunctionCall","src":"16280:14:16"},{"hexValue":"4552433732313a2062616c616e636520717565727920666f7220746865207a65","kind":"string","nodeType":"YulLiteral","src":"16296:34:16","type":"","value":"ERC721: balance query for the ze"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16273:6:16"},"nodeType":"YulFunctionCall","src":"16273:58:16"},"nodeType":"YulExpressionStatement","src":"16273:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16352:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16360:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16348:3:16"},"nodeType":"YulFunctionCall","src":"16348:15:16"},{"hexValue":"726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"16365:12:16","type":"","value":"ro address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16341:6:16"},"nodeType":"YulFunctionCall","src":"16341:37:16"},"nodeType":"YulExpressionStatement","src":"16341:37:16"}]},"name":"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16254:6:16","type":""}],"src":"16156:229:16"},{"body":{"nodeType":"YulBlock","src":"16537:220:16","statements":[{"nodeType":"YulAssignment","src":"16547:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16613:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16618:2:16","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16554:58:16"},"nodeType":"YulFunctionCall","src":"16554:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16547:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16719:3:16"}],"functionName":{"name":"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","nodeType":"YulIdentifier","src":"16630:88:16"},"nodeType":"YulFunctionCall","src":"16630:93:16"},"nodeType":"YulExpressionStatement","src":"16630:93:16"},{"nodeType":"YulAssignment","src":"16732:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16743:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16748:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16739:3:16"},"nodeType":"YulFunctionCall","src":"16739:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16732:3:16"}]}]},"name":"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16525:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16533:3:16","type":""}],"src":"16391:366:16"},{"body":{"nodeType":"YulBlock","src":"16934:248:16","statements":[{"nodeType":"YulAssignment","src":"16944:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16956:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16967:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16952:3:16"},"nodeType":"YulFunctionCall","src":"16952:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16944:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16991:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17002:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16987:3:16"},"nodeType":"YulFunctionCall","src":"16987:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17010:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"17016:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17006:3:16"},"nodeType":"YulFunctionCall","src":"17006:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16980:6:16"},"nodeType":"YulFunctionCall","src":"16980:47:16"},"nodeType":"YulExpressionStatement","src":"16980:47:16"},{"nodeType":"YulAssignment","src":"17036:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17170:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17044:124:16"},"nodeType":"YulFunctionCall","src":"17044:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17036:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16914:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16929:4:16","type":""}],"src":"16763:419:16"},{"body":{"nodeType":"YulBlock","src":"17294:69:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17316:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"17324:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17312:3:16"},"nodeType":"YulFunctionCall","src":"17312:14:16"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"17328:27:16","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17305:6:16"},"nodeType":"YulFunctionCall","src":"17305:51:16"},"nodeType":"YulExpressionStatement","src":"17305:51:16"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17286:6:16","type":""}],"src":"17188:175:16"},{"body":{"nodeType":"YulBlock","src":"17515:220:16","statements":[{"nodeType":"YulAssignment","src":"17525:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17591:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17596:2:16","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17532:58:16"},"nodeType":"YulFunctionCall","src":"17532:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17525:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17697:3:16"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"17608:88:16"},"nodeType":"YulFunctionCall","src":"17608:93:16"},"nodeType":"YulExpressionStatement","src":"17608:93:16"},{"nodeType":"YulAssignment","src":"17710:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17721:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17726:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17717:3:16"},"nodeType":"YulFunctionCall","src":"17717:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17710:3:16"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17503:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17511:3:16","type":""}],"src":"17369:366:16"},{"body":{"nodeType":"YulBlock","src":"17912:248:16","statements":[{"nodeType":"YulAssignment","src":"17922:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17934:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17945:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17930:3:16"},"nodeType":"YulFunctionCall","src":"17930:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17922:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17969:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17980:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17965:3:16"},"nodeType":"YulFunctionCall","src":"17965:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17988:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"17994:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17984:3:16"},"nodeType":"YulFunctionCall","src":"17984:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17958:6:16"},"nodeType":"YulFunctionCall","src":"17958:47:16"},"nodeType":"YulExpressionStatement","src":"17958:47:16"},{"nodeType":"YulAssignment","src":"18014:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18148:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18022:124:16"},"nodeType":"YulFunctionCall","src":"18022:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18014:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17892:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17907:4:16","type":""}],"src":"17741:419:16"},{"body":{"nodeType":"YulBlock","src":"18272:128:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18294:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"18302:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18290:3:16"},"nodeType":"YulFunctionCall","src":"18290:14:16"},{"hexValue":"4552433732314d657461646174613a2055524920717565727920666f72206e6f","kind":"string","nodeType":"YulLiteral","src":"18306:34:16","type":"","value":"ERC721Metadata: URI query for no"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18283:6:16"},"nodeType":"YulFunctionCall","src":"18283:58:16"},"nodeType":"YulExpressionStatement","src":"18283:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18362:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"18370:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18358:3:16"},"nodeType":"YulFunctionCall","src":"18358:15:16"},{"hexValue":"6e6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"18375:17:16","type":"","value":"nexistent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18351:6:16"},"nodeType":"YulFunctionCall","src":"18351:42:16"},"nodeType":"YulExpressionStatement","src":"18351:42:16"}]},"name":"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18264:6:16","type":""}],"src":"18166:234:16"},{"body":{"nodeType":"YulBlock","src":"18552:220:16","statements":[{"nodeType":"YulAssignment","src":"18562:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18628:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18633:2:16","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18569:58:16"},"nodeType":"YulFunctionCall","src":"18569:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18562:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18734:3:16"}],"functionName":{"name":"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","nodeType":"YulIdentifier","src":"18645:88:16"},"nodeType":"YulFunctionCall","src":"18645:93:16"},"nodeType":"YulExpressionStatement","src":"18645:93:16"},{"nodeType":"YulAssignment","src":"18747:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18758:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18763:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18754:3:16"},"nodeType":"YulFunctionCall","src":"18754:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18747:3:16"}]}]},"name":"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18540:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18548:3:16","type":""}],"src":"18406:366:16"},{"body":{"nodeType":"YulBlock","src":"18949:248:16","statements":[{"nodeType":"YulAssignment","src":"18959:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18971:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18982:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18967:3:16"},"nodeType":"YulFunctionCall","src":"18967:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18959:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19006:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19017:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19002:3:16"},"nodeType":"YulFunctionCall","src":"19002:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19025:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"19031:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19021:3:16"},"nodeType":"YulFunctionCall","src":"19021:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18995:6:16"},"nodeType":"YulFunctionCall","src":"18995:47:16"},"nodeType":"YulExpressionStatement","src":"18995:47:16"},{"nodeType":"YulAssignment","src":"19051:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19185:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19059:124:16"},"nodeType":"YulFunctionCall","src":"19059:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19051:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18929:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18944:4:16","type":""}],"src":"18778:419:16"},{"body":{"nodeType":"YulBlock","src":"19317:34:16","statements":[{"nodeType":"YulAssignment","src":"19327:18:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"19342:3:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19327:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19289:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"19294:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"19305:11:16","type":""}],"src":"19203:148:16"},{"body":{"nodeType":"YulBlock","src":"19467:280:16","statements":[{"nodeType":"YulVariableDeclaration","src":"19477:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19524:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19491:32:16"},"nodeType":"YulFunctionCall","src":"19491:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19481:6:16","type":""}]},{"nodeType":"YulAssignment","src":"19539:96:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19623:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"19628:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19546:76:16"},"nodeType":"YulFunctionCall","src":"19546:89:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19539:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19683:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"19690:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19679:3:16"},"nodeType":"YulFunctionCall","src":"19679:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"19697:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"19702:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"19644:34:16"},"nodeType":"YulFunctionCall","src":"19644:65:16"},"nodeType":"YulExpressionStatement","src":"19644:65:16"},{"nodeType":"YulAssignment","src":"19718:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19729:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"19734:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19725:3:16"},"nodeType":"YulFunctionCall","src":"19725:16:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19718:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19448:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19455:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19463:3:16","type":""}],"src":"19357:390:16"},{"body":{"nodeType":"YulBlock","src":"19937:251:16","statements":[{"nodeType":"YulAssignment","src":"19948:102:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20037:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"20046:3:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"19955:81:16"},"nodeType":"YulFunctionCall","src":"19955:95:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19948:3:16"}]},{"nodeType":"YulAssignment","src":"20060:102:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20149:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"20158:3:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20067:81:16"},"nodeType":"YulFunctionCall","src":"20067:95:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20060:3:16"}]},{"nodeType":"YulAssignment","src":"20172:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"20179:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20172:3:16"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19908:3:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19914:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19922:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19933:3:16","type":""}],"src":"19753:435:16"},{"body":{"nodeType":"YulBlock","src":"20300:125:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20322:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"20330:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20318:3:16"},"nodeType":"YulFunctionCall","src":"20318:14:16"},{"hexValue":"4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578","kind":"string","nodeType":"YulLiteral","src":"20334:34:16","type":"","value":"ERC721: operator query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20311:6:16"},"nodeType":"YulFunctionCall","src":"20311:58:16"},"nodeType":"YulExpressionStatement","src":"20311:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20390:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"20398:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20386:3:16"},"nodeType":"YulFunctionCall","src":"20386:15:16"},{"hexValue":"697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"20403:14:16","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20379:6:16"},"nodeType":"YulFunctionCall","src":"20379:39:16"},"nodeType":"YulExpressionStatement","src":"20379:39:16"}]},"name":"store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20292:6:16","type":""}],"src":"20194:231:16"},{"body":{"nodeType":"YulBlock","src":"20577:220:16","statements":[{"nodeType":"YulAssignment","src":"20587:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20653:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"20658:2:16","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20594:58:16"},"nodeType":"YulFunctionCall","src":"20594:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20587:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20759:3:16"}],"functionName":{"name":"store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","nodeType":"YulIdentifier","src":"20670:88:16"},"nodeType":"YulFunctionCall","src":"20670:93:16"},"nodeType":"YulExpressionStatement","src":"20670:93:16"},{"nodeType":"YulAssignment","src":"20772:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20783:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"20788:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20779:3:16"},"nodeType":"YulFunctionCall","src":"20779:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20772:3:16"}]}]},"name":"abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20565:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20573:3:16","type":""}],"src":"20431:366:16"},{"body":{"nodeType":"YulBlock","src":"20974:248:16","statements":[{"nodeType":"YulAssignment","src":"20984:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20996:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"21007:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20992:3:16"},"nodeType":"YulFunctionCall","src":"20992:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20984:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21031:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"21042:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21027:3:16"},"nodeType":"YulFunctionCall","src":"21027:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21050:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"21056:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21046:3:16"},"nodeType":"YulFunctionCall","src":"21046:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21020:6:16"},"nodeType":"YulFunctionCall","src":"21020:47:16"},"nodeType":"YulExpressionStatement","src":"21020:47:16"},{"nodeType":"YulAssignment","src":"21076:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21210:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21084:124:16"},"nodeType":"YulFunctionCall","src":"21084:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21076:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20954:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20969:4:16","type":""}],"src":"20803:419:16"},{"body":{"nodeType":"YulBlock","src":"21334:122:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21356:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"21364:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21352:3:16"},"nodeType":"YulFunctionCall","src":"21352:14:16"},{"hexValue":"4552433732313a207472616e73666572206f6620746f6b656e20746861742069","kind":"string","nodeType":"YulLiteral","src":"21368:34:16","type":"","value":"ERC721: transfer of token that i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21345:6:16"},"nodeType":"YulFunctionCall","src":"21345:58:16"},"nodeType":"YulExpressionStatement","src":"21345:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21424:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"21432:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21420:3:16"},"nodeType":"YulFunctionCall","src":"21420:15:16"},{"hexValue":"73206e6f74206f776e","kind":"string","nodeType":"YulLiteral","src":"21437:11:16","type":"","value":"s not own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21413:6:16"},"nodeType":"YulFunctionCall","src":"21413:36:16"},"nodeType":"YulExpressionStatement","src":"21413:36:16"}]},"name":"store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21326:6:16","type":""}],"src":"21228:228:16"},{"body":{"nodeType":"YulBlock","src":"21608:220:16","statements":[{"nodeType":"YulAssignment","src":"21618:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21684:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"21689:2:16","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21625:58:16"},"nodeType":"YulFunctionCall","src":"21625:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21618:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21790:3:16"}],"functionName":{"name":"store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950","nodeType":"YulIdentifier","src":"21701:88:16"},"nodeType":"YulFunctionCall","src":"21701:93:16"},"nodeType":"YulExpressionStatement","src":"21701:93:16"},{"nodeType":"YulAssignment","src":"21803:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21814:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"21819:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21810:3:16"},"nodeType":"YulFunctionCall","src":"21810:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21803:3:16"}]}]},"name":"abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21596:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21604:3:16","type":""}],"src":"21462:366:16"},{"body":{"nodeType":"YulBlock","src":"22005:248:16","statements":[{"nodeType":"YulAssignment","src":"22015:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22027:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22038:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22023:3:16"},"nodeType":"YulFunctionCall","src":"22023:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22015:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22062:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22073:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22058:3:16"},"nodeType":"YulFunctionCall","src":"22058:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22081:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"22087:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22077:3:16"},"nodeType":"YulFunctionCall","src":"22077:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22051:6:16"},"nodeType":"YulFunctionCall","src":"22051:47:16"},"nodeType":"YulExpressionStatement","src":"22051:47:16"},{"nodeType":"YulAssignment","src":"22107:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22241:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22115:124:16"},"nodeType":"YulFunctionCall","src":"22115:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22107:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21985:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22000:4:16","type":""}],"src":"21834:419:16"},{"body":{"nodeType":"YulBlock","src":"22365:117:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22387:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"22395:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22383:3:16"},"nodeType":"YulFunctionCall","src":"22383:14:16"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"22399:34:16","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22376:6:16"},"nodeType":"YulFunctionCall","src":"22376:58:16"},"nodeType":"YulExpressionStatement","src":"22376:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22455:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"22463:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22451:3:16"},"nodeType":"YulFunctionCall","src":"22451:15:16"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"22468:6:16","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22444:6:16"},"nodeType":"YulFunctionCall","src":"22444:31:16"},"nodeType":"YulExpressionStatement","src":"22444:31:16"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22357:6:16","type":""}],"src":"22259:223:16"},{"body":{"nodeType":"YulBlock","src":"22634:220:16","statements":[{"nodeType":"YulAssignment","src":"22644:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22710:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"22715:2:16","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22651:58:16"},"nodeType":"YulFunctionCall","src":"22651:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22644:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22816:3:16"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"22727:88:16"},"nodeType":"YulFunctionCall","src":"22727:93:16"},"nodeType":"YulExpressionStatement","src":"22727:93:16"},{"nodeType":"YulAssignment","src":"22829:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22840:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"22845:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22836:3:16"},"nodeType":"YulFunctionCall","src":"22836:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22829:3:16"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22622:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22630:3:16","type":""}],"src":"22488:366:16"},{"body":{"nodeType":"YulBlock","src":"23031:248:16","statements":[{"nodeType":"YulAssignment","src":"23041:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23053:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23064:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23049:3:16"},"nodeType":"YulFunctionCall","src":"23049:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23041:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23088:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23099:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23084:3:16"},"nodeType":"YulFunctionCall","src":"23084:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23107:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"23113:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23103:3:16"},"nodeType":"YulFunctionCall","src":"23103:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23077:6:16"},"nodeType":"YulFunctionCall","src":"23077:47:16"},"nodeType":"YulExpressionStatement","src":"23077:47:16"},{"nodeType":"YulAssignment","src":"23133:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23267:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23141:124:16"},"nodeType":"YulFunctionCall","src":"23141:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23133:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23011:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23026:4:16","type":""}],"src":"22860:419:16"},{"body":{"nodeType":"YulBlock","src":"23313:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23330:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23333:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23323:6:16"},"nodeType":"YulFunctionCall","src":"23323:88:16"},"nodeType":"YulExpressionStatement","src":"23323:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23427:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23430:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23420:6:16"},"nodeType":"YulFunctionCall","src":"23420:15:16"},"nodeType":"YulExpressionStatement","src":"23420:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23451:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23454:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23444:6:16"},"nodeType":"YulFunctionCall","src":"23444:15:16"},"nodeType":"YulExpressionStatement","src":"23444:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"23285:180:16"},{"body":{"nodeType":"YulBlock","src":"23516:149:16","statements":[{"nodeType":"YulAssignment","src":"23526:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23549:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23531:17:16"},"nodeType":"YulFunctionCall","src":"23531:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23526:1:16"}]},{"nodeType":"YulAssignment","src":"23560:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23583:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23565:17:16"},"nodeType":"YulFunctionCall","src":"23565:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23560:1:16"}]},{"nodeType":"YulAssignment","src":"23594:17:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23606:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"23609:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23602:3:16"},"nodeType":"YulFunctionCall","src":"23602:9:16"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"23594:4:16"}]},{"body":{"nodeType":"YulBlock","src":"23636:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23638:16:16"},"nodeType":"YulFunctionCall","src":"23638:18:16"},"nodeType":"YulExpressionStatement","src":"23638:18:16"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"23627:4:16"},{"name":"x","nodeType":"YulIdentifier","src":"23633:1:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23624:2:16"},"nodeType":"YulFunctionCall","src":"23624:11:16"},"nodeType":"YulIf","src":"23621:37:16"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23502:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"23505:1:16","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"23511:4:16","type":""}],"src":"23471:194:16"},{"body":{"nodeType":"YulBlock","src":"23715:147:16","statements":[{"nodeType":"YulAssignment","src":"23725:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23748:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23730:17:16"},"nodeType":"YulFunctionCall","src":"23730:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23725:1:16"}]},{"nodeType":"YulAssignment","src":"23759:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23782:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23764:17:16"},"nodeType":"YulFunctionCall","src":"23764:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23759:1:16"}]},{"nodeType":"YulAssignment","src":"23793:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23804:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"23807:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23800:3:16"},"nodeType":"YulFunctionCall","src":"23800:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"23793:3:16"}]},{"body":{"nodeType":"YulBlock","src":"23833:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23835:16:16"},"nodeType":"YulFunctionCall","src":"23835:18:16"},"nodeType":"YulExpressionStatement","src":"23835:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23825:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"23828:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23822:2:16"},"nodeType":"YulFunctionCall","src":"23822:10:16"},"nodeType":"YulIf","src":"23819:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23702:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"23705:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"23711:3:16","type":""}],"src":"23671:191:16"},{"body":{"nodeType":"YulBlock","src":"23974:131:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23996:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"24004:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23992:3:16"},"nodeType":"YulFunctionCall","src":"23992:14:16"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"24008:34:16","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23985:6:16"},"nodeType":"YulFunctionCall","src":"23985:58:16"},"nodeType":"YulExpressionStatement","src":"23985:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24064:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"24072:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24060:3:16"},"nodeType":"YulFunctionCall","src":"24060:15:16"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"24077:20:16","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24053:6:16"},"nodeType":"YulFunctionCall","src":"24053:45:16"},"nodeType":"YulExpressionStatement","src":"24053:45:16"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23966:6:16","type":""}],"src":"23868:237:16"},{"body":{"nodeType":"YulBlock","src":"24257:220:16","statements":[{"nodeType":"YulAssignment","src":"24267:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24333:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"24338:2:16","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24274:58:16"},"nodeType":"YulFunctionCall","src":"24274:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24267:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24439:3:16"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"24350:88:16"},"nodeType":"YulFunctionCall","src":"24350:93:16"},"nodeType":"YulExpressionStatement","src":"24350:93:16"},{"nodeType":"YulAssignment","src":"24452:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24463:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"24468:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24459:3:16"},"nodeType":"YulFunctionCall","src":"24459:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24452:3:16"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24245:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24253:3:16","type":""}],"src":"24111:366:16"},{"body":{"nodeType":"YulBlock","src":"24654:248:16","statements":[{"nodeType":"YulAssignment","src":"24664:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24676:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24687:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24672:3:16"},"nodeType":"YulFunctionCall","src":"24672:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24664:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24711:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24722:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24707:3:16"},"nodeType":"YulFunctionCall","src":"24707:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24730:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"24736:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24726:3:16"},"nodeType":"YulFunctionCall","src":"24726:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24700:6:16"},"nodeType":"YulFunctionCall","src":"24700:47:16"},"nodeType":"YulExpressionStatement","src":"24700:47:16"},{"nodeType":"YulAssignment","src":"24756:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24890:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24764:124:16"},"nodeType":"YulFunctionCall","src":"24764:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24756:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24634:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24649:4:16","type":""}],"src":"24483:419:16"},{"body":{"nodeType":"YulBlock","src":"24951:190:16","statements":[{"nodeType":"YulAssignment","src":"24961:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24988:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24970:17:16"},"nodeType":"YulFunctionCall","src":"24970:24:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"24961:5:16"}]},{"body":{"nodeType":"YulBlock","src":"25084:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25086:16:16"},"nodeType":"YulFunctionCall","src":"25086:18:16"},"nodeType":"YulExpressionStatement","src":"25086:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25009:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"25016:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25006:2:16"},"nodeType":"YulFunctionCall","src":"25006:77:16"},"nodeType":"YulIf","src":"25003:103:16"},{"nodeType":"YulAssignment","src":"25115:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25126:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"25133:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25122:3:16"},"nodeType":"YulFunctionCall","src":"25122:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"25115:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24937:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"24947:3:16","type":""}],"src":"24908:233:16"},{"body":{"nodeType":"YulBlock","src":"25175:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25192:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25195:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25185:6:16"},"nodeType":"YulFunctionCall","src":"25185:88:16"},"nodeType":"YulExpressionStatement","src":"25185:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25289:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25292:4:16","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25282:6:16"},"nodeType":"YulFunctionCall","src":"25282:15:16"},"nodeType":"YulExpressionStatement","src":"25282:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25313:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25316:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25306:6:16"},"nodeType":"YulFunctionCall","src":"25306:15:16"},"nodeType":"YulExpressionStatement","src":"25306:15:16"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"25147:180:16"},{"body":{"nodeType":"YulBlock","src":"25375:143:16","statements":[{"nodeType":"YulAssignment","src":"25385:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25408:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25390:17:16"},"nodeType":"YulFunctionCall","src":"25390:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"25385:1:16"}]},{"nodeType":"YulAssignment","src":"25419:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25442:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25424:17:16"},"nodeType":"YulFunctionCall","src":"25424:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"25419:1:16"}]},{"body":{"nodeType":"YulBlock","src":"25466:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"25468:16:16"},"nodeType":"YulFunctionCall","src":"25468:18:16"},"nodeType":"YulExpressionStatement","src":"25468:18:16"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25463:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25456:6:16"},"nodeType":"YulFunctionCall","src":"25456:9:16"},"nodeType":"YulIf","src":"25453:35:16"},{"nodeType":"YulAssignment","src":"25498:14:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25507:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"25510:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"25503:3:16"},"nodeType":"YulFunctionCall","src":"25503:9:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"25498:1:16"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25364:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"25367:1:16","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"25373:1:16","type":""}],"src":"25333:185:16"},{"body":{"nodeType":"YulBlock","src":"25558:142:16","statements":[{"nodeType":"YulAssignment","src":"25568:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25591:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25573:17:16"},"nodeType":"YulFunctionCall","src":"25573:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"25568:1:16"}]},{"nodeType":"YulAssignment","src":"25602:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25625:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25607:17:16"},"nodeType":"YulFunctionCall","src":"25607:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"25602:1:16"}]},{"body":{"nodeType":"YulBlock","src":"25649:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"25651:16:16"},"nodeType":"YulFunctionCall","src":"25651:18:16"},"nodeType":"YulExpressionStatement","src":"25651:18:16"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25646:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25639:6:16"},"nodeType":"YulFunctionCall","src":"25639:9:16"},"nodeType":"YulIf","src":"25636:35:16"},{"nodeType":"YulAssignment","src":"25680:14:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25689:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"25692:1:16"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"25685:3:16"},"nodeType":"YulFunctionCall","src":"25685:9:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"25680:1:16"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25547:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"25550:1:16","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"25556:1:16","type":""}],"src":"25524:176:16"},{"body":{"nodeType":"YulBlock","src":"25734:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25751:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25754:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25744:6:16"},"nodeType":"YulFunctionCall","src":"25744:88:16"},"nodeType":"YulExpressionStatement","src":"25744:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25848:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25851:4:16","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25841:6:16"},"nodeType":"YulFunctionCall","src":"25841:15:16"},"nodeType":"YulExpressionStatement","src":"25841:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25872:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25875:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25865:6:16"},"nodeType":"YulFunctionCall","src":"25865:15:16"},"nodeType":"YulExpressionStatement","src":"25865:15:16"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"25706:180:16"},{"body":{"nodeType":"YulBlock","src":"25950:40:16","statements":[{"nodeType":"YulAssignment","src":"25961:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25977:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25971:5:16"},"nodeType":"YulFunctionCall","src":"25971:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"25961:6:16"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25933:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"25943:6:16","type":""}],"src":"25892:98:16"},{"body":{"nodeType":"YulBlock","src":"26091:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26108:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"26113:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26101:6:16"},"nodeType":"YulFunctionCall","src":"26101:19:16"},"nodeType":"YulExpressionStatement","src":"26101:19:16"},{"nodeType":"YulAssignment","src":"26129:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26148:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"26153:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26144:3:16"},"nodeType":"YulFunctionCall","src":"26144:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"26129:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26063:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"26068:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"26079:11:16","type":""}],"src":"25996:168:16"},{"body":{"nodeType":"YulBlock","src":"26260:283:16","statements":[{"nodeType":"YulVariableDeclaration","src":"26270:52:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26316:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"26284:31:16"},"nodeType":"YulFunctionCall","src":"26284:38:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"26274:6:16","type":""}]},{"nodeType":"YulAssignment","src":"26331:77:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26396:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"26401:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26338:57:16"},"nodeType":"YulFunctionCall","src":"26338:70:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26331:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26456:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"26463:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26452:3:16"},"nodeType":"YulFunctionCall","src":"26452:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"26470:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"26475:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"26417:34:16"},"nodeType":"YulFunctionCall","src":"26417:65:16"},"nodeType":"YulExpressionStatement","src":"26417:65:16"},{"nodeType":"YulAssignment","src":"26491:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26502:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26529:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"26507:21:16"},"nodeType":"YulFunctionCall","src":"26507:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26498:3:16"},"nodeType":"YulFunctionCall","src":"26498:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26491:3:16"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26241:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26248:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26256:3:16","type":""}],"src":"26170:373:16"},{"body":{"nodeType":"YulBlock","src":"26749:440:16","statements":[{"nodeType":"YulAssignment","src":"26759:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26771:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"26782:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26767:3:16"},"nodeType":"YulFunctionCall","src":"26767:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26759:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26840:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26853:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"26864:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26849:3:16"},"nodeType":"YulFunctionCall","src":"26849:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26796:43:16"},"nodeType":"YulFunctionCall","src":"26796:71:16"},"nodeType":"YulExpressionStatement","src":"26796:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26921:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26934:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"26945:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26930:3:16"},"nodeType":"YulFunctionCall","src":"26930:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26877:43:16"},"nodeType":"YulFunctionCall","src":"26877:72:16"},"nodeType":"YulExpressionStatement","src":"26877:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27003:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27016:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27027:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27012:3:16"},"nodeType":"YulFunctionCall","src":"27012:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26959:43:16"},"nodeType":"YulFunctionCall","src":"26959:72:16"},"nodeType":"YulExpressionStatement","src":"26959:72:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27052:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27063:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27048:3:16"},"nodeType":"YulFunctionCall","src":"27048:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27072:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"27078:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27068:3:16"},"nodeType":"YulFunctionCall","src":"27068:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27041:6:16"},"nodeType":"YulFunctionCall","src":"27041:48:16"},"nodeType":"YulExpressionStatement","src":"27041:48:16"},{"nodeType":"YulAssignment","src":"27098:84:16","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27168:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"27177:4:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27106:61:16"},"nodeType":"YulFunctionCall","src":"27106:76:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27098:4:16"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26697:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26709:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26717:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26725:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26733:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26744:4:16","type":""}],"src":"26549:640:16"},{"body":{"nodeType":"YulBlock","src":"27257:79:16","statements":[{"nodeType":"YulAssignment","src":"27267:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"27282:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"27276:5:16"},"nodeType":"YulFunctionCall","src":"27276:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"27267:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27324:5:16"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"27298:25:16"},"nodeType":"YulFunctionCall","src":"27298:32:16"},"nodeType":"YulExpressionStatement","src":"27298:32:16"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"27235:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"27243:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"27251:5:16","type":""}],"src":"27195:141:16"},{"body":{"nodeType":"YulBlock","src":"27418:273:16","statements":[{"body":{"nodeType":"YulBlock","src":"27464:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"27466:77:16"},"nodeType":"YulFunctionCall","src":"27466:79:16"},"nodeType":"YulExpressionStatement","src":"27466:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"27439:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"27448:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27435:3:16"},"nodeType":"YulFunctionCall","src":"27435:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"27460:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"27431:3:16"},"nodeType":"YulFunctionCall","src":"27431:32:16"},"nodeType":"YulIf","src":"27428:119:16"},{"nodeType":"YulBlock","src":"27557:127:16","statements":[{"nodeType":"YulVariableDeclaration","src":"27572:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"27586:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"27576:6:16","type":""}]},{"nodeType":"YulAssignment","src":"27601:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27646:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"27657:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27642:3:16"},"nodeType":"YulFunctionCall","src":"27642:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"27666:7:16"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"27611:30:16"},"nodeType":"YulFunctionCall","src":"27611:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"27601:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27388:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"27399:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"27411:6:16","type":""}],"src":"27342:349:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approved query for nonex\")\n\n        mstore(add(memPtr, 32), \"istent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not ow\")\n\n        mstore(add(memPtr, 32), \"ner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer caller is not o\")\n\n        mstore(add(memPtr, 32), \"wner nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: owner query for nonexist\")\n\n        mstore(add(memPtr, 32), \"ent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: balance query for the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Metadata: URI query for no\")\n\n        mstore(add(memPtr, 32), \"nexistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: operator query for nonex\")\n\n        mstore(add(memPtr, 32), \"istent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer of token that i\")\n\n        mstore(add(memPtr, 32), \"s not own\")\n\n    }\n\n    function abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611411565b6102bc565b6040516100fb9190611459565b60405180910390f35b61010c61039e565b6040516101199190611504565b60405180910390f35b61013c6004803603810190610137919061155c565b610430565b60405161014991906115ca565b60405180910390f35b61016c60048036038101906101679190611611565b6104b5565b005b61018860048036038101906101839190611651565b6105cc565b005b6101a4600480360381019061019f9190611651565b61062c565b005b6101c060048036038101906101bb919061155c565b61064c565b6040516101cd91906115ca565b60405180910390f35b6101f060048036038101906101eb91906116a4565b6106fd565b6040516101fd91906116e0565b60405180910390f35b61020e6107b4565b60405161021b9190611504565b60405180910390f35b61023e60048036038101906102399190611727565b610846565b005b61025a6004803603810190610255919061189c565b6109c6565b005b6102766004803603810190610271919061155c565b610a28565b6040516102839190611504565b60405180910390f35b6102a660048036038101906102a1919061191f565b610acf565b6040516102b39190611459565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610b63565b5b9050919050565b6060600080546103ad9061198e565b80601f01602080910402602001604051908101604052809291908181526020018280546103d99061198e565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b82610bcd565b61047a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047190611a31565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104c08261064c565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610530576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052790611ac3565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661054f610c39565b73ffffffffffffffffffffffffffffffffffffffff16148061057e575061057d81610578610c39565b610acf565b5b6105bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b490611b55565b60405180910390fd5b6105c78383610c41565b505050565b6105dd6105d7610c39565b82610cfa565b61061c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061390611be7565b60405180910390fd5b610627838383610dd8565b505050565b610647838383604051806020016040528060008152506109c6565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106eb90611c79565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361076d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076490611d0b565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546107c39061198e565b80601f01602080910402602001604051908101604052809291908181526020018280546107ef9061198e565b801561083c5780601f106108115761010080835404028352916020019161083c565b820191906000526020600020905b81548152906001019060200180831161081f57829003601f168201915b5050505050905090565b61084e610c39565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b290611d77565b60405180910390fd5b80600560006108c8610c39565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610975610c39565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516109ba9190611459565b60405180910390a35050565b6109d76109d1610c39565b83610cfa565b610a16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0d90611be7565b60405180910390fd5b610a2284848484611033565b50505050565b6060610a3382610bcd565b610a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6990611e09565b60405180910390fd5b6000610a7c61108f565b90506000815111610a9c5760405180602001604052806000815250610ac7565b80610aa6846110a6565b604051602001610ab7929190611e65565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610cb48361064c565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610d0582610bcd565b610d44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3b90611efb565b60405180910390fd5b6000610d4f8361064c565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610dbe57508373ffffffffffffffffffffffffffffffffffffffff16610da684610430565b73ffffffffffffffffffffffffffffffffffffffff16145b80610dcf5750610dce8185610acf565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610df88261064c565b73ffffffffffffffffffffffffffffffffffffffff1614610e4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4590611f8d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ebd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb49061201f565b60405180910390fd5b610ec8838383611206565b610ed3600082610c41565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f23919061206e565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f7a91906120a2565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b61103e848484610dd8565b61104a8484848461120b565b611089576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108090612148565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600082036110ed576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611201565b600082905060005b6000821461111f57808061110890612168565b915050600a8261111891906121df565b91506110f5565b60008167ffffffffffffffff81111561113b5761113a611771565b5b6040519080825280601f01601f19166020018201604052801561116d5781602001600182028036833780820191505090505b5090505b600085146111fa57600182611186919061206e565b9150600a856111959190612210565b60306111a191906120a2565b60f81b8183815181106111b7576111b6612241565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856111f391906121df565b9450611171565b8093505050505b919050565b505050565b600061122c8473ffffffffffffffffffffffffffffffffffffffff16611392565b15611385578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611255610c39565b8786866040518563ffffffff1660e01b815260040161127794939291906122c5565b6020604051808303816000875af19250505080156112b357506040513d601f19601f820116820180604052508101906112b09190612326565b60015b611335573d80600081146112e3576040519150601f19603f3d011682016040523d82523d6000602084013e6112e8565b606091505b50600081510361132d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132490612148565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061138a565b600190505b949350505050565b600080823b905060008111915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113ee816113b9565b81146113f957600080fd5b50565b60008135905061140b816113e5565b92915050565b600060208284031215611427576114266113af565b5b6000611435848285016113fc565b91505092915050565b60008115159050919050565b6114538161143e565b82525050565b600060208201905061146e600083018461144a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114ae578082015181840152602081019050611493565b60008484015250505050565b6000601f19601f8301169050919050565b60006114d682611474565b6114e0818561147f565b93506114f0818560208601611490565b6114f9816114ba565b840191505092915050565b6000602082019050818103600083015261151e81846114cb565b905092915050565b6000819050919050565b61153981611526565b811461154457600080fd5b50565b60008135905061155681611530565b92915050565b600060208284031215611572576115716113af565b5b600061158084828501611547565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115b482611589565b9050919050565b6115c4816115a9565b82525050565b60006020820190506115df60008301846115bb565b92915050565b6115ee816115a9565b81146115f957600080fd5b50565b60008135905061160b816115e5565b92915050565b60008060408385031215611628576116276113af565b5b6000611636858286016115fc565b925050602061164785828601611547565b9150509250929050565b60008060006060848603121561166a576116696113af565b5b6000611678868287016115fc565b9350506020611689868287016115fc565b925050604061169a86828701611547565b9150509250925092565b6000602082840312156116ba576116b96113af565b5b60006116c8848285016115fc565b91505092915050565b6116da81611526565b82525050565b60006020820190506116f560008301846116d1565b92915050565b6117048161143e565b811461170f57600080fd5b50565b600081359050611721816116fb565b92915050565b6000806040838503121561173e5761173d6113af565b5b600061174c858286016115fc565b925050602061175d85828601611712565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6117a9826114ba565b810181811067ffffffffffffffff821117156117c8576117c7611771565b5b80604052505050565b60006117db6113a5565b90506117e782826117a0565b919050565b600067ffffffffffffffff82111561180757611806611771565b5b611810826114ba565b9050602081019050919050565b82818337600083830152505050565b600061183f61183a846117ec565b6117d1565b90508281526020810184848401111561185b5761185a61176c565b5b61186684828561181d565b509392505050565b600082601f83011261188357611882611767565b5b813561189384826020860161182c565b91505092915050565b600080600080608085870312156118b6576118b56113af565b5b60006118c4878288016115fc565b94505060206118d5878288016115fc565b93505060406118e687828801611547565b925050606085013567ffffffffffffffff811115611907576119066113b4565b5b6119138782880161186e565b91505092959194509250565b60008060408385031215611936576119356113af565b5b6000611944858286016115fc565b9250506020611955858286016115fc565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806119a657607f821691505b6020821081036119b9576119b861195f565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000611a1b602c8361147f565b9150611a26826119bf565b604082019050919050565b60006020820190508181036000830152611a4a81611a0e565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611aad60218361147f565b9150611ab882611a51565b604082019050919050565b60006020820190508181036000830152611adc81611aa0565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b6000611b3f60388361147f565b9150611b4a82611ae3565b604082019050919050565b60006020820190508181036000830152611b6e81611b32565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b6000611bd160318361147f565b9150611bdc82611b75565b604082019050919050565b60006020820190508181036000830152611c0081611bc4565b9050919050565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b6000611c6360298361147f565b9150611c6e82611c07565b604082019050919050565b60006020820190508181036000830152611c9281611c56565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000611cf5602a8361147f565b9150611d0082611c99565b604082019050919050565b60006020820190508181036000830152611d2481611ce8565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611d6160198361147f565b9150611d6c82611d2b565b602082019050919050565b60006020820190508181036000830152611d9081611d54565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b6000611df3602f8361147f565b9150611dfe82611d97565b604082019050919050565b60006020820190508181036000830152611e2281611de6565b9050919050565b600081905092915050565b6000611e3f82611474565b611e498185611e29565b9350611e59818560208601611490565b80840191505092915050565b6000611e718285611e34565b9150611e7d8284611e34565b91508190509392505050565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000611ee5602c8361147f565b9150611ef082611e89565b604082019050919050565b60006020820190508181036000830152611f1481611ed8565b9050919050565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b6000611f7760298361147f565b9150611f8282611f1b565b604082019050919050565b60006020820190508181036000830152611fa681611f6a565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061200960248361147f565b915061201482611fad565b604082019050919050565b6000602082019050818103600083015261203881611ffc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061207982611526565b915061208483611526565b925082820390508181111561209c5761209b61203f565b5b92915050565b60006120ad82611526565b91506120b883611526565b92508282019050808211156120d0576120cf61203f565b5b92915050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b600061213260328361147f565b915061213d826120d6565b604082019050919050565b6000602082019050818103600083015261216181612125565b9050919050565b600061217382611526565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121a5576121a461203f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006121ea82611526565b91506121f583611526565b925082612205576122046121b0565b5b828204905092915050565b600061221b82611526565b915061222683611526565b925082612236576122356121b0565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061229782612270565b6122a1818561227b565b93506122b1818560208601611490565b6122ba816114ba565b840191505092915050565b60006080820190506122da60008301876115bb565b6122e760208301866115bb565b6122f460408301856116d1565b8181036060830152612306818461228c565b905095945050505050565b600081519050612320816113e5565b92915050565b60006020828403121561233c5761233b6113af565b5b600061234a84828501612311565b9150509291505056fea264697066735822122029e1edc13e4587a4c78f0b53e9d07147d9f2304ad4df68df071cde8630cb10b264736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1611 JUMP JUMPDEST PUSH2 0x4B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x16A4 JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x16E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH2 0x846 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x189C JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x191F JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0xB63 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x198E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x198E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x471 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C0 DUP3 PUSH2 0x64C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x527 SWAP1 PUSH2 0x1AC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x54F PUSH2 0xC39 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x57E JUMPI POP PUSH2 0x57D DUP2 PUSH2 0x578 PUSH2 0xC39 JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST JUMPDEST PUSH2 0x5BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B4 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C7 DUP4 DUP4 PUSH2 0xC41 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5DD PUSH2 0x5D7 PUSH2 0xC39 JUMP JUMPDEST DUP3 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x627 DUP4 DUP4 DUP4 PUSH2 0xDD8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x647 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9C6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EB SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x76D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x764 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7C3 SWAP1 PUSH2 0x198E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7EF SWAP1 PUSH2 0x198E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x83C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x811 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x83C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x81F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x84E PUSH2 0xC39 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B2 SWAP1 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x8C8 PUSH2 0xC39 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x975 PUSH2 0xC39 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x9D7 PUSH2 0x9D1 PUSH2 0xC39 JUMP JUMPDEST DUP4 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0xA16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0D SWAP1 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA22 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1033 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA33 DUP3 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0xA72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA69 SWAP1 PUSH2 0x1E09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA7C PUSH2 0x108F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xA9C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAC7 JUMP JUMPDEST DUP1 PUSH2 0xAA6 DUP5 PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAB7 SWAP3 SWAP2 SWAP1 PUSH2 0x1E65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCB4 DUP4 PUSH2 0x64C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD05 DUP3 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0xD44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3B SWAP1 PUSH2 0x1EFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD4F DUP4 PUSH2 0x64C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xDBE JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDA6 DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xDCF JUMPI POP PUSH2 0xDCE DUP2 DUP6 PUSH2 0xACF JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDF8 DUP3 PUSH2 0x64C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE4E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE45 SWAP1 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB4 SWAP1 PUSH2 0x201F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEC8 DUP4 DUP4 DUP4 PUSH2 0x1206 JUMP JUMPDEST PUSH2 0xED3 PUSH1 0x0 DUP3 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF23 SWAP2 SWAP1 PUSH2 0x206E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF7A SWAP2 SWAP1 PUSH2 0x20A2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x103E DUP5 DUP5 DUP5 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x104A DUP5 DUP5 DUP5 DUP5 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x1089 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1080 SWAP1 PUSH2 0x2148 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x10ED JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1201 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x111F JUMPI DUP1 DUP1 PUSH2 0x1108 SWAP1 PUSH2 0x2168 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1118 SWAP2 SWAP1 PUSH2 0x21DF JUMP JUMPDEST SWAP2 POP PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x113B JUMPI PUSH2 0x113A PUSH2 0x1771 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x116D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x11FA JUMPI PUSH1 0x1 DUP3 PUSH2 0x1186 SWAP2 SWAP1 PUSH2 0x206E JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1195 SWAP2 SWAP1 PUSH2 0x2210 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x11A1 SWAP2 SWAP1 PUSH2 0x20A2 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11B7 JUMPI PUSH2 0x11B6 PUSH2 0x2241 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x11F3 SWAP2 SWAP1 PUSH2 0x21DF JUMP JUMPDEST SWAP5 POP PUSH2 0x1171 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122C DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1392 JUMP JUMPDEST ISZERO PUSH2 0x1385 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1255 PUSH2 0xC39 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1277 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12B3 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12B0 SWAP2 SWAP1 PUSH2 0x2326 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1335 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12E3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12E8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x132D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1324 SWAP1 PUSH2 0x2148 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x138A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13EE DUP2 PUSH2 0x13B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x13F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140B DUP2 PUSH2 0x13E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1427 JUMPI PUSH2 0x1426 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1435 DUP5 DUP3 DUP6 ADD PUSH2 0x13FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1453 DUP2 PUSH2 0x143E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x146E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x144A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14AE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D6 DUP3 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x14E0 DUP2 DUP6 PUSH2 0x147F JUMP JUMPDEST SWAP4 POP PUSH2 0x14F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1490 JUMP JUMPDEST PUSH2 0x14F9 DUP2 PUSH2 0x14BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x151E DUP2 DUP5 PUSH2 0x14CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1539 DUP2 PUSH2 0x1526 JUMP JUMPDEST DUP2 EQ PUSH2 0x1544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1556 DUP2 PUSH2 0x1530 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1572 JUMPI PUSH2 0x1571 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1580 DUP5 DUP3 DUP6 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B4 DUP3 PUSH2 0x1589 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C4 DUP2 PUSH2 0x15A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15DF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15EE DUP2 PUSH2 0x15A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x15F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x160B DUP2 PUSH2 0x15E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1628 JUMPI PUSH2 0x1627 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1636 DUP6 DUP3 DUP7 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1647 DUP6 DUP3 DUP7 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x166A JUMPI PUSH2 0x1669 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1678 DUP7 DUP3 DUP8 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1689 DUP7 DUP3 DUP8 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x169A DUP7 DUP3 DUP8 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16BA JUMPI PUSH2 0x16B9 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16C8 DUP5 DUP3 DUP6 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16DA DUP2 PUSH2 0x1526 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1704 DUP2 PUSH2 0x143E JUMP JUMPDEST DUP2 EQ PUSH2 0x170F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1721 DUP2 PUSH2 0x16FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x173E JUMPI PUSH2 0x173D PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x174C DUP6 DUP3 DUP7 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x175D DUP6 DUP3 DUP7 ADD PUSH2 0x1712 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x17A9 DUP3 PUSH2 0x14BA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17C8 JUMPI PUSH2 0x17C7 PUSH2 0x1771 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DB PUSH2 0x13A5 JUMP JUMPDEST SWAP1 POP PUSH2 0x17E7 DUP3 DUP3 PUSH2 0x17A0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1807 JUMPI PUSH2 0x1806 PUSH2 0x1771 JUMP JUMPDEST JUMPDEST PUSH2 0x1810 DUP3 PUSH2 0x14BA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x183F PUSH2 0x183A DUP5 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x17D1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x185B JUMPI PUSH2 0x185A PUSH2 0x176C JUMP JUMPDEST JUMPDEST PUSH2 0x1866 DUP5 DUP3 DUP6 PUSH2 0x181D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1883 JUMPI PUSH2 0x1882 PUSH2 0x1767 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1893 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x182C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18B6 JUMPI PUSH2 0x18B5 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18C4 DUP8 DUP3 DUP9 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x18D5 DUP8 DUP3 DUP9 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18E6 DUP8 DUP3 DUP9 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1907 JUMPI PUSH2 0x1906 PUSH2 0x13B4 JUMP JUMPDEST JUMPDEST PUSH2 0x1913 DUP8 DUP3 DUP9 ADD PUSH2 0x186E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1936 JUMPI PUSH2 0x1935 PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1944 DUP6 DUP3 DUP7 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1955 DUP6 DUP3 DUP7 ADD PUSH2 0x15FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19B9 JUMPI PUSH2 0x19B8 PUSH2 0x195F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1B PUSH1 0x2C DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1A26 DUP3 PUSH2 0x19BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4A DUP2 PUSH2 0x1A0E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAD PUSH1 0x21 DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB8 DUP3 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ADC DUP2 PUSH2 0x1AA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3F PUSH1 0x38 DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B4A DUP3 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B6E DUP2 PUSH2 0x1B32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD1 PUSH1 0x31 DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1BDC DUP3 PUSH2 0x1B75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C00 DUP2 PUSH2 0x1BC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C63 PUSH1 0x29 DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6E DUP3 PUSH2 0x1C07 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C92 DUP2 PUSH2 0x1C56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF5 PUSH1 0x2A DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1D00 DUP3 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D24 DUP2 PUSH2 0x1CE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D61 PUSH1 0x19 DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6C DUP3 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D90 DUP2 PUSH2 0x1D54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DF3 PUSH1 0x2F DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DFE DUP3 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E22 DUP2 PUSH2 0x1DE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3F DUP3 PUSH2 0x1474 JUMP JUMPDEST PUSH2 0x1E49 DUP2 DUP6 PUSH2 0x1E29 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E59 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1490 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E71 DUP3 DUP6 PUSH2 0x1E34 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7D DUP3 DUP5 PUSH2 0x1E34 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE5 PUSH1 0x2C DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF0 DUP3 PUSH2 0x1E89 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F14 DUP2 PUSH2 0x1ED8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x73206E6F74206F776E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F77 PUSH1 0x29 DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x1F82 DUP3 PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FA6 DUP2 PUSH2 0x1F6A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2009 PUSH1 0x24 DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x2014 DUP3 PUSH2 0x1FAD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2038 DUP2 PUSH2 0x1FFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2079 DUP3 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x2084 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x209C JUMPI PUSH2 0x209B PUSH2 0x203F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20AD DUP3 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B8 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20D0 JUMPI PUSH2 0x20CF PUSH2 0x203F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2132 PUSH1 0x32 DUP4 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP PUSH2 0x213D DUP3 PUSH2 0x20D6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2161 DUP2 PUSH2 0x2125 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2173 DUP3 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x21A5 JUMPI PUSH2 0x21A4 PUSH2 0x203F JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21EA DUP3 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F5 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2205 JUMPI PUSH2 0x2204 PUSH2 0x21B0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221B DUP3 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x2226 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2236 JUMPI PUSH2 0x2235 PUSH2 0x21B0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2297 DUP3 PUSH2 0x2270 JUMP JUMPDEST PUSH2 0x22A1 DUP2 DUP6 PUSH2 0x227B JUMP JUMPDEST SWAP4 POP PUSH2 0x22B1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1490 JUMP JUMPDEST PUSH2 0x22BA DUP2 PUSH2 0x14BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x22DA PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x22E7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15BB JUMP JUMPDEST PUSH2 0x22F4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16D1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2306 DUP2 DUP5 PUSH2 0x228C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2320 DUP2 PUSH2 0x13E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x233C JUMPI PUSH2 0x233B PUSH2 0x13AF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x234A DUP5 DUP3 DUP6 ADD PUSH2 0x2311 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xE1 0xED 0xC1 RETURNDATACOPY GASLIMIT DUP8 LOG4 0xC7 DUP16 SIGNEXTEND MSTORE8 0xE9 0xD0 PUSH18 0x47D9F2304AD4DF68DF071CDE8630CB10B264 PUSH20 0x6F6C634300081300330000000000000000000000 ","sourceMap":"554:12701:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2414:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3925:217;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3463:401;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4789:330;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5185:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2117:235;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1855:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2576:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4209:290;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5430:320;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2744:329;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4565:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1496:300;1598:4;1648:25;1633:40;;;:11;:40;;;;:104;;;;1704:33;1689:48;;;:11;:48;;;;1633:104;:156;;;;1753:36;1777:11;1753:23;:36::i;:::-;1633:156;1614:175;;1496:300;;;:::o;2414:98::-;2468:13;2500:5;2493:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:98;:::o;3925:217::-;4001:7;4028:16;4036:7;4028;:16::i;:::-;4020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4111:15;:24;4127:7;4111:24;;;;;;;;;;;;;;;;;;;;;4104:31;;3925:217;;;:::o;3463:401::-;3543:13;3559:23;3574:7;3559:14;:23::i;:::-;3543:39;;3606:5;3600:11;;:2;:11;;;3592:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3697:5;3681:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3706:37;3723:5;3730:12;:10;:12::i;:::-;3706:16;:37::i;:::-;3681:62;3660:165;;;;;;;;;;;;:::i;:::-;;;;;;;;;3836:21;3845:2;3849:7;3836:8;:21::i;:::-;3533:331;3463:401;;:::o;4789:330::-;4978:41;4997:12;:10;:12::i;:::-;5011:7;4978:18;:41::i;:::-;4970:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5084:28;5094:4;5100:2;5104:7;5084:9;:28::i;:::-;4789:330;;;:::o;5185:179::-;5318:39;5335:4;5341:2;5345:7;5318:39;;;;;;;;;;;;:16;:39::i;:::-;5185:179;;;:::o;2117:235::-;2189:7;2208:13;2224:7;:16;2232:7;2224:16;;;;;;;;;;;;;;;;;;;;;2208:32;;2275:1;2258:19;;:5;:19;;;2250:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2340:5;2333:12;;;2117:235;;;:::o;1855:205::-;1927:7;1971:1;1954:19;;:5;:19;;;1946:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2037:9;:16;2047:5;2037:16;;;;;;;;;;;;;;;;2030:23;;1855:205;;;:::o;2576:102::-;2632:13;2664:7;2657:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2576:102;:::o;4209:290::-;4323:12;:10;:12::i;:::-;4311:24;;:8;:24;;;4303:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4421:8;4376:18;:32;4395:12;:10;:12::i;:::-;4376:32;;;;;;;;;;;;;;;:42;4409:8;4376:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4473:8;4444:48;;4459:12;:10;:12::i;:::-;4444:48;;;4483:8;4444:48;;;;;;:::i;:::-;;;;;;;;4209:290;;:::o;5430:320::-;5599:41;5618:12;:10;:12::i;:::-;5632:7;5599:18;:41::i;:::-;5591:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5704:39;5718:4;5724:2;5728:7;5737:5;5704:13;:39::i;:::-;5430:320;;;;:::o;2744:329::-;2817:13;2850:16;2858:7;2850;:16::i;:::-;2842:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2929:21;2953:10;:8;:10::i;:::-;2929:34;;3004:1;2986:7;2980:21;:25;:86;;;;;;;;;;;;;;;;;3032:7;3041:18;:7;:16;:18::i;:::-;3015:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2980:86;2973:93;;;2744:329;;;:::o;4565:162::-;4662:4;4685:18;:25;4704:5;4685:25;;;;;;;;;;;;;;;:35;4711:8;4685:35;;;;;;;;;;;;;;;;;;;;;;;;;4678:42;;4565:162;;;;:::o;763:155:13:-;848:4;886:25;871:40;;;:11;:40;;;;864:47;;763:155;;;:::o;7222:125:5:-;7287:4;7338:1;7310:30;;:7;:16;7318:7;7310:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7303:37;;7222:125;;;:::o;587:96:11:-;640:7;666:10;659:17;;587:96;:::o;11073:171:5:-;11174:2;11147:15;:24;11163:7;11147:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11229:7;11225:2;11191:46;;11200:23;11215:7;11200:14;:23::i;:::-;11191:46;;;;;;;;;;;;11073:171;;:::o;7505:344::-;7598:4;7622:16;7630:7;7622;:16::i;:::-;7614:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:13;7713:23;7728:7;7713:14;:23::i;:::-;7697:39;;7765:5;7754:16;;:7;:16;;;:51;;;;7798:7;7774:31;;:20;7786:7;7774:11;:20::i;:::-;:31;;;7754:51;:87;;;;7809:32;7826:5;7833:7;7809:16;:32::i;:::-;7754:87;7746:96;;;7505:344;;;;:::o;10402:560::-;10556:4;10529:31;;:23;10544:7;10529:14;:23::i;:::-;:31;;;10521:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;10638:1;10624:16;;:2;:16;;;10616:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10692:39;10713:4;10719:2;10723:7;10692:20;:39::i;:::-;10793:29;10810:1;10814:7;10793:8;:29::i;:::-;10852:1;10833:9;:15;10843:4;10833:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10880:1;10863:9;:13;10873:2;10863:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10910:2;10891:7;:16;10899:7;10891:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10947:7;10943:2;10928:27;;10937:4;10928:27;;;;;;;;;;;;10402:560;;;:::o;6612:307::-;6763:28;6773:4;6779:2;6783:7;6763:9;:28::i;:::-;6809:48;6832:4;6838:2;6842:7;6851:5;6809:22;:48::i;:::-;6801:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;6612:307;;;;:::o;3314:92::-;3365:13;3390:9;;;;;;;;;;;;;;3314:92;:::o;275:703:12:-;331:13;557:1;548:5;:10;544:51;;574:10;;;;;;;;;;;;;;;;;;;;;544:51;604:12;619:5;604:20;;634:14;658:75;673:1;665:4;:9;658:75;;690:8;;;;;:::i;:::-;;;;720:2;712:10;;;;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:39;;791:150;807:1;798:5;:10;791:150;;834:1;824:11;;;;;:::i;:::-;;;900:2;892:5;:10;;;;:::i;:::-;879:2;:24;;;;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;928:2;919:11;;;;;:::i;:::-;;;791:150;;;964:6;950:21;;;;;275:703;;;;:::o;13131:122:5:-;;;;:::o;11797:778::-;11947:4;11967:15;:2;:13;;;:15::i;:::-;11963:606;;;12018:2;12002:36;;;12039:12;:10;:12::i;:::-;12053:4;12059:7;12068:5;12002:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;11998:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12258:1;12241:6;:13;:18;12237:266;;12283:60;;;;;;;;;;:::i;:::-;;;;;;;;12237:266;12455:6;12449:13;12440:6;12436:2;12432:15;12425:38;11998:519;12134:41;;;12124:51;;;:6;:51;;;;12117:58;;;;;11963:606;12554:4;12547:11;;11797:778;;;;;;;:::o;718:377:10:-;778:4;981:12;1046:7;1034:20;1026:28;;1087:1;1080:4;:8;1073:15;;;718:377;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:231::-;11123:34;11119:1;11111:6;11107:14;11100:58;11192:14;11187:2;11179:6;11175:15;11168:39;10983:231;:::o;11220:366::-;11362:3;11383:67;11447:2;11442:3;11383:67;:::i;:::-;11376:74;;11459:93;11548:3;11459:93;:::i;:::-;11577:2;11572:3;11568:12;11561:19;;11220:366;;;:::o;11592:419::-;11758:4;11796:2;11785:9;11781:18;11773:26;;11845:9;11839:4;11835:20;11831:1;11820:9;11816:17;11809:47;11873:131;11999:4;11873:131;:::i;:::-;11865:139;;11592:419;;;:::o;12017:220::-;12157:34;12153:1;12145:6;12141:14;12134:58;12226:3;12221:2;12213:6;12209:15;12202:28;12017:220;:::o;12243:366::-;12385:3;12406:67;12470:2;12465:3;12406:67;:::i;:::-;12399:74;;12482:93;12571:3;12482:93;:::i;:::-;12600:2;12595:3;12591:12;12584:19;;12243:366;;;:::o;12615:419::-;12781:4;12819:2;12808:9;12804:18;12796:26;;12868:9;12862:4;12858:20;12854:1;12843:9;12839:17;12832:47;12896:131;13022:4;12896:131;:::i;:::-;12888:139;;12615:419;;;:::o;13040:243::-;13180:34;13176:1;13168:6;13164:14;13157:58;13249:26;13244:2;13236:6;13232:15;13225:51;13040:243;:::o;13289:366::-;13431:3;13452:67;13516:2;13511:3;13452:67;:::i;:::-;13445:74;;13528:93;13617:3;13528:93;:::i;:::-;13646:2;13641:3;13637:12;13630:19;;13289:366;;;:::o;13661:419::-;13827:4;13865:2;13854:9;13850:18;13842:26;;13914:9;13908:4;13904:20;13900:1;13889:9;13885:17;13878:47;13942:131;14068:4;13942:131;:::i;:::-;13934:139;;13661:419;;;:::o;14086:236::-;14226:34;14222:1;14214:6;14210:14;14203:58;14295:19;14290:2;14282:6;14278:15;14271:44;14086:236;:::o;14328:366::-;14470:3;14491:67;14555:2;14550:3;14491:67;:::i;:::-;14484:74;;14567:93;14656:3;14567:93;:::i;:::-;14685:2;14680:3;14676:12;14669:19;;14328:366;;;:::o;14700:419::-;14866:4;14904:2;14893:9;14889:18;14881:26;;14953:9;14947:4;14943:20;14939:1;14928:9;14924:17;14917:47;14981:131;15107:4;14981:131;:::i;:::-;14973:139;;14700:419;;;:::o;15125:228::-;15265:34;15261:1;15253:6;15249:14;15242:58;15334:11;15329:2;15321:6;15317:15;15310:36;15125:228;:::o;15359:366::-;15501:3;15522:67;15586:2;15581:3;15522:67;:::i;:::-;15515:74;;15598:93;15687:3;15598:93;:::i;:::-;15716:2;15711:3;15707:12;15700:19;;15359:366;;;:::o;15731:419::-;15897:4;15935:2;15924:9;15920:18;15912:26;;15984:9;15978:4;15974:20;15970:1;15959:9;15955:17;15948:47;16012:131;16138:4;16012:131;:::i;:::-;16004:139;;15731:419;;;:::o;16156:229::-;16296:34;16292:1;16284:6;16280:14;16273:58;16365:12;16360:2;16352:6;16348:15;16341:37;16156:229;:::o;16391:366::-;16533:3;16554:67;16618:2;16613:3;16554:67;:::i;:::-;16547:74;;16630:93;16719:3;16630:93;:::i;:::-;16748:2;16743:3;16739:12;16732:19;;16391:366;;;:::o;16763:419::-;16929:4;16967:2;16956:9;16952:18;16944:26;;17016:9;17010:4;17006:20;17002:1;16991:9;16987:17;16980:47;17044:131;17170:4;17044:131;:::i;:::-;17036:139;;16763:419;;;:::o;17188:175::-;17328:27;17324:1;17316:6;17312:14;17305:51;17188:175;:::o;17369:366::-;17511:3;17532:67;17596:2;17591:3;17532:67;:::i;:::-;17525:74;;17608:93;17697:3;17608:93;:::i;:::-;17726:2;17721:3;17717:12;17710:19;;17369:366;;;:::o;17741:419::-;17907:4;17945:2;17934:9;17930:18;17922:26;;17994:9;17988:4;17984:20;17980:1;17969:9;17965:17;17958:47;18022:131;18148:4;18022:131;:::i;:::-;18014:139;;17741:419;;;:::o;18166:234::-;18306:34;18302:1;18294:6;18290:14;18283:58;18375:17;18370:2;18362:6;18358:15;18351:42;18166:234;:::o;18406:366::-;18548:3;18569:67;18633:2;18628:3;18569:67;:::i;:::-;18562:74;;18645:93;18734:3;18645:93;:::i;:::-;18763:2;18758:3;18754:12;18747:19;;18406:366;;;:::o;18778:419::-;18944:4;18982:2;18971:9;18967:18;18959:26;;19031:9;19025:4;19021:20;19017:1;19006:9;19002:17;18995:47;19059:131;19185:4;19059:131;:::i;:::-;19051:139;;18778:419;;;:::o;19203:148::-;19305:11;19342:3;19327:18;;19203:148;;;;:::o;19357:390::-;19463:3;19491:39;19524:5;19491:39;:::i;:::-;19546:89;19628:6;19623:3;19546:89;:::i;:::-;19539:96;;19644:65;19702:6;19697:3;19690:4;19683:5;19679:16;19644:65;:::i;:::-;19734:6;19729:3;19725:16;19718:23;;19467:280;19357:390;;;;:::o;19753:435::-;19933:3;19955:95;20046:3;20037:6;19955:95;:::i;:::-;19948:102;;20067:95;20158:3;20149:6;20067:95;:::i;:::-;20060:102;;20179:3;20172:10;;19753:435;;;;;:::o;20194:231::-;20334:34;20330:1;20322:6;20318:14;20311:58;20403:14;20398:2;20390:6;20386:15;20379:39;20194:231;:::o;20431:366::-;20573:3;20594:67;20658:2;20653:3;20594:67;:::i;:::-;20587:74;;20670:93;20759:3;20670:93;:::i;:::-;20788:2;20783:3;20779:12;20772:19;;20431:366;;;:::o;20803:419::-;20969:4;21007:2;20996:9;20992:18;20984:26;;21056:9;21050:4;21046:20;21042:1;21031:9;21027:17;21020:47;21084:131;21210:4;21084:131;:::i;:::-;21076:139;;20803:419;;;:::o;21228:228::-;21368:34;21364:1;21356:6;21352:14;21345:58;21437:11;21432:2;21424:6;21420:15;21413:36;21228:228;:::o;21462:366::-;21604:3;21625:67;21689:2;21684:3;21625:67;:::i;:::-;21618:74;;21701:93;21790:3;21701:93;:::i;:::-;21819:2;21814:3;21810:12;21803:19;;21462:366;;;:::o;21834:419::-;22000:4;22038:2;22027:9;22023:18;22015:26;;22087:9;22081:4;22077:20;22073:1;22062:9;22058:17;22051:47;22115:131;22241:4;22115:131;:::i;:::-;22107:139;;21834:419;;;:::o;22259:223::-;22399:34;22395:1;22387:6;22383:14;22376:58;22468:6;22463:2;22455:6;22451:15;22444:31;22259:223;:::o;22488:366::-;22630:3;22651:67;22715:2;22710:3;22651:67;:::i;:::-;22644:74;;22727:93;22816:3;22727:93;:::i;:::-;22845:2;22840:3;22836:12;22829:19;;22488:366;;;:::o;22860:419::-;23026:4;23064:2;23053:9;23049:18;23041:26;;23113:9;23107:4;23103:20;23099:1;23088:9;23084:17;23077:47;23141:131;23267:4;23141:131;:::i;:::-;23133:139;;22860:419;;;:::o;23285:180::-;23333:77;23330:1;23323:88;23430:4;23427:1;23420:15;23454:4;23451:1;23444:15;23471:194;23511:4;23531:20;23549:1;23531:20;:::i;:::-;23526:25;;23565:20;23583:1;23565:20;:::i;:::-;23560:25;;23609:1;23606;23602:9;23594:17;;23633:1;23627:4;23624:11;23621:37;;;23638:18;;:::i;:::-;23621:37;23471:194;;;;:::o;23671:191::-;23711:3;23730:20;23748:1;23730:20;:::i;:::-;23725:25;;23764:20;23782:1;23764:20;:::i;:::-;23759:25;;23807:1;23804;23800:9;23793:16;;23828:3;23825:1;23822:10;23819:36;;;23835:18;;:::i;:::-;23819:36;23671:191;;;;:::o;23868:237::-;24008:34;24004:1;23996:6;23992:14;23985:58;24077:20;24072:2;24064:6;24060:15;24053:45;23868:237;:::o;24111:366::-;24253:3;24274:67;24338:2;24333:3;24274:67;:::i;:::-;24267:74;;24350:93;24439:3;24350:93;:::i;:::-;24468:2;24463:3;24459:12;24452:19;;24111:366;;;:::o;24483:419::-;24649:4;24687:2;24676:9;24672:18;24664:26;;24736:9;24730:4;24726:20;24722:1;24711:9;24707:17;24700:47;24764:131;24890:4;24764:131;:::i;:::-;24756:139;;24483:419;;;:::o;24908:233::-;24947:3;24970:24;24988:5;24970:24;:::i;:::-;24961:33;;25016:66;25009:5;25006:77;25003:103;;25086:18;;:::i;:::-;25003:103;25133:1;25126:5;25122:13;25115:20;;24908:233;;;:::o;25147:180::-;25195:77;25192:1;25185:88;25292:4;25289:1;25282:15;25316:4;25313:1;25306:15;25333:185;25373:1;25390:20;25408:1;25390:20;:::i;:::-;25385:25;;25424:20;25442:1;25424:20;:::i;:::-;25419:25;;25463:1;25453:35;;25468:18;;:::i;:::-;25453:35;25510:1;25507;25503:9;25498:14;;25333:185;;;;:::o;25524:176::-;25556:1;25573:20;25591:1;25573:20;:::i;:::-;25568:25;;25607:20;25625:1;25607:20;:::i;:::-;25602:25;;25646:1;25636:35;;25651:18;;:::i;:::-;25636:35;25692:1;25689;25685:9;25680:14;;25524:176;;;;:::o;25706:180::-;25754:77;25751:1;25744:88;25851:4;25848:1;25841:15;25875:4;25872:1;25865:15;25892:98;25943:6;25977:5;25971:12;25961:22;;25892:98;;;:::o;25996:168::-;26079:11;26113:6;26108:3;26101:19;26153:4;26148:3;26144:14;26129:29;;25996:168;;;;:::o;26170:373::-;26256:3;26284:38;26316:5;26284:38;:::i;:::-;26338:70;26401:6;26396:3;26338:70;:::i;:::-;26331:77;;26417:65;26475:6;26470:3;26463:4;26456:5;26452:16;26417:65;:::i;:::-;26507:29;26529:6;26507:29;:::i;:::-;26502:3;26498:39;26491:46;;26260:283;26170:373;;;;:::o;26549:640::-;26744:4;26782:3;26771:9;26767:19;26759:27;;26796:71;26864:1;26853:9;26849:17;26840:6;26796:71;:::i;:::-;26877:72;26945:2;26934:9;26930:18;26921:6;26877:72;:::i;:::-;26959;27027:2;27016:9;27012:18;27003:6;26959:72;:::i;:::-;27078:9;27072:4;27068:20;27063:2;27052:9;27048:18;27041:48;27106:76;27177:4;27168:6;27106:76;:::i;:::-;27098:84;;26549:640;;;;;;;:::o;27195:141::-;27251:5;27282:6;27276:13;27267:22;;27298:32;27324:5;27298:32;:::i;:::-;27195:141;;;;:::o;27342:349::-;27411:6;27460:2;27448:9;27439:7;27435:23;27431:32;27428:119;;;27466:79;;:::i;:::-;27428:119;27586:1;27611:63;27666:7;27657:6;27646:9;27642:22;27611:63;:::i;:::-;27601:73;;27557:127;27342:349;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1819400","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2921","getApproved(uint256)":"5205","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"2997","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"3387","transferFrom(address,address,uint256)":"infinite"},"internal":{"_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2269","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overriden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC721: approve to caller\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, _data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x7d2b8ba4b256bfcac347991b75242f9bc37f499c5236af50cf09d0b35943dc0c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":377,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":379,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":383,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":387,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":391,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":397,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC721 token with storage based token URI management.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overriden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC721: approve to caller\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, _data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x7d2b8ba4b256bfcac347991b75242f9bc37f499c5236af50cf09d0b35943dc0c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI query for nonexistent token\\\");\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x188d038a65a945481cc13fe30db334472dfbed61f7959d4478d05feb6303b1ea\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":377,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":379,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":383,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":387,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":391,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":397,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1314,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206bf81905d48c37bc19639fabe0f4eca0405c000cde3c961bd53e04d82e8d208964736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xF81905D48C37BC19639FABE0 DELEGATECALL 0xEC LOG0 BLOCKHASH 0x5C STOP 0xC 0xDE EXTCODECOPY SWAP7 SHL 0xD5 RETURNDATACOPY DIV 0xD8 0x2E DUP14 KECCAK256 DUP10 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"126:7729:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206bf81905d48c37bc19639fabe0f4eca0405c000cde3c961bd53e04d82e8d208964736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xF81905D48C37BC19639FABE0 DELEGATECALL 0xEC LOG0 BLOCKHASH 0x5C STOP 0xC 0xDE EXTCODECOPY SWAP7 SHL 0xD5 RETURNDATACOPY DIV 0xD8 0x2E DUP14 KECCAK256 DUP10 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"126:7729:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204bbb84748306ad29613c1f9cd1eb10b2ce99e4c984ca5480e2415117b53b07ad64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xBB DUP5 PUSH21 0x8306AD29613C1F9CD1EB10B2CE99E4C984CA5480E2 COINBASE MLOAD OR 0xB5 EXTCODESIZE SMOD 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"93:1885:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204bbb84748306ad29613c1f9cd1eb10b2ce99e4c984ca5480e2415117b53b07ad64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xBB DUP5 PUSH21 0x8306AD29613C1F9CD1EB10B2CE99E4C984CA5480E2 COINBASE MLOAD OR 0xB5 EXTCODESIZE SMOD 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"93:1885:12:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/RandomIpfsNft.sol":{"RandomIpfsNft":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinatorV2","type":"address"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"string[3]","name":"dogTokenUris","type":"string[3]"},{"internalType":"uint256","name":"mintFee","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"RandomIpfsNft__NeedMoreETHSent","type":"error"},{"inputs":[],"name":"RandomIpfsNft__RangeOutOfBounds","type":"error"},{"inputs":[],"name":"RandomIpfsNft__TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"enum RandomIpfsNft.Breed","name":"dogBreed","type":"uint8"},{"indexed":false,"internalType":"address","name":"minter","type":"address"}],"name":"NftMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"address","name":"requester","type":"address"}],"name":"NftRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"moddedRng","type":"uint256"}],"name":"getBreedFromModdedRng","outputs":[{"internalType":"enum RandomIpfsNft.Breed","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getChanceArray","outputs":[{"internalType":"uint256[3]","name":"","type":"uint256[3]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getDogTokenUris","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMintFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestNft","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_requestIdToSender","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_tokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_114":{"entryPoint":null,"id":114,"parameterSlots":1,"returnSlots":0},"@_171":{"entryPoint":null,"id":171,"parameterSlots":2,"returnSlots":0},"@_2133":{"entryPoint":null,"id":2133,"parameterSlots":6,"returnSlots":0},"@_315":{"entryPoint":null,"id":315,"parameterSlots":1,"returnSlots":0},"@_414":{"entryPoint":null,"id":414,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_255":{"entryPoint":663,"id":255,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory":{"entryPoint":1948,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1822,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1303,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory":{"entryPoint":2088,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":1431,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1897,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2172,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":1496,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":1372,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_uint256_fromMemory":{"entryPoint":2195,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":3248,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":3362,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3287,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3401,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":1642,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1205,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr":{"entryPoint":1673,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1724,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2493,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2382,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3190,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2804,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1257,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1395,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1225,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2136,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":1454,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":1326,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2765,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":2639,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2959,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1778,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2514,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2440,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2929,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1588,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":2629,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2897,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":2393,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1541,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2679,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1519,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":1714,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1719,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1220,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1215,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1524,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2530,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2884,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2737,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":3207,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":3321,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2543,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2689,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1277,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":1405,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2146,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":1470,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":1346,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2732,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:14806:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"379:81:16","statements":[{"nodeType":"YulAssignment","src":"389:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:16"},"nodeType":"YulFunctionCall","src":"400:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:16","type":""}],"src":"334:126:16"},{"body":{"nodeType":"YulBlock","src":"511:51:16","statements":[{"nodeType":"YulAssignment","src":"521:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:16"},"nodeType":"YulFunctionCall","src":"532:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:16","type":""}],"src":"466:96:16"},{"body":{"nodeType":"YulBlock","src":"611:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:16"},"nodeType":"YulFunctionCall","src":"670:12:16"},"nodeType":"YulExpressionStatement","src":"670:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:16"},"nodeType":"YulFunctionCall","src":"641:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:16"},"nodeType":"YulFunctionCall","src":"631:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:16"},"nodeType":"YulFunctionCall","src":"624:43:16"},"nodeType":"YulIf","src":"621:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:16","type":""}],"src":"568:122:16"},{"body":{"nodeType":"YulBlock","src":"759:80:16","statements":[{"nodeType":"YulAssignment","src":"769:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:16"},"nodeType":"YulFunctionCall","src":"778:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:16"},"nodeType":"YulFunctionCall","src":"800:33:16"},"nodeType":"YulExpressionStatement","src":"800:33:16"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:16","type":""}],"src":"696:143:16"},{"body":{"nodeType":"YulBlock","src":"889:57:16","statements":[{"nodeType":"YulAssignment","src":"899:41:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"914:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"921:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"910:3:16"},"nodeType":"YulFunctionCall","src":"910:30:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"899:7:16"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"871:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"881:7:16","type":""}],"src":"845:101:16"},{"body":{"nodeType":"YulBlock","src":"994:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"1050:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1059:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1062:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1052:6:16"},"nodeType":"YulFunctionCall","src":"1052:12:16"},"nodeType":"YulExpressionStatement","src":"1052:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1017:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1041:5:16"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"1024:16:16"},"nodeType":"YulFunctionCall","src":"1024:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1014:2:16"},"nodeType":"YulFunctionCall","src":"1014:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1007:6:16"},"nodeType":"YulFunctionCall","src":"1007:42:16"},"nodeType":"YulIf","src":"1004:62:16"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"987:5:16","type":""}],"src":"952:120:16"},{"body":{"nodeType":"YulBlock","src":"1140:79:16","statements":[{"nodeType":"YulAssignment","src":"1150:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1165:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1159:5:16"},"nodeType":"YulFunctionCall","src":"1159:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1150:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1207:5:16"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"1181:25:16"},"nodeType":"YulFunctionCall","src":"1181:32:16"},"nodeType":"YulExpressionStatement","src":"1181:32:16"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1118:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1126:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1134:5:16","type":""}],"src":"1078:141:16"},{"body":{"nodeType":"YulBlock","src":"1270:32:16","statements":[{"nodeType":"YulAssignment","src":"1280:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"1291:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1280:7:16"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1252:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1262:7:16","type":""}],"src":"1225:77:16"},{"body":{"nodeType":"YulBlock","src":"1351:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"1408:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1417:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1420:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1410:6:16"},"nodeType":"YulFunctionCall","src":"1410:12:16"},"nodeType":"YulExpressionStatement","src":"1410:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1374:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1399:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1381:17:16"},"nodeType":"YulFunctionCall","src":"1381:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1371:2:16"},"nodeType":"YulFunctionCall","src":"1371:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1364:6:16"},"nodeType":"YulFunctionCall","src":"1364:43:16"},"nodeType":"YulIf","src":"1361:63:16"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1344:5:16","type":""}],"src":"1308:122:16"},{"body":{"nodeType":"YulBlock","src":"1499:80:16","statements":[{"nodeType":"YulAssignment","src":"1509:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1524:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1518:5:16"},"nodeType":"YulFunctionCall","src":"1518:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1509:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1567:5:16"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1540:26:16"},"nodeType":"YulFunctionCall","src":"1540:33:16"},"nodeType":"YulExpressionStatement","src":"1540:33:16"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1477:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1485:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1493:5:16","type":""}],"src":"1436:143:16"},{"body":{"nodeType":"YulBlock","src":"1629:49:16","statements":[{"nodeType":"YulAssignment","src":"1639:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1654:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1661:10:16","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1650:3:16"},"nodeType":"YulFunctionCall","src":"1650:22:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1639:7:16"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1611:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1621:7:16","type":""}],"src":"1585:93:16"},{"body":{"nodeType":"YulBlock","src":"1726:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"1782:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1791:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1794:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1784:6:16"},"nodeType":"YulFunctionCall","src":"1784:12:16"},"nodeType":"YulExpressionStatement","src":"1784:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1749:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:16"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"1756:16:16"},"nodeType":"YulFunctionCall","src":"1756:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1746:2:16"},"nodeType":"YulFunctionCall","src":"1746:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1739:6:16"},"nodeType":"YulFunctionCall","src":"1739:42:16"},"nodeType":"YulIf","src":"1736:62:16"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1719:5:16","type":""}],"src":"1684:120:16"},{"body":{"nodeType":"YulBlock","src":"1872:79:16","statements":[{"nodeType":"YulAssignment","src":"1882:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1897:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1891:5:16"},"nodeType":"YulFunctionCall","src":"1891:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1882:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1939:5:16"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1913:25:16"},"nodeType":"YulFunctionCall","src":"1913:32:16"},"nodeType":"YulExpressionStatement","src":"1913:32:16"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1850:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"1858:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1866:5:16","type":""}],"src":"1810:141:16"},{"body":{"nodeType":"YulBlock","src":"2046:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2063:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2066:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2056:6:16"},"nodeType":"YulFunctionCall","src":"2056:12:16"},"nodeType":"YulExpressionStatement","src":"2056:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1957:117:16"},{"body":{"nodeType":"YulBlock","src":"2128:54:16","statements":[{"nodeType":"YulAssignment","src":"2138:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2156:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2152:3:16"},"nodeType":"YulFunctionCall","src":"2152:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2172:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2168:3:16"},"nodeType":"YulFunctionCall","src":"2168:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2148:3:16"},"nodeType":"YulFunctionCall","src":"2148:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2138:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2111:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2121:6:16","type":""}],"src":"2080:102:16"},{"body":{"nodeType":"YulBlock","src":"2216:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2226:6:16"},"nodeType":"YulFunctionCall","src":"2226:88:16"},"nodeType":"YulExpressionStatement","src":"2226:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2330:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2333:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2323:6:16"},"nodeType":"YulFunctionCall","src":"2323:15:16"},"nodeType":"YulExpressionStatement","src":"2323:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2354:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2357:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2347:6:16"},"nodeType":"YulFunctionCall","src":"2347:15:16"},"nodeType":"YulExpressionStatement","src":"2347:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2188:180:16"},{"body":{"nodeType":"YulBlock","src":"2417:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2427:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2449:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2479:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2457:21:16"},"nodeType":"YulFunctionCall","src":"2457:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2445:3:16"},"nodeType":"YulFunctionCall","src":"2445:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2431:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"2596:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2598:16:16"},"nodeType":"YulFunctionCall","src":"2598:18:16"},"nodeType":"YulExpressionStatement","src":"2598:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2539:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"2551:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2536:2:16"},"nodeType":"YulFunctionCall","src":"2536:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2575:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2587:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2572:2:16"},"nodeType":"YulFunctionCall","src":"2572:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2533:2:16"},"nodeType":"YulFunctionCall","src":"2533:62:16"},"nodeType":"YulIf","src":"2530:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2634:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2638:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2627:6:16"},"nodeType":"YulFunctionCall","src":"2627:22:16"},"nodeType":"YulExpressionStatement","src":"2627:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2403:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"2411:4:16","type":""}],"src":"2374:281:16"},{"body":{"nodeType":"YulBlock","src":"2702:88:16","statements":[{"nodeType":"YulAssignment","src":"2712:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2722:18:16"},"nodeType":"YulFunctionCall","src":"2722:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2712:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2771:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"2779:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2751:19:16"},"nodeType":"YulFunctionCall","src":"2751:33:16"},"nodeType":"YulExpressionStatement","src":"2751:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2686:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2695:6:16","type":""}],"src":"2661:129:16"},{"body":{"nodeType":"YulBlock","src":"2886:169:16","statements":[{"body":{"nodeType":"YulBlock","src":"2991:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2993:16:16"},"nodeType":"YulFunctionCall","src":"2993:18:16"},"nodeType":"YulExpressionStatement","src":"2993:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2963:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"2971:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2960:2:16"},"nodeType":"YulFunctionCall","src":"2960:30:16"},"nodeType":"YulIf","src":"2957:56:16"},{"nodeType":"YulAssignment","src":"3023:25:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3035:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3043:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3031:3:16"},"nodeType":"YulFunctionCall","src":"3031:17:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3023:4:16"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2870:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2881:4:16","type":""}],"src":"2796:259:16"},{"body":{"nodeType":"YulBlock","src":"3150:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3167:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3170:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3160:6:16"},"nodeType":"YulFunctionCall","src":"3160:12:16"},"nodeType":"YulExpressionStatement","src":"3160:12:16"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"3061:117:16"},{"body":{"nodeType":"YulBlock","src":"3273:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3290:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3293:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3283:6:16"},"nodeType":"YulFunctionCall","src":"3283:12:16"},"nodeType":"YulExpressionStatement","src":"3283:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3184:117:16"},{"body":{"nodeType":"YulBlock","src":"3374:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"3479:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3481:16:16"},"nodeType":"YulFunctionCall","src":"3481:18:16"},"nodeType":"YulExpressionStatement","src":"3481:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3451:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3459:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3448:2:16"},"nodeType":"YulFunctionCall","src":"3448:30:16"},"nodeType":"YulIf","src":"3445:56:16"},{"nodeType":"YulAssignment","src":"3511:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3541:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3519:21:16"},"nodeType":"YulFunctionCall","src":"3519:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3511:4:16"}]},{"nodeType":"YulAssignment","src":"3585:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3597:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"3603:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3593:3:16"},"nodeType":"YulFunctionCall","src":"3593:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3585:4:16"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3358:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3369:4:16","type":""}],"src":"3307:308:16"},{"body":{"nodeType":"YulBlock","src":"3683:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3693:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3702:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3697:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"3762:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3787:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"3792:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3783:3:16"},"nodeType":"YulFunctionCall","src":"3783:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3806:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"3811:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3802:3:16"},"nodeType":"YulFunctionCall","src":"3802:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3796:5:16"},"nodeType":"YulFunctionCall","src":"3796:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:16"},"nodeType":"YulFunctionCall","src":"3776:39:16"},"nodeType":"YulExpressionStatement","src":"3776:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3723:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"3726:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3720:2:16"},"nodeType":"YulFunctionCall","src":"3720:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3734:19:16","statements":[{"nodeType":"YulAssignment","src":"3736:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3745:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"3748:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3741:3:16"},"nodeType":"YulFunctionCall","src":"3741:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3736:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"3716:3:16","statements":[]},"src":"3712:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3845:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"3850:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3841:3:16"},"nodeType":"YulFunctionCall","src":"3841:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"3859:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3834:6:16"},"nodeType":"YulFunctionCall","src":"3834:27:16"},"nodeType":"YulExpressionStatement","src":"3834:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3665:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3670:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"3675:6:16","type":""}],"src":"3621:246:16"},{"body":{"nodeType":"YulBlock","src":"3968:339:16","statements":[{"nodeType":"YulAssignment","src":"3978:75:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4045:6:16"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4003:41:16"},"nodeType":"YulFunctionCall","src":"4003:49:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3987:15:16"},"nodeType":"YulFunctionCall","src":"3987:66:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3978:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4069:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"4076:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4062:6:16"},"nodeType":"YulFunctionCall","src":"4062:21:16"},"nodeType":"YulExpressionStatement","src":"4062:21:16"},{"nodeType":"YulVariableDeclaration","src":"4092:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4107:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"4114:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4103:3:16"},"nodeType":"YulFunctionCall","src":"4103:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4096:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"4157:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4159:77:16"},"nodeType":"YulFunctionCall","src":"4159:79:16"},"nodeType":"YulExpressionStatement","src":"4159:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4138:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4143:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4134:3:16"},"nodeType":"YulFunctionCall","src":"4134:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"4152:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4131:2:16"},"nodeType":"YulFunctionCall","src":"4131:25:16"},"nodeType":"YulIf","src":"4128:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4284:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"4289:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"4294:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4249:34:16"},"nodeType":"YulFunctionCall","src":"4249:52:16"},"nodeType":"YulExpressionStatement","src":"4249:52:16"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3941:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"3946:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"3954:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3962:5:16","type":""}],"src":"3873:434:16"},{"body":{"nodeType":"YulBlock","src":"4400:282:16","statements":[{"body":{"nodeType":"YulBlock","src":"4449:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4451:77:16"},"nodeType":"YulFunctionCall","src":"4451:79:16"},"nodeType":"YulExpressionStatement","src":"4451:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4428:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4436:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4424:3:16"},"nodeType":"YulFunctionCall","src":"4424:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"4443:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4420:3:16"},"nodeType":"YulFunctionCall","src":"4420:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4413:6:16"},"nodeType":"YulFunctionCall","src":"4413:35:16"},"nodeType":"YulIf","src":"4410:122:16"},{"nodeType":"YulVariableDeclaration","src":"4541:27:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4561:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4555:5:16"},"nodeType":"YulFunctionCall","src":"4555:13:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4545:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4577:99:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4649:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4657:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4645:3:16"},"nodeType":"YulFunctionCall","src":"4645:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"4664:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"4672:3:16"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4586:58:16"},"nodeType":"YulFunctionCall","src":"4586:90:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4577:5:16"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4378:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"4386:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4394:5:16","type":""}],"src":"4327:355:16"},{"body":{"nodeType":"YulBlock","src":"4826:772:16","statements":[{"nodeType":"YulAssignment","src":"4836:98:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4926:6:16"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr","nodeType":"YulIdentifier","src":"4861:64:16"},"nodeType":"YulFunctionCall","src":"4861:72:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4845:15:16"},"nodeType":"YulFunctionCall","src":"4845:89:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4836:5:16"}]},{"nodeType":"YulVariableDeclaration","src":"4943:16:16","value":{"name":"array","nodeType":"YulIdentifier","src":"4954:5:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4947:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4969:44:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4987:6:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4999:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5007:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4995:3:16"},"nodeType":"YulFunctionCall","src":"4995:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4983:3:16"},"nodeType":"YulFunctionCall","src":"4983:30:16"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"4973:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5041:103:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5055:77:16"},"nodeType":"YulFunctionCall","src":"5055:79:16"},"nodeType":"YulExpressionStatement","src":"5055:79:16"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5028:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"5036:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5025:2:16"},"nodeType":"YulFunctionCall","src":"5025:15:16"},"nodeType":"YulIf","src":"5022:122:16"},{"body":{"nodeType":"YulBlock","src":"5229:363:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5244:29:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5269:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5263:5:16"},"nodeType":"YulFunctionCall","src":"5263:10:16"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"5248:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5325:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5327:77:16"},"nodeType":"YulFunctionCall","src":"5327:79:16"},"nodeType":"YulExpressionStatement","src":"5327:79:16"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"5292:11:16"},{"kind":"number","nodeType":"YulLiteral","src":"5305:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5289:2:16"},"nodeType":"YulFunctionCall","src":"5289:35:16"},"nodeType":"YulIf","src":"5286:122:16"},{"nodeType":"YulVariableDeclaration","src":"5421:42:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5443:6:16"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"5451:11:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5439:3:16"},"nodeType":"YulFunctionCall","src":"5439:24:16"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"5425:10:16","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5484:3:16"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"5531:10:16"},{"name":"end","nodeType":"YulIdentifier","src":"5543:3:16"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"5489:41:16"},"nodeType":"YulFunctionCall","src":"5489:58:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5477:6:16"},"nodeType":"YulFunctionCall","src":"5477:71:16"},"nodeType":"YulExpressionStatement","src":"5477:71:16"},{"nodeType":"YulAssignment","src":"5561:21:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5572:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"5577:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:16"},"nodeType":"YulFunctionCall","src":"5568:14:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5561:3:16"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5182:3:16"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5187:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5179:2:16"},"nodeType":"YulFunctionCall","src":"5179:15:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5195:25:16","statements":[{"nodeType":"YulAssignment","src":"5197:21:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5208:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"5213:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:16"},"nodeType":"YulFunctionCall","src":"5204:14:16"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5197:3:16"}]}]},"pre":{"nodeType":"YulBlock","src":"5157:21:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5159:17:16","value":{"name":"offset","nodeType":"YulIdentifier","src":"5170:6:16"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5163:3:16","type":""}]}]},"src":"5153:439:16"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4796:6:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"4804:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"4812:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4820:5:16","type":""}],"src":"4705:893:16"},{"body":{"nodeType":"YulBlock","src":"5717:285:16","statements":[{"body":{"nodeType":"YulBlock","src":"5766:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5768:77:16"},"nodeType":"YulFunctionCall","src":"5768:79:16"},"nodeType":"YulExpressionStatement","src":"5768:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5745:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5753:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5741:3:16"},"nodeType":"YulFunctionCall","src":"5741:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"5760:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5737:3:16"},"nodeType":"YulFunctionCall","src":"5737:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5730:6:16"},"nodeType":"YulFunctionCall","src":"5730:35:16"},"nodeType":"YulIf","src":"5727:122:16"},{"nodeType":"YulVariableDeclaration","src":"5858:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"5872:4:16","type":"","value":"0x03"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5862:6:16","type":""}]},{"nodeType":"YulAssignment","src":"5885:111:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5976:6:16"},{"name":"length","nodeType":"YulIdentifier","src":"5984:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"5992:3:16"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"5894:81:16"},"nodeType":"YulFunctionCall","src":"5894:102:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5885:5:16"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5695:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"5703:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5711:5:16","type":""}],"src":"5621:381:16"},{"body":{"nodeType":"YulBlock","src":"6053:32:16","statements":[{"nodeType":"YulAssignment","src":"6063:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"6074:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6063:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6035:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6045:7:16","type":""}],"src":"6008:77:16"},{"body":{"nodeType":"YulBlock","src":"6134:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"6191:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6200:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6203:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6193:6:16"},"nodeType":"YulFunctionCall","src":"6193:12:16"},"nodeType":"YulExpressionStatement","src":"6193:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6157:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6182:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6164:17:16"},"nodeType":"YulFunctionCall","src":"6164:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6154:2:16"},"nodeType":"YulFunctionCall","src":"6154:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6147:6:16"},"nodeType":"YulFunctionCall","src":"6147:43:16"},"nodeType":"YulIf","src":"6144:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6127:5:16","type":""}],"src":"6091:122:16"},{"body":{"nodeType":"YulBlock","src":"6282:80:16","statements":[{"nodeType":"YulAssignment","src":"6292:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6307:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6301:5:16"},"nodeType":"YulFunctionCall","src":"6301:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6292:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6350:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6323:26:16"},"nodeType":"YulFunctionCall","src":"6323:33:16"},"nodeType":"YulExpressionStatement","src":"6323:33:16"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6260:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"6268:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6276:5:16","type":""}],"src":"6219:143:16"},{"body":{"nodeType":"YulBlock","src":"6561:1156:16","statements":[{"body":{"nodeType":"YulBlock","src":"6608:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6610:77:16"},"nodeType":"YulFunctionCall","src":"6610:79:16"},"nodeType":"YulExpressionStatement","src":"6610:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6582:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"6591:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6578:3:16"},"nodeType":"YulFunctionCall","src":"6578:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"6603:3:16","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6574:3:16"},"nodeType":"YulFunctionCall","src":"6574:33:16"},"nodeType":"YulIf","src":"6571:120:16"},{"nodeType":"YulBlock","src":"6701:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6716:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6730:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6720:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6745:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6791:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6802:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6787:3:16"},"nodeType":"YulFunctionCall","src":"6787:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6811:7:16"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"6755:31:16"},"nodeType":"YulFunctionCall","src":"6755:64:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6745:6:16"}]}]},{"nodeType":"YulBlock","src":"6839:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6854:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"6868:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6858:6:16","type":""}]},{"nodeType":"YulAssignment","src":"6884:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6929:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"6940:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6925:3:16"},"nodeType":"YulFunctionCall","src":"6925:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6949:7:16"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"6894:30:16"},"nodeType":"YulFunctionCall","src":"6894:63:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6884:6:16"}]}]},{"nodeType":"YulBlock","src":"6977:129:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6992:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7006:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6996:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7022:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7068:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"7079:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7064:3:16"},"nodeType":"YulFunctionCall","src":"7064:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7088:7:16"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"7032:31:16"},"nodeType":"YulFunctionCall","src":"7032:64:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7022:6:16"}]}]},{"nodeType":"YulBlock","src":"7116:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7131:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7145:2:16","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7135:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7161:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7206:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"7217:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7202:3:16"},"nodeType":"YulFunctionCall","src":"7202:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7226:7:16"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"7171:30:16"},"nodeType":"YulFunctionCall","src":"7171:63:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7161:6:16"}]}]},{"nodeType":"YulBlock","src":"7254:316:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7269:40:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7293:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7304:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7289:3:16"},"nodeType":"YulFunctionCall","src":"7289:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7283:5:16"},"nodeType":"YulFunctionCall","src":"7283:26:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7273:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"7356:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7358:77:16"},"nodeType":"YulFunctionCall","src":"7358:79:16"},"nodeType":"YulExpressionStatement","src":"7358:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7328:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7336:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7325:2:16"},"nodeType":"YulFunctionCall","src":"7325:30:16"},"nodeType":"YulIf","src":"7322:117:16"},{"nodeType":"YulAssignment","src":"7453:107:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7532:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"7543:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7528:3:16"},"nodeType":"YulFunctionCall","src":"7528:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7552:7:16"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"7463:64:16"},"nodeType":"YulFunctionCall","src":"7463:97:16"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7453:6:16"}]}]},{"nodeType":"YulBlock","src":"7580:130:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7595:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7609:3:16","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7599:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7626:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7672:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"7683:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7668:3:16"},"nodeType":"YulFunctionCall","src":"7668:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7692:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7636:31:16"},"nodeType":"YulFunctionCall","src":"7636:64:16"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7626:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6491:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6502:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6514:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6522:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6530:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6538:6:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6546:6:16","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6554:6:16","type":""}],"src":"6368:1349:16"},{"body":{"nodeType":"YulBlock","src":"7782:40:16","statements":[{"nodeType":"YulAssignment","src":"7793:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7809:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7803:5:16"},"nodeType":"YulFunctionCall","src":"7803:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7793:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7765:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7775:6:16","type":""}],"src":"7723:99:16"},{"body":{"nodeType":"YulBlock","src":"7856:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7873:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7876:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7866:6:16"},"nodeType":"YulFunctionCall","src":"7866:88:16"},"nodeType":"YulExpressionStatement","src":"7866:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7970:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7973:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7963:6:16"},"nodeType":"YulFunctionCall","src":"7963:15:16"},"nodeType":"YulExpressionStatement","src":"7963:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7994:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7997:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7987:6:16"},"nodeType":"YulFunctionCall","src":"7987:15:16"},"nodeType":"YulExpressionStatement","src":"7987:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7828:180:16"},{"body":{"nodeType":"YulBlock","src":"8065:269:16","statements":[{"nodeType":"YulAssignment","src":"8075:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8089:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"8095:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8085:3:16"},"nodeType":"YulFunctionCall","src":"8085:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8075:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"8106:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8136:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"8142:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8132:3:16"},"nodeType":"YulFunctionCall","src":"8132:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8110:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8183:51:16","statements":[{"nodeType":"YulAssignment","src":"8197:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8211:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8219:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8207:3:16"},"nodeType":"YulFunctionCall","src":"8207:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8197:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8163:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8156:6:16"},"nodeType":"YulFunctionCall","src":"8156:26:16"},"nodeType":"YulIf","src":"8153:81:16"},{"body":{"nodeType":"YulBlock","src":"8286:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8300:16:16"},"nodeType":"YulFunctionCall","src":"8300:18:16"},"nodeType":"YulExpressionStatement","src":"8300:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8250:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8273:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8281:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8270:2:16"},"nodeType":"YulFunctionCall","src":"8270:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8247:2:16"},"nodeType":"YulFunctionCall","src":"8247:38:16"},"nodeType":"YulIf","src":"8244:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8049:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8058:6:16","type":""}],"src":"8014:320:16"},{"body":{"nodeType":"YulBlock","src":"8394:87:16","statements":[{"nodeType":"YulAssignment","src":"8404:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8412:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8404:4:16"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8432:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"8435:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8425:6:16"},"nodeType":"YulFunctionCall","src":"8425:14:16"},"nodeType":"YulExpressionStatement","src":"8425:14:16"},{"nodeType":"YulAssignment","src":"8448:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8466:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8469:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8456:9:16"},"nodeType":"YulFunctionCall","src":"8456:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8448:4:16"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8381:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8389:4:16","type":""}],"src":"8340:141:16"},{"body":{"nodeType":"YulBlock","src":"8531:49:16","statements":[{"nodeType":"YulAssignment","src":"8541:33:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8559:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"8566:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8555:3:16"},"nodeType":"YulFunctionCall","src":"8555:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"8571:2:16","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8551:3:16"},"nodeType":"YulFunctionCall","src":"8551:23:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8541:6:16"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8514:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8524:6:16","type":""}],"src":"8487:93:16"},{"body":{"nodeType":"YulBlock","src":"8639:54:16","statements":[{"nodeType":"YulAssignment","src":"8649:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"8674:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"8680:5:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8670:3:16"},"nodeType":"YulFunctionCall","src":"8670:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"8649:8:16"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"8614:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"8620:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"8630:8:16","type":""}],"src":"8586:107:16"},{"body":{"nodeType":"YulBlock","src":"8775:317:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8785:35:16","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"8806:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"8818:1:16","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8802:3:16"},"nodeType":"YulFunctionCall","src":"8802:18:16"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"8789:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8829:109:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"8860:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"8871:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"8841:18:16"},"nodeType":"YulFunctionCall","src":"8841:97:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"8833:4:16","type":""}]},{"nodeType":"YulAssignment","src":"8947:51:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"8978:9:16"},{"name":"toInsert","nodeType":"YulIdentifier","src":"8989:8:16"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"8959:18:16"},"nodeType":"YulFunctionCall","src":"8959:39:16"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"8947:8:16"}]},{"nodeType":"YulAssignment","src":"9007:30:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9020:5:16"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"9031:4:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9027:3:16"},"nodeType":"YulFunctionCall","src":"9027:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9016:3:16"},"nodeType":"YulFunctionCall","src":"9016:21:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9007:5:16"}]},{"nodeType":"YulAssignment","src":"9046:40:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9059:5:16"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"9070:8:16"},{"name":"mask","nodeType":"YulIdentifier","src":"9080:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9066:3:16"},"nodeType":"YulFunctionCall","src":"9066:19:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9056:2:16"},"nodeType":"YulFunctionCall","src":"9056:30:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9046:6:16"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8736:5:16","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"8743:10:16","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"8755:8:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8768:6:16","type":""}],"src":"8699:393:16"},{"body":{"nodeType":"YulBlock","src":"9130:28:16","statements":[{"nodeType":"YulAssignment","src":"9140:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"9147:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9140:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9116:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9126:3:16","type":""}],"src":"9098:60:16"},{"body":{"nodeType":"YulBlock","src":"9224:82:16","statements":[{"nodeType":"YulAssignment","src":"9234:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9292:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9274:17:16"},"nodeType":"YulFunctionCall","src":"9274:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"9265:8:16"},"nodeType":"YulFunctionCall","src":"9265:34:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9247:17:16"},"nodeType":"YulFunctionCall","src":"9247:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9234:9:16"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9204:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9214:9:16","type":""}],"src":"9164:142:16"},{"body":{"nodeType":"YulBlock","src":"9359:28:16","statements":[{"nodeType":"YulAssignment","src":"9369:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"9376:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9369:3:16"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9345:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9355:3:16","type":""}],"src":"9312:75:16"},{"body":{"nodeType":"YulBlock","src":"9469:193:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9479:63:16","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"9534:7:16"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9503:30:16"},"nodeType":"YulFunctionCall","src":"9503:39:16"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"9483:16:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9558:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9598:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9592:5:16"},"nodeType":"YulFunctionCall","src":"9592:11:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9605:6:16"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"9637:16:16"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"9613:23:16"},"nodeType":"YulFunctionCall","src":"9613:41:16"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"9564:27:16"},"nodeType":"YulFunctionCall","src":"9564:91:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9551:6:16"},"nodeType":"YulFunctionCall","src":"9551:105:16"},"nodeType":"YulExpressionStatement","src":"9551:105:16"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9446:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"9452:6:16","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"9460:7:16","type":""}],"src":"9393:269:16"},{"body":{"nodeType":"YulBlock","src":"9717:24:16","statements":[{"nodeType":"YulAssignment","src":"9727:8:16","value":{"kind":"number","nodeType":"YulLiteral","src":"9734:1:16","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9727:3:16"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9713:3:16","type":""}],"src":"9668:73:16"},{"body":{"nodeType":"YulBlock","src":"9800:136:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9810:46:16","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"9824:30:16"},"nodeType":"YulFunctionCall","src":"9824:32:16"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"9814:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9909:4:16"},{"name":"offset","nodeType":"YulIdentifier","src":"9915:6:16"},{"name":"zero_0","nodeType":"YulIdentifier","src":"9923:6:16"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9865:43:16"},"nodeType":"YulFunctionCall","src":"9865:65:16"},"nodeType":"YulExpressionStatement","src":"9865:65:16"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9786:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"9792:6:16","type":""}],"src":"9747:189:16"},{"body":{"nodeType":"YulBlock","src":"9992:136:16","statements":[{"body":{"nodeType":"YulBlock","src":"10059:63:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"10103:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"10110:1:16","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"10073:29:16"},"nodeType":"YulFunctionCall","src":"10073:39:16"},"nodeType":"YulExpressionStatement","src":"10073:39:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"10012:5:16"},{"name":"end","nodeType":"YulIdentifier","src":"10019:3:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10009:2:16"},"nodeType":"YulFunctionCall","src":"10009:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10024:26:16","statements":[{"nodeType":"YulAssignment","src":"10026:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"10039:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"10046:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10035:3:16"},"nodeType":"YulFunctionCall","src":"10035:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"10026:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"10006:2:16","statements":[]},"src":"10002:120:16"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"9980:5:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"9987:3:16","type":""}],"src":"9942:186:16"},{"body":{"nodeType":"YulBlock","src":"10213:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"10239:431:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10253:54:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10301:5:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"10269:31:16"},"nodeType":"YulFunctionCall","src":"10269:38:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"10257:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10320:63:16","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"10343:8:16"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"10371:10:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"10353:17:16"},"nodeType":"YulFunctionCall","src":"10353:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10339:3:16"},"nodeType":"YulFunctionCall","src":"10339:44:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"10324:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"10540:27:16","statements":[{"nodeType":"YulAssignment","src":"10542:23:16","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"10557:8:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"10542:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"10524:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"10536:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10521:2:16"},"nodeType":"YulFunctionCall","src":"10521:18:16"},"nodeType":"YulIf","src":"10518:49:16"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"10609:11:16"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"10626:8:16"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"10654:3:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"10636:17:16"},"nodeType":"YulFunctionCall","src":"10636:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10622:3:16"},"nodeType":"YulFunctionCall","src":"10622:37:16"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"10580:28:16"},"nodeType":"YulFunctionCall","src":"10580:80:16"},"nodeType":"YulExpressionStatement","src":"10580:80:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"10230:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"10235:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10227:2:16"},"nodeType":"YulFunctionCall","src":"10227:11:16"},"nodeType":"YulIf","src":"10224:446:16"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"10189:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"10196:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"10201:10:16","type":""}],"src":"10134:543:16"},{"body":{"nodeType":"YulBlock","src":"10746:54:16","statements":[{"nodeType":"YulAssignment","src":"10756:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"10781:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"10787:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10777:3:16"},"nodeType":"YulFunctionCall","src":"10777:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"10756:8:16"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"10721:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"10727:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"10737:8:16","type":""}],"src":"10683:117:16"},{"body":{"nodeType":"YulBlock","src":"10857:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10867:68:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10916:1:16","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"10919:5:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10912:3:16"},"nodeType":"YulFunctionCall","src":"10912:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10931:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10927:3:16"},"nodeType":"YulFunctionCall","src":"10927:6:16"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"10883:28:16"},"nodeType":"YulFunctionCall","src":"10883:51:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10879:3:16"},"nodeType":"YulFunctionCall","src":"10879:56:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"10871:4:16","type":""}]},{"nodeType":"YulAssignment","src":"10944:25:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10958:4:16"},{"name":"mask","nodeType":"YulIdentifier","src":"10964:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10954:3:16"},"nodeType":"YulFunctionCall","src":"10954:15:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10944:6:16"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10834:4:16","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"10840:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"10850:6:16","type":""}],"src":"10806:169:16"},{"body":{"nodeType":"YulBlock","src":"11061:214:16","statements":[{"nodeType":"YulAssignment","src":"11194:37:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11221:4:16"},{"name":"len","nodeType":"YulIdentifier","src":"11227:3:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"11202:18:16"},"nodeType":"YulFunctionCall","src":"11202:29:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11194:4:16"}]},{"nodeType":"YulAssignment","src":"11240:29:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11251:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11261:1:16","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"11264:3:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11257:3:16"},"nodeType":"YulFunctionCall","src":"11257:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11248:2:16"},"nodeType":"YulFunctionCall","src":"11248:21:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"11240:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11042:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"11048:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"11056:4:16","type":""}],"src":"10980:295:16"},{"body":{"nodeType":"YulBlock","src":"11372:1303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"11383:51:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11430:3:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11397:32:16"},"nodeType":"YulFunctionCall","src":"11397:37:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"11387:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"11519:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11521:16:16"},"nodeType":"YulFunctionCall","src":"11521:18:16"},"nodeType":"YulExpressionStatement","src":"11521:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11491:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11499:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11488:2:16"},"nodeType":"YulFunctionCall","src":"11488:30:16"},"nodeType":"YulIf","src":"11485:56:16"},{"nodeType":"YulVariableDeclaration","src":"11551:52:16","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11597:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"11591:5:16"},"nodeType":"YulFunctionCall","src":"11591:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"11565:25:16"},"nodeType":"YulFunctionCall","src":"11565:38:16"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"11555:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11696:4:16"},{"name":"oldLen","nodeType":"YulIdentifier","src":"11702:6:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"11710:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"11650:45:16"},"nodeType":"YulFunctionCall","src":"11650:67:16"},"nodeType":"YulExpressionStatement","src":"11650:67:16"},{"nodeType":"YulVariableDeclaration","src":"11727:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"11744:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"11731:9:16","type":""}]},{"nodeType":"YulAssignment","src":"11755:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"11768:4:16","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"11755:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"11819:611:16","statements":[{"nodeType":"YulVariableDeclaration","src":"11833:37:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11852:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11864:4:16","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11860:3:16"},"nodeType":"YulFunctionCall","src":"11860:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11848:3:16"},"nodeType":"YulFunctionCall","src":"11848:22:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"11837:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11884:51:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11930:4:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"11898:31:16"},"nodeType":"YulFunctionCall","src":"11898:37:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"11888:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11948:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"11957:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11952:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"12016:163:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12041:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12059:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12064:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12055:3:16"},"nodeType":"YulFunctionCall","src":"12055:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12049:5:16"},"nodeType":"YulFunctionCall","src":"12049:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12034:6:16"},"nodeType":"YulFunctionCall","src":"12034:42:16"},"nodeType":"YulExpressionStatement","src":"12034:42:16"},{"nodeType":"YulAssignment","src":"12093:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12107:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12115:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12103:3:16"},"nodeType":"YulFunctionCall","src":"12103:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12093:6:16"}]},{"nodeType":"YulAssignment","src":"12134:31:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12151:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12162:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12147:3:16"},"nodeType":"YulFunctionCall","src":"12147:18:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12134:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11982:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"11985:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11979:2:16"},"nodeType":"YulFunctionCall","src":"11979:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11994:21:16","statements":[{"nodeType":"YulAssignment","src":"11996:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12005:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"12008:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12001:3:16"},"nodeType":"YulFunctionCall","src":"12001:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11996:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"11975:3:16","statements":[]},"src":"11971:208:16"},{"body":{"nodeType":"YulBlock","src":"12215:156:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12233:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12260:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12265:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12256:3:16"},"nodeType":"YulFunctionCall","src":"12256:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12250:5:16"},"nodeType":"YulFunctionCall","src":"12250:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"12237:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12300:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"12327:9:16"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12342:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12350:4:16","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12338:3:16"},"nodeType":"YulFunctionCall","src":"12338:17:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"12308:18:16"},"nodeType":"YulFunctionCall","src":"12308:48:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12293:6:16"},"nodeType":"YulFunctionCall","src":"12293:64:16"},"nodeType":"YulExpressionStatement","src":"12293:64:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"12198:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"12207:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12195:2:16"},"nodeType":"YulFunctionCall","src":"12195:19:16"},"nodeType":"YulIf","src":"12192:179:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12391:4:16"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12405:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12413:1:16","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12401:3:16"},"nodeType":"YulFunctionCall","src":"12401:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"12417:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12397:3:16"},"nodeType":"YulFunctionCall","src":"12397:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12384:6:16"},"nodeType":"YulFunctionCall","src":"12384:36:16"},"nodeType":"YulExpressionStatement","src":"12384:36:16"}]},"nodeType":"YulCase","src":"11812:618:16","value":{"kind":"number","nodeType":"YulLiteral","src":"11817:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"12447:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"12461:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"12474:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12465:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"12498:67:16","statements":[{"nodeType":"YulAssignment","src":"12516:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12535:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12540:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12531:3:16"},"nodeType":"YulFunctionCall","src":"12531:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12525:5:16"},"nodeType":"YulFunctionCall","src":"12525:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12516:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"12491:6:16"},"nodeType":"YulIf","src":"12488:77:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12585:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12644:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"12651:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"12591:52:16"},"nodeType":"YulFunctionCall","src":"12591:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12578:6:16"},"nodeType":"YulFunctionCall","src":"12578:81:16"},"nodeType":"YulExpressionStatement","src":"12578:81:16"}]},"nodeType":"YulCase","src":"12439:230:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11792:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"11800:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11789:2:16"},"nodeType":"YulFunctionCall","src":"11789:14:16"},"nodeType":"YulSwitch","src":"11782:887:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"11361:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"11367:3:16","type":""}],"src":"11280:1395:16"},{"body":{"nodeType":"YulBlock","src":"12777:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12794:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"12799:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12787:6:16"},"nodeType":"YulFunctionCall","src":"12787:19:16"},"nodeType":"YulExpressionStatement","src":"12787:19:16"},{"nodeType":"YulAssignment","src":"12815:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12834:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"12839:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12830:3:16"},"nodeType":"YulFunctionCall","src":"12830:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12815:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12749:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"12754:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12765:11:16","type":""}],"src":"12681:169:16"},{"body":{"nodeType":"YulBlock","src":"12962:68:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12984:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"12992:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12980:3:16"},"nodeType":"YulFunctionCall","src":"12980:14:16"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nodeType":"YulLiteral","src":"12996:26:16","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12973:6:16"},"nodeType":"YulFunctionCall","src":"12973:50:16"},"nodeType":"YulExpressionStatement","src":"12973:50:16"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12954:6:16","type":""}],"src":"12856:174:16"},{"body":{"nodeType":"YulBlock","src":"13182:220:16","statements":[{"nodeType":"YulAssignment","src":"13192:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13258:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"13263:2:16","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13199:58:16"},"nodeType":"YulFunctionCall","src":"13199:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13192:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13364:3:16"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nodeType":"YulIdentifier","src":"13275:88:16"},"nodeType":"YulFunctionCall","src":"13275:93:16"},"nodeType":"YulExpressionStatement","src":"13275:93:16"},{"nodeType":"YulAssignment","src":"13377:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13388:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"13393:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13384:3:16"},"nodeType":"YulFunctionCall","src":"13384:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13377:3:16"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13170:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13178:3:16","type":""}],"src":"13036:366:16"},{"body":{"nodeType":"YulBlock","src":"13579:248:16","statements":[{"nodeType":"YulAssignment","src":"13589:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13601:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13612:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13597:3:16"},"nodeType":"YulFunctionCall","src":"13597:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13589:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13636:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"13647:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13632:3:16"},"nodeType":"YulFunctionCall","src":"13632:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13655:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"13661:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13651:3:16"},"nodeType":"YulFunctionCall","src":"13651:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13625:6:16"},"nodeType":"YulFunctionCall","src":"13625:47:16"},"nodeType":"YulExpressionStatement","src":"13625:47:16"},{"nodeType":"YulAssignment","src":"13681:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13815:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13689:124:16"},"nodeType":"YulFunctionCall","src":"13689:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13681:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13559:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13574:4:16","type":""}],"src":"13408:419:16"},{"body":{"nodeType":"YulBlock","src":"13939:67:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13961:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13969:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13957:3:16"},"nodeType":"YulFunctionCall","src":"13957:14:16"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"13973:25:16","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13950:6:16"},"nodeType":"YulFunctionCall","src":"13950:49:16"},"nodeType":"YulExpressionStatement","src":"13950:49:16"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13931:6:16","type":""}],"src":"13833:173:16"},{"body":{"nodeType":"YulBlock","src":"14158:220:16","statements":[{"nodeType":"YulAssignment","src":"14168:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14234:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14239:2:16","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14175:58:16"},"nodeType":"YulFunctionCall","src":"14175:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14168:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14340:3:16"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"14251:88:16"},"nodeType":"YulFunctionCall","src":"14251:93:16"},"nodeType":"YulExpressionStatement","src":"14251:93:16"},{"nodeType":"YulAssignment","src":"14353:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14364:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"14369:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14360:3:16"},"nodeType":"YulFunctionCall","src":"14360:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14353:3:16"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14146:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14154:3:16","type":""}],"src":"14012:366:16"},{"body":{"nodeType":"YulBlock","src":"14555:248:16","statements":[{"nodeType":"YulAssignment","src":"14565:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14577:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14588:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14573:3:16"},"nodeType":"YulFunctionCall","src":"14573:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14565:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14612:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14623:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14608:3:16"},"nodeType":"YulFunctionCall","src":"14608:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14631:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"14637:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14627:3:16"},"nodeType":"YulFunctionCall","src":"14627:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14601:6:16"},"nodeType":"YulFunctionCall","src":"14601:47:16"},"nodeType":"YulExpressionStatement","src":"14601:47:16"},{"nodeType":"YulAssignment","src":"14657:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14791:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14665:124:16"},"nodeType":"YulFunctionCall","src":"14665:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14657:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14535:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14550:4:16","type":""}],"src":"14384:419:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // string[3]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr(length))\n        let dst := array\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[3]\n    function abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := 0x03\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4D9D CODESIZE SUB DUP1 PUSH3 0x4D9D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x893 JUMP JUMPDEST CALLER DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52616E646F6D2049504653204E46540000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52494E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP11 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0xEF SWAP2 SWAP1 PUSH3 0xB8F JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x101 SWAP2 SWAP1 PUSH3 0xB8F JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x176 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x16D SWAP1 PUSH3 0xCD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1FE JUMPI PUSH3 0x1FD DUP2 PUSH3 0x297 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP3 PUSH4 0xFFFFFFFF AND PUSH2 0x100 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH1 0xB SWAP1 PUSH1 0x3 PUSH3 0x281 SWAP3 SWAP2 SWAP1 PUSH3 0x3C8 JUMP JUMPDEST POP DUP1 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH3 0xD6B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x308 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2FF SWAP1 PUSH3 0xD49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x415 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x414 JUMPI DUP3 MLOAD DUP3 SWAP1 DUP2 PUSH3 0x403 SWAP2 SWAP1 PUSH3 0xB8F JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3E9 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x424 SWAP2 SWAP1 PUSH3 0x428 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x44C JUMPI PUSH1 0x0 DUP2 DUP2 PUSH3 0x442 SWAP2 SWAP1 PUSH3 0x450 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH3 0x429 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH3 0x45E SWAP1 PUSH3 0x988 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH3 0x472 JUMPI POP PUSH3 0x493 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH3 0x492 SWAP2 SWAP1 PUSH3 0x496 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x4B1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x497 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4F6 DUP3 PUSH3 0x4C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x508 DUP2 PUSH3 0x4E9 JUMP JUMPDEST DUP2 EQ PUSH3 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x528 DUP2 PUSH3 0x4FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x54D DUP2 PUSH3 0x52E JUMP JUMPDEST DUP2 EQ PUSH3 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x56D DUP2 PUSH3 0x542 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x588 DUP2 PUSH3 0x573 JUMP JUMPDEST DUP2 EQ PUSH3 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x5A8 DUP2 PUSH3 0x57D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5C9 DUP2 PUSH3 0x5AE JUMP JUMPDEST DUP2 EQ PUSH3 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x5E9 DUP2 PUSH3 0x5BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x63F DUP3 PUSH3 0x5F4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x661 JUMPI PUSH3 0x660 PUSH3 0x605 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x676 PUSH3 0x4B5 JUMP JUMPDEST SWAP1 POP PUSH3 0x684 DUP3 DUP3 PUSH3 0x634 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x6A7 JUMPI PUSH3 0x6A6 PUSH3 0x605 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x6DA JUMPI PUSH3 0x6D9 PUSH3 0x605 JUMP JUMPDEST JUMPDEST PUSH3 0x6E5 DUP3 PUSH3 0x5F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x712 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x6F5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x735 PUSH3 0x72F DUP5 PUSH3 0x6BC JUMP JUMPDEST PUSH3 0x66A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x754 JUMPI PUSH3 0x753 PUSH3 0x6B7 JUMP JUMPDEST JUMPDEST PUSH3 0x761 DUP5 DUP3 DUP6 PUSH3 0x6F2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x781 JUMPI PUSH3 0x780 PUSH3 0x5EF JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x793 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x71E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7B3 PUSH3 0x7AD DUP5 PUSH3 0x689 JUMP JUMPDEST PUSH3 0x66A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x7D0 JUMPI PUSH3 0x7CF PUSH3 0x6B2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x81E JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x7F9 JUMPI PUSH3 0x7F8 PUSH3 0x5EF JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH3 0x808 DUP10 DUP3 PUSH3 0x769 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x7D2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x840 JUMPI PUSH3 0x83F PUSH3 0x5EF JUMP JUMPDEST JUMPDEST PUSH1 0x3 PUSH3 0x84F DUP5 DUP3 DUP6 PUSH3 0x79C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x86D DUP2 PUSH3 0x858 JUMP JUMPDEST DUP2 EQ PUSH3 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x88D DUP2 PUSH3 0x862 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x8B3 JUMPI PUSH3 0x8B2 PUSH3 0x4BF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x8C3 DUP10 DUP3 DUP11 ADD PUSH3 0x517 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x8D6 DUP10 DUP3 DUP11 ADD PUSH3 0x55C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x8E9 DUP10 DUP3 DUP11 ADD PUSH3 0x597 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x8FC DUP10 DUP3 DUP11 ADD PUSH3 0x5D8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x920 JUMPI PUSH3 0x91F PUSH3 0x4C4 JUMP JUMPDEST JUMPDEST PUSH3 0x92E DUP10 DUP3 DUP11 ADD PUSH3 0x828 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x941 DUP10 DUP3 DUP11 ADD PUSH3 0x87C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x9A1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x9B7 JUMPI PUSH3 0x9B6 PUSH3 0x959 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0xA21 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x9E2 JUMP JUMPDEST PUSH3 0xA2D DUP7 DUP4 PUSH3 0x9E2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA70 PUSH3 0xA6A PUSH3 0xA64 DUP5 PUSH3 0x858 JUMP JUMPDEST PUSH3 0xA45 JUMP JUMPDEST PUSH3 0x858 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA8C DUP4 PUSH3 0xA4F JUMP JUMPDEST PUSH3 0xAA4 PUSH3 0xA9B DUP3 PUSH3 0xA77 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x9EF JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0xABB PUSH3 0xAAC JUMP JUMPDEST PUSH3 0xAC8 DUP2 DUP5 DUP5 PUSH3 0xA81 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xAF0 JUMPI PUSH3 0xAE4 PUSH1 0x0 DUP3 PUSH3 0xAB1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0xACE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xB3F JUMPI PUSH3 0xB09 DUP2 PUSH3 0x9BD JUMP JUMPDEST PUSH3 0xB14 DUP5 PUSH3 0x9D2 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0xB24 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0xB3C PUSH3 0xB33 DUP6 PUSH3 0x9D2 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0xACD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB64 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xB44 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB7F DUP4 DUP4 PUSH3 0xB51 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xB9A DUP3 PUSH3 0x94E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xBB6 JUMPI PUSH3 0xBB5 PUSH3 0x605 JUMP JUMPDEST JUMPDEST PUSH3 0xBC2 DUP3 SLOAD PUSH3 0x988 JUMP JUMPDEST PUSH3 0xBCF DUP3 DUP3 DUP6 PUSH3 0xAF4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xC07 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xBF2 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xBFE DUP6 DUP3 PUSH3 0xB71 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xC6E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xC17 DUP7 PUSH3 0x9BD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xC41 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xC1A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xC61 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xC5D PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xB51 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xCBF PUSH1 0x18 DUP4 PUSH3 0xC76 JUMP JUMPDEST SWAP2 POP PUSH3 0xCCC DUP3 PUSH3 0xC87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xCF2 DUP2 PUSH3 0xCB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD31 PUSH1 0x17 DUP4 PUSH3 0xC76 JUMP JUMPDEST SWAP2 POP PUSH3 0xD3E DUP3 PUSH3 0xCF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xD64 DUP2 PUSH3 0xD22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x3FD4 PUSH3 0xDC9 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xF35 ADD MSTORE PUSH2 0x12AE ADD MSTORE PUSH1 0x0 PUSH2 0x1388 ADD MSTORE PUSH1 0x0 PUSH2 0x1344 ADD MSTORE PUSH1 0x0 PUSH2 0x1365 ADD MSTORE PUSH1 0x0 PUSH2 0x1308 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x95B ADD MSTORE PUSH2 0x9AF ADD MSTORE PUSH2 0x3FD4 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA36F573B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61A JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0xA36F573B EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0xA51CCCF3 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xAA152491 EQ PUSH2 0x559 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4B6 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x5DACF5F4 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x3B6 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x3AF25975 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x30E JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xB21A83B EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x267D JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x2770 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x287D JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x953 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x2A2F JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x2A8B JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2770 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH2 0xB29 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x2A8B JUMP JUMPDEST PUSH2 0xBDD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x363 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x2BA4 JUMP JUMPDEST PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH2 0xD9A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A0 PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x2770 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x2BFD JUMP JUMPDEST PUSH2 0x1015 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x506 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x1195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x543 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x11C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x2CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x561 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x2D84 JUMP JUMPDEST PUSH2 0x149B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x2770 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x2E07 JUMP JUMPDEST PUSH2 0x164E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x641 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x2BA4 JUMP JUMPDEST PUSH2 0x16E2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x70E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x71E JUMPI POP PUSH2 0x71D DUP3 PUSH2 0x16F6 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x734 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x760 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x782 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x790 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C2 DUP3 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x847 DUP3 PUSH2 0xC28 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AE SWAP1 PUSH2 0x2FAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8D6 PUSH2 0x17CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x905 JUMPI POP PUSH2 0x904 DUP2 PUSH2 0x8FF PUSH2 0x17CC JUMP JUMPDEST PUSH2 0x164E JUMP JUMPDEST JUMPDEST PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93B SWAP1 PUSH2 0x303D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94E DUP4 DUP4 PUSH2 0x17D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA0B JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA02 SWAP3 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA15 DUP3 DUP3 PUSH2 0x188D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA2A PUSH2 0xA24 PUSH2 0x17CC JUMP JUMPDEST DUP3 PUSH2 0x1A2A JUMP JUMPDEST PUSH2 0xA69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA60 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA74 DUP4 DUP4 DUP4 PUSH2 0x1B08 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA8F JUMPI PUSH2 0xA8E PUSH2 0x3118 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xAA4 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAD0 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB1D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAF2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB1D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB00 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB31 PUSH2 0x1D63 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xB5C SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB99 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCA7E25B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBF8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x149B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC05 PUSH2 0x25EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC7 SWAP1 PUSH2 0x31FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4A SWAP1 PUSH2 0x3291 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE21 SWAP1 PUSH2 0x32FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xF92 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFBE SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x100B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFE0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x100B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFEE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x101D PUSH2 0x17CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1081 SWAP1 PUSH2 0x3369 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x1097 PUSH2 0x17CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1144 PUSH2 0x17CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1189 SWAP2 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0x11D9 PUSH2 0xBFD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1272 JUMPI DUP3 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0x1218 JUMPI POP DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1205 JUMPI PUSH2 0x1204 PUSH2 0x3118 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0x1215 SWAP2 SWAP1 PUSH2 0x33B8 JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0x123A JUMPI DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1230 JUMPI PUSH2 0x122F PUSH2 0x2C3D JUMP JUMPDEST JUMPDEST SWAP4 POP POP POP POP PUSH2 0x12A5 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x124D JUMPI PUSH2 0x124C PUSH2 0x3118 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0x125D SWAP2 SWAP1 PUSH2 0x33B8 JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0x126A SWAP1 PUSH2 0x33EC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11DE JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x12806C9D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x1306 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB90F491000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x140C SWAP2 SWAP1 PUSH2 0x3514 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xF873236E6CC0ECC5BE1A9A35C95EE5B8D1AC4CC7BFEF0CC5060391D6CC98E26B CALLER PUSH1 0x40 MLOAD PUSH2 0x1490 SWAP2 SWAP1 PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x14AC PUSH2 0x14A6 PUSH2 0x17CC JUMP JUMPDEST DUP4 PUSH2 0x1A2A JUMP JUMPDEST PUSH2 0x14EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E2 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14F7 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1DF5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1508 DUP3 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x1547 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153E SWAP1 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1567 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1593 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x15F1 PUSH2 0x1E51 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1606 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x163B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1623 SWAP3 SWAP2 SWAP1 PUSH2 0x360F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1649 JUMP JUMPDEST PUSH2 0x1644 DUP5 PUSH2 0x1E68 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16EA PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x16F3 DUP2 PUSH2 0x1F0F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1847 DUP4 PUSH2 0xC28 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x18E4 JUMPI PUSH2 0x18E3 PUSH2 0x3118 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18F6 SWAP2 SWAP1 PUSH2 0x3662 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1903 DUP3 PUSH2 0x11C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x190F DUP5 DUP5 PUSH2 0x203D JUMP JUMPDEST PUSH2 0x19D1 DUP4 PUSH1 0xB DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1928 JUMPI PUSH2 0x1927 PUSH2 0x2C3D JUMP JUMPDEST JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1939 JUMPI PUSH2 0x1938 PUSH2 0x3118 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x194E SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x197A SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x199C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x205B JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x19E4 SWAP1 PUSH2 0x33EC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x8A269F26B688E110E9CBD887D163DAB35CAE678FA353A0292DE532C0CAC1ECDC DUP2 CALLER PUSH1 0x40 MLOAD PUSH2 0x1A1A SWAP3 SWAP2 SWAP1 PUSH2 0x3693 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A35 DUP3 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x1A74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6B SWAP1 PUSH2 0x372E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A7F DUP4 PUSH2 0xC28 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1AEE JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AD6 DUP5 PUSH2 0x7B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x1AFF JUMPI POP PUSH2 0x1AFE DUP2 DUP6 PUSH2 0x164E JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B28 DUP3 PUSH2 0xC28 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B75 SWAP1 PUSH2 0x37C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE4 SWAP1 PUSH2 0x3852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BF8 DUP4 DUP4 DUP4 PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x1C03 PUSH1 0x0 DUP3 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C53 SWAP2 SWAP1 PUSH2 0x3872 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1CAA SWAP2 SWAP1 PUSH2 0x33B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DEA SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1E00 DUP5 DUP5 DUP5 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0x1E0C DUP5 DUP5 DUP5 DUP5 PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x1E4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E42 SWAP1 PUSH2 0x3984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E73 DUP3 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x1EB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EA9 SWAP1 PUSH2 0x3A16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EBC PUSH2 0x1E51 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1EDC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1F07 JUMP JUMPDEST DUP1 PUSH2 0x1EE6 DUP5 PUSH2 0x2254 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1EF7 SWAP3 SWAP2 SWAP1 PUSH2 0x360F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F74 SWAP1 PUSH2 0x3A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x2057 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x23B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2064 DUP3 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x20A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x209A SWAP1 PUSH2 0x3B14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x20C3 SWAP2 SWAP1 PUSH2 0x3CE0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EE DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x240F JUMP JUMPDEST ISZERO PUSH2 0x2247 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x2117 PUSH2 0x17CC JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2139 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2175 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2172 SWAP2 SWAP1 PUSH2 0x3E68 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x21F7 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x21A5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x21AA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x21EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E6 SWAP1 PUSH2 0x3984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x224C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x229B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x22CD JUMPI DUP1 DUP1 PUSH2 0x22B6 SWAP1 PUSH2 0x33EC JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x22C6 SWAP2 SWAP1 PUSH2 0x3E95 JUMP JUMPDEST SWAP2 POP PUSH2 0x22A3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22E9 JUMPI PUSH2 0x22E8 PUSH2 0x28EC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x231B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x23A8 JUMPI PUSH1 0x1 DUP3 PUSH2 0x2334 SWAP2 SWAP1 PUSH2 0x3872 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x2343 SWAP2 SWAP1 PUSH2 0x3662 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x234F SWAP2 SWAP1 PUSH2 0x33B8 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2365 JUMPI PUSH2 0x2364 PUSH2 0x3118 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x23A1 SWAP2 SWAP1 PUSH2 0x3E95 JUMP JUMPDEST SWAP5 POP PUSH2 0x231F JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23BE DUP4 DUP4 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0x23CB PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x240A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2401 SWAP1 PUSH2 0x3984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2491 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2488 SWAP1 PUSH2 0x3F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x249A DUP2 PUSH2 0x1760 JUMP JUMPDEST ISZERO PUSH2 0x24DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24D1 SWAP1 PUSH2 0x3F7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24E6 PUSH1 0x0 DUP4 DUP4 PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2536 SWAP2 SWAP1 PUSH2 0x33B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x265A DUP2 PUSH2 0x2625 JUMP JUMPDEST DUP2 EQ PUSH2 0x2665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2677 DUP2 PUSH2 0x2651 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2693 JUMPI PUSH2 0x2692 PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26A1 DUP5 DUP3 DUP6 ADD PUSH2 0x2668 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26BF DUP2 PUSH2 0x26AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x271A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2742 DUP3 PUSH2 0x26E0 JUMP JUMPDEST PUSH2 0x274C DUP2 DUP6 PUSH2 0x26EB JUMP JUMPDEST SWAP4 POP PUSH2 0x275C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26FC JUMP JUMPDEST PUSH2 0x2765 DUP2 PUSH2 0x2726 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x278A DUP2 DUP5 PUSH2 0x2737 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27A5 DUP2 PUSH2 0x2792 JUMP JUMPDEST DUP2 EQ PUSH2 0x27B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27C2 DUP2 PUSH2 0x279C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27DE JUMPI PUSH2 0x27DD PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27EC DUP5 DUP3 DUP6 ADD PUSH2 0x27B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2820 DUP3 PUSH2 0x27F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2830 DUP2 PUSH2 0x2815 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x284B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2827 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x285A DUP2 PUSH2 0x2815 JUMP JUMPDEST DUP2 EQ PUSH2 0x2865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2877 DUP2 PUSH2 0x2851 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2894 JUMPI PUSH2 0x2893 PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A2 DUP6 DUP3 DUP7 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28B3 DUP6 DUP3 DUP7 ADD PUSH2 0x27B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x28C6 DUP2 PUSH2 0x2792 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2924 DUP3 PUSH2 0x2726 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2943 JUMPI PUSH2 0x2942 PUSH2 0x28EC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2956 PUSH2 0x2611 JUMP JUMPDEST SWAP1 POP PUSH2 0x2962 DUP3 DUP3 PUSH2 0x291B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2982 JUMPI PUSH2 0x2981 PUSH2 0x28EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x29AB PUSH2 0x29A6 DUP5 PUSH2 0x2967 JUMP JUMPDEST PUSH2 0x294C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x29CE JUMPI PUSH2 0x29CD PUSH2 0x2993 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29F7 JUMPI DUP1 PUSH2 0x29E3 DUP9 DUP3 PUSH2 0x27B3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x29D0 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A16 JUMPI PUSH2 0x2A15 PUSH2 0x28E7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A26 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2998 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A46 JUMPI PUSH2 0x2A45 PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A54 DUP6 DUP3 DUP7 ADD PUSH2 0x27B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A75 JUMPI PUSH2 0x2A74 PUSH2 0x2620 JUMP JUMPDEST JUMPDEST PUSH2 0x2A81 DUP6 DUP3 DUP7 ADD PUSH2 0x2A01 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AA4 JUMPI PUSH2 0x2AA3 PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AB2 DUP7 DUP3 DUP8 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2AC3 DUP7 DUP3 DUP8 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2AD4 DUP7 DUP3 DUP8 ADD PUSH2 0x27B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B07 DUP2 PUSH2 0x2792 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B19 DUP4 DUP4 PUSH2 0x2AFE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B3B DUP2 PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0x2B45 DUP2 DUP5 PUSH2 0x2AE9 JUMP JUMPDEST SWAP3 POP PUSH2 0x2B50 DUP3 PUSH2 0x2AF4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B81 JUMPI DUP2 MLOAD PUSH2 0x2B68 DUP8 DUP3 PUSH2 0x2B0D JUMP JUMPDEST SWAP7 POP PUSH2 0x2B73 DUP4 PUSH2 0x2B25 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2B54 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B9E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BBA JUMPI PUSH2 0x2BB9 PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BC8 DUP5 DUP3 DUP6 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BDA DUP2 PUSH2 0x26AA JUMP JUMPDEST DUP2 EQ PUSH2 0x2BE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BF7 DUP2 PUSH2 0x2BD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C14 JUMPI PUSH2 0x2C13 PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C22 DUP6 DUP3 DUP7 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2C33 DUP6 DUP3 DUP7 ADD PUSH2 0x2BE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2C7D JUMPI PUSH2 0x2C7C PUSH2 0x2C3D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2C8E DUP3 PUSH2 0x2C6C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C9E DUP3 PUSH2 0x2C80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CAE DUP2 PUSH2 0x2C93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CC9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2CEF JUMPI PUSH2 0x2CEE PUSH2 0x28EC JUMP JUMPDEST JUMPDEST PUSH2 0x2CF8 DUP3 PUSH2 0x2726 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D27 PUSH2 0x2D22 DUP5 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x294C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2D43 JUMPI PUSH2 0x2D42 PUSH2 0x2CCF JUMP JUMPDEST JUMPDEST PUSH2 0x2D4E DUP5 DUP3 DUP6 PUSH2 0x2D05 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D6B JUMPI PUSH2 0x2D6A PUSH2 0x28E7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D7B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2D14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2D9E JUMPI PUSH2 0x2D9D PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DAC DUP8 DUP3 DUP9 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2DBD DUP8 DUP3 DUP9 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2DCE DUP8 DUP3 DUP9 ADD PUSH2 0x27B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DEF JUMPI PUSH2 0x2DEE PUSH2 0x2620 JUMP JUMPDEST JUMPDEST PUSH2 0x2DFB DUP8 DUP3 DUP9 ADD PUSH2 0x2D56 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E1E JUMPI PUSH2 0x2E1D PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E2C DUP6 DUP3 DUP7 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2E3D DUP6 DUP3 DUP7 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E8E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2EA1 JUMPI PUSH2 0x2EA0 PUSH2 0x2E47 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F03 PUSH1 0x2C DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2F0E DUP3 PUSH2 0x2EA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F32 DUP2 PUSH2 0x2EF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F95 PUSH1 0x21 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2FA0 DUP3 PUSH2 0x2F39 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FC4 DUP2 PUSH2 0x2F88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3027 PUSH1 0x38 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3032 DUP3 PUSH2 0x2FCB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3056 DUP2 PUSH2 0x301A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3072 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2827 JUMP JUMPDEST PUSH2 0x307F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2827 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E2 PUSH1 0x31 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x30ED DUP3 PUSH2 0x3086 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3111 DUP2 PUSH2 0x30D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3162 PUSH1 0x0 DUP4 PUSH2 0x3147 JUMP JUMPDEST SWAP2 POP PUSH2 0x316D DUP3 PUSH2 0x3152 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3183 DUP3 PUSH2 0x3155 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31E9 PUSH1 0x29 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x31F4 DUP3 PUSH2 0x318D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3218 DUP2 PUSH2 0x31DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x327B PUSH1 0x2A DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3286 DUP3 PUSH2 0x321F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32AA DUP2 PUSH2 0x326E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E7 PUSH1 0x16 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x32F2 DUP3 PUSH2 0x32B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3316 DUP2 PUSH2 0x32DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3353 PUSH1 0x19 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x335E DUP3 PUSH2 0x331D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3382 DUP2 PUSH2 0x3346 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33C3 DUP3 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x33CE DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x33E6 JUMPI PUSH2 0x33E5 PUSH2 0x3389 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33F7 DUP3 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3429 JUMPI PUSH2 0x3428 PUSH2 0x3389 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3447 DUP2 PUSH2 0x3434 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x346A DUP2 PUSH2 0x344D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3487 DUP2 PUSH2 0x3470 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34A6 DUP2 PUSH2 0x348D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x34C1 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x343E JUMP JUMPDEST PUSH2 0x34CE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3461 JUMP JUMPDEST PUSH2 0x34DB PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x347E JUMP JUMPDEST PUSH2 0x34E8 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x349D JUMP JUMPDEST PUSH2 0x34F5 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x349D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x350E DUP2 PUSH2 0x279C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x352A JUMPI PUSH2 0x3529 PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3538 DUP5 DUP3 DUP6 ADD PUSH2 0x34FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F6E6578697374656E7420746F6B656E000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x359D PUSH1 0x31 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x35A8 DUP3 PUSH2 0x3541 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35CC DUP2 PUSH2 0x3590 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E9 DUP3 PUSH2 0x26E0 JUMP JUMPDEST PUSH2 0x35F3 DUP2 DUP6 PUSH2 0x35D3 JUMP JUMPDEST SWAP4 POP PUSH2 0x3603 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26FC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x361B DUP3 DUP6 PUSH2 0x35DE JUMP JUMPDEST SWAP2 POP PUSH2 0x3627 DUP3 DUP5 PUSH2 0x35DE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x366D DUP3 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x3678 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3688 JUMPI PUSH2 0x3687 PUSH2 0x3633 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x36A8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x36B5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2827 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3718 PUSH1 0x2C DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3723 DUP3 PUSH2 0x36BC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3747 DUP2 PUSH2 0x370B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x73206E6F74206F776E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37AA PUSH1 0x29 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x37B5 DUP3 PUSH2 0x374E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37D9 DUP2 PUSH2 0x379D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383C PUSH1 0x24 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3847 DUP3 PUSH2 0x37E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x386B DUP2 PUSH2 0x382F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x387D DUP3 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x3888 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x38A0 JUMPI PUSH2 0x389F PUSH2 0x3389 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38DC PUSH1 0x16 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x38E7 DUP3 PUSH2 0x38A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x390B DUP2 PUSH2 0x38CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396E PUSH1 0x32 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3979 DUP3 PUSH2 0x3912 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x399D DUP2 PUSH2 0x3961 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A00 PUSH1 0x2F DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3A0B DUP3 PUSH2 0x39A4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A2F DUP2 PUSH2 0x39F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A6C PUSH1 0x17 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3A77 DUP3 PUSH2 0x3A36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A9B DUP2 PUSH2 0x3A5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AFE PUSH1 0x2E DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3B09 DUP3 PUSH2 0x3AA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B2D DUP2 PUSH2 0x3AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3B96 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3B59 JUMP JUMPDEST PUSH2 0x3BA0 DUP7 DUP4 PUSH2 0x3B59 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BDD PUSH2 0x3BD8 PUSH2 0x3BD3 DUP5 PUSH2 0x2792 JUMP JUMPDEST PUSH2 0x3BB8 JUMP JUMPDEST PUSH2 0x2792 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BF7 DUP4 PUSH2 0x3BC2 JUMP JUMPDEST PUSH2 0x3C0B PUSH2 0x3C03 DUP3 PUSH2 0x3BE4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3B66 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3C20 PUSH2 0x3C13 JUMP JUMPDEST PUSH2 0x3C2B DUP2 DUP5 DUP5 PUSH2 0x3BEE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3C4F JUMPI PUSH2 0x3C44 PUSH1 0x0 DUP3 PUSH2 0x3C18 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3C31 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3C94 JUMPI PUSH2 0x3C65 DUP2 PUSH2 0x3B34 JUMP JUMPDEST PUSH2 0x3C6E DUP5 PUSH2 0x3B49 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3C7D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3C91 PUSH2 0x3C89 DUP6 PUSH2 0x3B49 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3C30 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CB7 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3C99 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CD0 DUP4 DUP4 PUSH2 0x3CA6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3CE9 DUP3 PUSH2 0x26E0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D02 JUMPI PUSH2 0x3D01 PUSH2 0x28EC JUMP JUMPDEST JUMPDEST PUSH2 0x3D0C DUP3 SLOAD PUSH2 0x2E76 JUMP JUMPDEST PUSH2 0x3D17 DUP3 DUP3 DUP6 PUSH2 0x3C53 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3D4A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3D38 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3D42 DUP6 DUP3 PUSH2 0x3CC4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3D58 DUP7 PUSH2 0x3B34 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3D80 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3D5B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3D9D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3D99 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3CA6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DD9 DUP3 PUSH2 0x3DB2 JUMP JUMPDEST PUSH2 0x3DE3 DUP2 DUP6 PUSH2 0x3DBD JUMP JUMPDEST SWAP4 POP PUSH2 0x3DF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26FC JUMP JUMPDEST PUSH2 0x3DFC DUP2 PUSH2 0x2726 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3E1C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2827 JUMP JUMPDEST PUSH2 0x3E29 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2827 JUMP JUMPDEST PUSH2 0x3E36 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x28BD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3E48 DUP2 DUP5 PUSH2 0x3DCE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3E62 DUP2 PUSH2 0x2651 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E7E JUMPI PUSH2 0x3E7D PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E8C DUP5 DUP3 DUP6 ADD PUSH2 0x3E53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EA0 DUP3 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EAB DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3EBB JUMPI PUSH2 0x3EBA PUSH2 0x3633 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EFC PUSH1 0x20 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3F07 DUP3 PUSH2 0x3EC6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F2B DUP2 PUSH2 0x3EEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F68 PUSH1 0x1C DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3F73 DUP3 PUSH2 0x3F32 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F97 DUP2 PUSH2 0x3F5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 CHAINID 0xDE 0xD3 0xAA PUSH31 0xAF47F4662495AD120A965D29DAEE8F8DB096EA1F503FD2B2649A64736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ","sourceMap":"479:3721:15:-:0;;;1393:597;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1706:10;327:8:1;345:1;1316:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:16:15;5616:15:4;5599:32;;;;;;;;;;5556:80;1390:5:5;1382;:13;;;;;;:::i;:::-;;1415:7;1405;:17;;;;;;:::i;:::-;;1316:113;;557:1:2;537:22;;:8;:22;;;529:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;605:8;595:7;;:18;;;;;;;;;;;;;;;;;;647:1;623:26;;:12;:26;;;619:79;;659:32;678:12;659:18;;;:32;;:::i;:::-;619:79;471:231;;270:81:1;1779:16:15::3;1732:64;;;;;;;;::::0;::::3;1825:14;1806:33;;;;;;;;::::0;::::3;1861:7;1849:19;;;;::::0;::::3;1899:16;1878:37;;;;;;;;::::0;::::3;1942:12;1925:14;:29;;;;;;;:::i;:::-;;1976:7;1964:19;;;;::::0;::::3;1393:597:::0;;;;;;479:3721;;1482:188:2;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;479:3721:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:101::-;881:7;921:18;914:5;910:30;899:41;;845:101;;;:::o;952:120::-;1024:23;1041:5;1024:23;:::i;:::-;1017:5;1014:34;1004:62;;1062:1;1059;1052:12;1004:62;952:120;:::o;1078:141::-;1134:5;1165:6;1159:13;1150:22;;1181:32;1207:5;1181:32;:::i;:::-;1078:141;;;;:::o;1225:77::-;1262:7;1291:5;1280:16;;1225:77;;;:::o;1308:122::-;1381:24;1399:5;1381:24;:::i;:::-;1374:5;1371:35;1361:63;;1420:1;1417;1410:12;1361:63;1308:122;:::o;1436:143::-;1493:5;1524:6;1518:13;1509:22;;1540:33;1567:5;1540:33;:::i;:::-;1436:143;;;;:::o;1585:93::-;1621:7;1661:10;1654:5;1650:22;1639:33;;1585:93;;;:::o;1684:120::-;1756:23;1773:5;1756:23;:::i;:::-;1749:5;1746:34;1736:62;;1794:1;1791;1784:12;1736:62;1684:120;:::o;1810:141::-;1866:5;1897:6;1891:13;1882:22;;1913:32;1939:5;1913:32;:::i;:::-;1810:141;;;;:::o;1957:117::-;2066:1;2063;2056:12;2080:102;2121:6;2172:2;2168:7;2163:2;2156:5;2152:14;2148:28;2138:38;;2080:102;;;:::o;2188:180::-;2236:77;2233:1;2226:88;2333:4;2330:1;2323:15;2357:4;2354:1;2347:15;2374:281;2457:27;2479:4;2457:27;:::i;:::-;2449:6;2445:40;2587:6;2575:10;2572:22;2551:18;2539:10;2536:34;2533:62;2530:88;;;2598:18;;:::i;:::-;2530:88;2638:10;2634:2;2627:22;2417:238;2374:281;;:::o;2661:129::-;2695:6;2722:20;;:::i;:::-;2712:30;;2751:33;2779:4;2771:6;2751:33;:::i;:::-;2661:129;;;:::o;2796:259::-;2881:4;2971:18;2963:6;2960:30;2957:56;;;2993:18;;:::i;:::-;2957:56;3043:4;3035:6;3031:17;3023:25;;2796:259;;;:::o;3061:117::-;3170:1;3167;3160:12;3184:117;3293:1;3290;3283:12;3307:308;3369:4;3459:18;3451:6;3448:30;3445:56;;;3481:18;;:::i;:::-;3445:56;3519:29;3541:6;3519:29;:::i;:::-;3511:37;;3603:4;3597;3593:15;3585:23;;3307:308;;;:::o;3621:246::-;3702:1;3712:113;3726:6;3723:1;3720:13;3712:113;;;3811:1;3806:3;3802:11;3796:18;3792:1;3787:3;3783:11;3776:39;3748:2;3745:1;3741:10;3736:15;;3712:113;;;3859:1;3850:6;3845:3;3841:16;3834:27;3683:184;3621:246;;;:::o;3873:434::-;3962:5;3987:66;4003:49;4045:6;4003:49;:::i;:::-;3987:66;:::i;:::-;3978:75;;4076:6;4069:5;4062:21;4114:4;4107:5;4103:16;4152:3;4143:6;4138:3;4134:16;4131:25;4128:112;;;4159:79;;:::i;:::-;4128:112;4249:52;4294:6;4289:3;4284;4249:52;:::i;:::-;3968:339;3873:434;;;;;:::o;4327:355::-;4394:5;4443:3;4436:4;4428:6;4424:17;4420:27;4410:122;;4451:79;;:::i;:::-;4410:122;4561:6;4555:13;4586:90;4672:3;4664:6;4657:4;4649:6;4645:17;4586:90;:::i;:::-;4577:99;;4400:282;4327:355;;;;:::o;4705:893::-;4820:5;4845:89;4861:72;4926:6;4861:72;:::i;:::-;4845:89;:::i;:::-;4836:98;;4954:5;5007:4;4999:6;4995:17;4987:6;4983:30;5036:3;5028:6;5025:15;5022:122;;;5055:79;;:::i;:::-;5022:122;5170:6;5153:439;5187:6;5182:3;5179:15;5153:439;;;5269:3;5263:10;5305:18;5292:11;5289:35;5286:122;;;5327:79;;:::i;:::-;5286:122;5451:11;5443:6;5439:24;5489:58;5543:3;5531:10;5489:58;:::i;:::-;5484:3;5477:71;5577:4;5572:3;5568:14;5561:21;;5229:363;;5213:4;5208:3;5204:14;5197:21;;5153:439;;;5157:21;4826:772;;4705:893;;;;;:::o;5621:381::-;5711:5;5760:3;5753:4;5745:6;5741:17;5737:27;5727:122;;5768:79;;:::i;:::-;5727:122;5872:4;5894:102;5992:3;5984:6;5976;5894:102;:::i;:::-;5885:111;;5717:285;5621:381;;;;:::o;6008:77::-;6045:7;6074:5;6063:16;;6008:77;;;:::o;6091:122::-;6164:24;6182:5;6164:24;:::i;:::-;6157:5;6154:35;6144:63;;6203:1;6200;6193:12;6144:63;6091:122;:::o;6219:143::-;6276:5;6307:6;6301:13;6292:22;;6323:33;6350:5;6323:33;:::i;:::-;6219:143;;;;:::o;6368:1349::-;6514:6;6522;6530;6538;6546;6554;6603:3;6591:9;6582:7;6578:23;6574:33;6571:120;;;6610:79;;:::i;:::-;6571:120;6730:1;6755:64;6811:7;6802:6;6791:9;6787:22;6755:64;:::i;:::-;6745:74;;6701:128;6868:2;6894:63;6949:7;6940:6;6929:9;6925:22;6894:63;:::i;:::-;6884:73;;6839:128;7006:2;7032:64;7088:7;7079:6;7068:9;7064:22;7032:64;:::i;:::-;7022:74;;6977:129;7145:2;7171:63;7226:7;7217:6;7206:9;7202:22;7171:63;:::i;:::-;7161:73;;7116:128;7304:3;7293:9;7289:19;7283:26;7336:18;7328:6;7325:30;7322:117;;;7358:79;;:::i;:::-;7322:117;7463:97;7552:7;7543:6;7532:9;7528:22;7463:97;:::i;:::-;7453:107;;7254:316;7609:3;7636:64;7692:7;7683:6;7672:9;7668:22;7636:64;:::i;:::-;7626:74;;7580:130;6368:1349;;;;;;;;:::o;7723:99::-;7775:6;7809:5;7803:12;7793:22;;7723:99;;;:::o;7828:180::-;7876:77;7873:1;7866:88;7973:4;7970:1;7963:15;7997:4;7994:1;7987:15;8014:320;8058:6;8095:1;8089:4;8085:12;8075:22;;8142:1;8136:4;8132:12;8163:18;8153:81;;8219:4;8211:6;8207:17;8197:27;;8153:81;8281:2;8273:6;8270:14;8250:18;8247:38;8244:84;;8300:18;;:::i;:::-;8244:84;8065:269;8014:320;;;:::o;8340:141::-;8389:4;8412:3;8404:11;;8435:3;8432:1;8425:14;8469:4;8466:1;8456:18;8448:26;;8340:141;;;:::o;8487:93::-;8524:6;8571:2;8566;8559:5;8555:14;8551:23;8541:33;;8487:93;;;:::o;8586:107::-;8630:8;8680:5;8674:4;8670:16;8649:37;;8586:107;;;;:::o;8699:393::-;8768:6;8818:1;8806:10;8802:18;8841:97;8871:66;8860:9;8841:97;:::i;:::-;8959:39;8989:8;8978:9;8959:39;:::i;:::-;8947:51;;9031:4;9027:9;9020:5;9016:21;9007:30;;9080:4;9070:8;9066:19;9059:5;9056:30;9046:40;;8775:317;;8699:393;;;;;:::o;9098:60::-;9126:3;9147:5;9140:12;;9098:60;;;:::o;9164:142::-;9214:9;9247:53;9265:34;9274:24;9292:5;9274:24;:::i;:::-;9265:34;:::i;:::-;9247:53;:::i;:::-;9234:66;;9164:142;;;:::o;9312:75::-;9355:3;9376:5;9369:12;;9312:75;;;:::o;9393:269::-;9503:39;9534:7;9503:39;:::i;:::-;9564:91;9613:41;9637:16;9613:41;:::i;:::-;9605:6;9598:4;9592:11;9564:91;:::i;:::-;9558:4;9551:105;9469:193;9393:269;;;:::o;9668:73::-;9713:3;9668:73;:::o;9747:189::-;9824:32;;:::i;:::-;9865:65;9923:6;9915;9909:4;9865:65;:::i;:::-;9800:136;9747:189;;:::o;9942:186::-;10002:120;10019:3;10012:5;10009:14;10002:120;;;10073:39;10110:1;10103:5;10073:39;:::i;:::-;10046:1;10039:5;10035:13;10026:22;;10002:120;;;9942:186;;:::o;10134:543::-;10235:2;10230:3;10227:11;10224:446;;;10269:38;10301:5;10269:38;:::i;:::-;10353:29;10371:10;10353:29;:::i;:::-;10343:8;10339:44;10536:2;10524:10;10521:18;10518:49;;;10557:8;10542:23;;10518:49;10580:80;10636:22;10654:3;10636:22;:::i;:::-;10626:8;10622:37;10609:11;10580:80;:::i;:::-;10239:431;;10224:446;10134:543;;;:::o;10683:117::-;10737:8;10787:5;10781:4;10777:16;10756:37;;10683:117;;;;:::o;10806:169::-;10850:6;10883:51;10931:1;10927:6;10919:5;10916:1;10912:13;10883:51;:::i;:::-;10879:56;10964:4;10958;10954:15;10944:25;;10857:118;10806:169;;;;:::o;10980:295::-;11056:4;11202:29;11227:3;11221:4;11202:29;:::i;:::-;11194:37;;11264:3;11261:1;11257:11;11251:4;11248:21;11240:29;;10980:295;;;;:::o;11280:1395::-;11397:37;11430:3;11397:37;:::i;:::-;11499:18;11491:6;11488:30;11485:56;;;11521:18;;:::i;:::-;11485:56;11565:38;11597:4;11591:11;11565:38;:::i;:::-;11650:67;11710:6;11702;11696:4;11650:67;:::i;:::-;11744:1;11768:4;11755:17;;11800:2;11792:6;11789:14;11817:1;11812:618;;;;12474:1;12491:6;12488:77;;;12540:9;12535:3;12531:19;12525:26;12516:35;;12488:77;12591:67;12651:6;12644:5;12591:67;:::i;:::-;12585:4;12578:81;12447:222;11782:887;;11812:618;11864:4;11860:9;11852:6;11848:22;11898:37;11930:4;11898:37;:::i;:::-;11957:1;11971:208;11985:7;11982:1;11979:14;11971:208;;;12064:9;12059:3;12055:19;12049:26;12041:6;12034:42;12115:1;12107:6;12103:14;12093:24;;12162:2;12151:9;12147:18;12134:31;;12008:4;12005:1;12001:12;11996:17;;11971:208;;;12207:6;12198:7;12195:19;12192:179;;;12265:9;12260:3;12256:19;12250:26;12308:48;12350:4;12342:6;12338:17;12327:9;12308:48;:::i;:::-;12300:6;12293:64;12215:156;12192:179;12417:1;12413;12405:6;12401:14;12397:22;12391:4;12384:36;11819:611;;;11782:887;;11372:1303;;;11280:1395;;:::o;12681:169::-;12765:11;12799:6;12794:3;12787:19;12839:4;12834:3;12830:14;12815:29;;12681:169;;;;:::o;12856:174::-;12996:26;12992:1;12984:6;12980:14;12973:50;12856:174;:::o;13036:366::-;13178:3;13199:67;13263:2;13258:3;13199:67;:::i;:::-;13192:74;;13275:93;13364:3;13275:93;:::i;:::-;13393:2;13388:3;13384:12;13377:19;;13036:366;;;:::o;13408:419::-;13574:4;13612:2;13601:9;13597:18;13589:26;;13661:9;13655:4;13651:20;13647:1;13636:9;13632:17;13625:47;13689:131;13815:4;13689:131;:::i;:::-;13681:139;;13408:419;;;:::o;13833:173::-;13973:25;13969:1;13961:6;13957:14;13950:49;13833:173;:::o;14012:366::-;14154:3;14175:67;14239:2;14234:3;14175:67;:::i;:::-;14168:74;;14251:93;14340:3;14251:93;:::i;:::-;14369:2;14364:3;14360:12;14353:19;;14012:366;;;:::o;14384:419::-;14550:4;14588:2;14577:9;14573:18;14565:26;;14637:9;14631:4;14627:20;14623:1;14612:9;14608:17;14601:47;14665:131;14791:4;14665:131;:::i;:::-;14657:139;;14384:419;;;:::o;479:3721:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1093":{"entryPoint":6100,"id":1093,"parameterSlots":2,"returnSlots":0},"@_baseURI_568":{"entryPoint":7761,"id":568,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_1166":{"entryPoint":8392,"id":1166,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_1155":{"entryPoint":8397,"id":1155,"parameterSlots":4,"returnSlots":1},"@_exists_807":{"entryPoint":5984,"id":807,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_848":{"entryPoint":6698,"id":848,"parameterSlots":2,"returnSlots":1},"@_mint_949":{"entryPoint":9250,"id":949,"parameterSlots":2,"returnSlots":0},"@_msgSender_1765":{"entryPoint":6092,"id":1765,"parameterSlots":0,"returnSlots":1},"@_safeMint_863":{"entryPoint":8253,"id":863,"parameterSlots":2,"returnSlots":0},"@_safeMint_892":{"entryPoint":9140,"id":892,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_789":{"entryPoint":7669,"id":789,"parameterSlots":4,"returnSlots":0},"@_setTokenURI_1398":{"entryPoint":8283,"id":1398,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_255":{"entryPoint":7951,"id":255,"parameterSlots":1,"returnSlots":0},"@_transfer_1069":{"entryPoint":6920,"id":1069,"parameterSlots":3,"returnSlots":0},"@_validateOwnership_268":{"entryPoint":7523,"id":268,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_221":{"entryPoint":3482,"id":221,"parameterSlots":0,"returnSlots":0},"@approve_611":{"entryPoint":2108,"id":611,"parameterSlots":2,"returnSlots":0},"@balanceOf_469":{"entryPoint":3299,"id":469,"parameterSlots":1,"returnSlots":1},"@fulfillRandomWords_2231":{"entryPoint":6285,"id":2231,"parameterSlots":2,"returnSlots":0},"@getApproved_632":{"entryPoint":1975,"id":632,"parameterSlots":1,"returnSlots":1},"@getBreedFromModdedRng_2328":{"entryPoint":4552,"id":2328,"parameterSlots":1,"returnSlots":1},"@getChanceArray_2341":{"entryPoint":3069,"id":2341,"parameterSlots":0,"returnSlots":1},"@getDogTokenUris_2361":{"entryPoint":2681,"id":2361,"parameterSlots":1,"returnSlots":1},"@getMintFee_2349":{"entryPoint":3889,"id":2349,"parameterSlots":0,"returnSlots":1},"@getTokenCounter_2369":{"entryPoint":3289,"id":2369,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_684":{"entryPoint":5710,"id":684,"parameterSlots":2,"returnSlots":1},"@isContract_1476":{"entryPoint":9231,"id":1476,"parameterSlots":1,"returnSlots":1},"@name_507":{"entryPoint":1829,"id":507,"parameterSlots":0,"returnSlots":1},"@ownerOf_497":{"entryPoint":3112,"id":497,"parameterSlots":1,"returnSlots":1},"@owner_231":{"entryPoint":3929,"id":231,"parameterSlots":0,"returnSlots":1},"@rawFulfillRandomWords_350":{"entryPoint":2393,"id":350,"parameterSlots":2,"returnSlots":0},"@requestNft_2172":{"entryPoint":4778,"id":2172,"parameterSlots":0,"returnSlots":1},"@s_requestIdToSender_2055":{"entryPoint":4501,"id":2055,"parameterSlots":0,"returnSlots":0},"@s_tokenCounter_2057":{"entryPoint":2387,"id":2057,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_730":{"entryPoint":3037,"id":730,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_760":{"entryPoint":5275,"id":760,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_666":{"entryPoint":4117,"id":666,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2001":{"entryPoint":5878,"id":2001,"parameterSlots":1,"returnSlots":1},"@supportsInterface_445":{"entryPoint":1603,"id":445,"parameterSlots":1,"returnSlots":1},"@symbol_517":{"entryPoint":3971,"id":517,"parameterSlots":0,"returnSlots":1},"@toString_1860":{"entryPoint":8788,"id":1860,"parameterSlots":1,"returnSlots":1},"@tokenURI_1376":{"entryPoint":5373,"id":1376,"parameterSlots":1,"returnSlots":1},"@tokenURI_559":{"entryPoint":7784,"id":559,"parameterSlots":1,"returnSlots":1},"@transferFrom_711":{"entryPoint":2585,"id":711,"parameterSlots":3,"returnSlots":0},"@transferOwnership_185":{"entryPoint":5858,"id":185,"parameterSlots":1,"returnSlots":0},"@withdraw_2265":{"entryPoint":2857,"id":2265,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10648,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":11540,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":10344,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10753,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":11240,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":9832,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":15955,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":11606,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":10163,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":13567,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11172,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":11783,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":10891,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":11652,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":11261,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10365,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":9853,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":15976,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":10184,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":13588,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10799,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":11021,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10279,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":11058,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9910,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":13374,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":15822,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_Breed_$2036_to_t_uint8_fromStack":{"entryPoint":11429,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":10039,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13790,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":13018,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":14689,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":16219,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":14543,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":14383,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":13126,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack":{"entryPoint":14091,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack":{"entryPoint":12314,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack":{"entryPoint":12910,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack":{"entryPoint":12764,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack":{"entryPoint":15089,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":16111,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a_to_t_string_memory_ptr_fromStack":{"entryPoint":13712,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack":{"entryPoint":12022,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack":{"entryPoint":14237,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack":{"entryPoint":14835,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":12168,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12629,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack":{"entryPoint":12501,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":14943,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":13438,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":11006,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":10429,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":13469,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":13409,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13839,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12664,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10294,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":12381,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":15879,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed":{"entryPoint":11145,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":9925,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":13484,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_enum$_Breed_$2036__to_t_uint8__fromStack_reversed":{"entryPoint":11444,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_Breed_$2036_t_address__to_t_uint8_t_address__fromStack_reversed":{"entryPoint":13971,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10096,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13053,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14724,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16254,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14578,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14418,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13161,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14126,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12349,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12945,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12799,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15124,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16146,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13747,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12057,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14272,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14870,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12203,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12536,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14978,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":10444,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":10572,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":9745,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10599,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":11476,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":10996,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":15156,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":10974,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":15794,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":9952,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":11045,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":10985,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":15805,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12615,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9963,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13779,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":13240,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":16021,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":14450,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":15443,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":10261,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9898,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":13364,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":9765,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Breed_$2036":{"entryPoint":11392,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":13424,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":10229,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":10130,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":13453,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":13389,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":15408,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_enum$_Breed_$2036_to_t_uint8":{"entryPoint":11411,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":15298,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":15584,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":11525,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":9980,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":15177,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":11894,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":15556,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":10523,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":15288,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":13292,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":15526,"id":null,"parameterSlots":2,"returnSlots":1},"mod_t_uint256":{"entryPoint":13922,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":13193,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":13875,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":11325,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":11847,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12568,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10476,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":15332,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":10471,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":10643,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":11471,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":9760,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9755,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10022,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":15193,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":15513,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":15384,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":12977,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":14610,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":16178,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":14502,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":14304,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":13085,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c":{"entryPoint":14012,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d":{"entryPoint":12235,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba":{"entryPoint":12831,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397":{"entryPoint":12685,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4":{"entryPoint":15010,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":16070,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a":{"entryPoint":13633,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d":{"entryPoint":11943,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950":{"entryPoint":14158,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb":{"entryPoint":14756,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":12089,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":12626,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2":{"entryPoint":12422,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":14902,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":15206,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":15342,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_t_enum$_Breed_$2036":{"entryPoint":11372,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10321,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":11217,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":9809,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10140,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":15379,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:47852:16","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:16","statements":[{"nodeType":"YulAssignment","src":"57:19:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:16","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:16"},"nodeType":"YulFunctionCall","src":"67:9:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:16"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:16","type":""}],"src":"7:75:16"},{"body":{"nodeType":"YulBlock","src":"177:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:16"},"nodeType":"YulFunctionCall","src":"187:12:16"},"nodeType":"YulExpressionStatement","src":"187:12:16"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:16"},{"body":{"nodeType":"YulBlock","src":"300:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:16"},"nodeType":"YulFunctionCall","src":"310:12:16"},"nodeType":"YulExpressionStatement","src":"310:12:16"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:16"},{"body":{"nodeType":"YulBlock","src":"378:105:16","statements":[{"nodeType":"YulAssignment","src":"388:89:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:16","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:16"},"nodeType":"YulFunctionCall","src":"399:78:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:16"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:16","type":""}],"src":"334:149:16"},{"body":{"nodeType":"YulBlock","src":"531:78:16","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:16"},"nodeType":"YulFunctionCall","src":"589:12:16"},"nodeType":"YulExpressionStatement","src":"589:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:16"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:16"},"nodeType":"YulFunctionCall","src":"561:23:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:16"},"nodeType":"YulFunctionCall","src":"551:34:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:16"},"nodeType":"YulFunctionCall","src":"544:42:16"},"nodeType":"YulIf","src":"541:62:16"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:16","type":""}],"src":"489:120:16"},{"body":{"nodeType":"YulBlock","src":"666:86:16","statements":[{"nodeType":"YulAssignment","src":"676:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:16"},"nodeType":"YulFunctionCall","src":"685:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:16"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:16"},"nodeType":"YulFunctionCall","src":"714:32:16"},"nodeType":"YulExpressionStatement","src":"714:32:16"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:16","type":""}],"src":"615:137:16"},{"body":{"nodeType":"YulBlock","src":"823:262:16","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:16"},"nodeType":"YulFunctionCall","src":"871:79:16"},"nodeType":"YulExpressionStatement","src":"871:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:16"},"nodeType":"YulFunctionCall","src":"840:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:16"},"nodeType":"YulFunctionCall","src":"836:32:16"},"nodeType":"YulIf","src":"833:119:16"},{"nodeType":"YulBlock","src":"962:116:16","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:16","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:16"},"nodeType":"YulFunctionCall","src":"1036:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:16"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:16"},"nodeType":"YulFunctionCall","src":"1016:52:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:16","type":""}],"src":"758:327:16"},{"body":{"nodeType":"YulBlock","src":"1133:48:16","statements":[{"nodeType":"YulAssignment","src":"1143:32:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:16"},"nodeType":"YulFunctionCall","src":"1161:13:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:16"},"nodeType":"YulFunctionCall","src":"1154:21:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:16"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:16","type":""}],"src":"1091:90:16"},{"body":{"nodeType":"YulBlock","src":"1246:50:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:16"},"nodeType":"YulFunctionCall","src":"1268:21:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:16"},"nodeType":"YulFunctionCall","src":"1256:34:16"},"nodeType":"YulExpressionStatement","src":"1256:34:16"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:16","type":""}],"src":"1187:109:16"},{"body":{"nodeType":"YulBlock","src":"1394:118:16","statements":[{"nodeType":"YulAssignment","src":"1404:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:16"},"nodeType":"YulFunctionCall","src":"1412:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:16"},"nodeType":"YulFunctionCall","src":"1487:17:16"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:16"},"nodeType":"YulFunctionCall","src":"1440:65:16"},"nodeType":"YulExpressionStatement","src":"1440:65:16"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:16","type":""}],"src":"1302:210:16"},{"body":{"nodeType":"YulBlock","src":"1577:40:16","statements":[{"nodeType":"YulAssignment","src":"1588:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:16"},"nodeType":"YulFunctionCall","src":"1598:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:16"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:16","type":""}],"src":"1518:99:16"},{"body":{"nodeType":"YulBlock","src":"1719:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:16"},"nodeType":"YulFunctionCall","src":"1729:19:16"},"nodeType":"YulExpressionStatement","src":"1729:19:16"},{"nodeType":"YulAssignment","src":"1757:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:16"},"nodeType":"YulFunctionCall","src":"1772:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:16","type":""}],"src":"1623:169:16"},{"body":{"nodeType":"YulBlock","src":"1860:184:16","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:16"},"nodeType":"YulFunctionCall","src":"1960:11:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:16"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:16"},"nodeType":"YulFunctionCall","src":"1979:11:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:16"},"nodeType":"YulFunctionCall","src":"1973:18:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:16"},"nodeType":"YulFunctionCall","src":"1953:39:16"},"nodeType":"YulExpressionStatement","src":"1953:39:16"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:16"},"nodeType":"YulFunctionCall","src":"1897:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:16","statements":[{"nodeType":"YulAssignment","src":"1913:15:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:16"},"nodeType":"YulFunctionCall","src":"1918:10:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:16","statements":[]},"src":"1889:113:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:16"},"nodeType":"YulFunctionCall","src":"2018:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:16"},"nodeType":"YulFunctionCall","src":"2011:27:16"},"nodeType":"YulExpressionStatement","src":"2011:27:16"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:16","type":""}],"src":"1798:246:16"},{"body":{"nodeType":"YulBlock","src":"2098:54:16","statements":[{"nodeType":"YulAssignment","src":"2108:38:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:16"},"nodeType":"YulFunctionCall","src":"2122:14:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:16","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:16"},"nodeType":"YulFunctionCall","src":"2138:7:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:16"},"nodeType":"YulFunctionCall","src":"2118:28:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:16"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:16","type":""}],"src":"2050:102:16"},{"body":{"nodeType":"YulBlock","src":"2250:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:16"},"nodeType":"YulFunctionCall","src":"2274:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:16","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:16"},"nodeType":"YulFunctionCall","src":"2329:71:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:16"},"nodeType":"YulFunctionCall","src":"2444:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:16"},"nodeType":"YulFunctionCall","src":"2409:65:16"},"nodeType":"YulExpressionStatement","src":"2409:65:16"},{"nodeType":"YulAssignment","src":"2483:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:16"},"nodeType":"YulFunctionCall","src":"2499:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:16"},"nodeType":"YulFunctionCall","src":"2490:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:16","type":""}],"src":"2158:377:16"},{"body":{"nodeType":"YulBlock","src":"2659:195:16","statements":[{"nodeType":"YulAssignment","src":"2669:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:16"},"nodeType":"YulFunctionCall","src":"2677:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:16"},"nodeType":"YulFunctionCall","src":"2712:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:16"},"nodeType":"YulFunctionCall","src":"2731:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:16"},"nodeType":"YulFunctionCall","src":"2705:47:16"},"nodeType":"YulExpressionStatement","src":"2705:47:16"},{"nodeType":"YulAssignment","src":"2761:86:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:16"},"nodeType":"YulFunctionCall","src":"2769:78:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:16"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:16","type":""}],"src":"2541:313:16"},{"body":{"nodeType":"YulBlock","src":"2905:32:16","statements":[{"nodeType":"YulAssignment","src":"2915:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:16"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:16","type":""}],"src":"2860:77:16"},{"body":{"nodeType":"YulBlock","src":"2986:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:16"},"nodeType":"YulFunctionCall","src":"3045:12:16"},"nodeType":"YulExpressionStatement","src":"3045:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:16"},"nodeType":"YulFunctionCall","src":"3016:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:16"},"nodeType":"YulFunctionCall","src":"3006:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:16"},"nodeType":"YulFunctionCall","src":"2999:43:16"},"nodeType":"YulIf","src":"2996:63:16"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:16","type":""}],"src":"2943:122:16"},{"body":{"nodeType":"YulBlock","src":"3123:87:16","statements":[{"nodeType":"YulAssignment","src":"3133:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:16"},"nodeType":"YulFunctionCall","src":"3142:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:16"},"nodeType":"YulFunctionCall","src":"3171:33:16"},"nodeType":"YulExpressionStatement","src":"3171:33:16"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:16","type":""}],"src":"3071:139:16"},{"body":{"nodeType":"YulBlock","src":"3282:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:16"},"nodeType":"YulFunctionCall","src":"3330:79:16"},"nodeType":"YulExpressionStatement","src":"3330:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:16"},"nodeType":"YulFunctionCall","src":"3299:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:16"},"nodeType":"YulFunctionCall","src":"3295:32:16"},"nodeType":"YulIf","src":"3292:119:16"},{"nodeType":"YulBlock","src":"3421:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:16","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:16"},"nodeType":"YulFunctionCall","src":"3496:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:16"},"nodeType":"YulFunctionCall","src":"3475:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:16","type":""}],"src":"3216:329:16"},{"body":{"nodeType":"YulBlock","src":"3596:81:16","statements":[{"nodeType":"YulAssignment","src":"3606:65:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:16"},"nodeType":"YulFunctionCall","src":"3617:54:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:16"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:16","type":""}],"src":"3551:126:16"},{"body":{"nodeType":"YulBlock","src":"3728:51:16","statements":[{"nodeType":"YulAssignment","src":"3738:35:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:16"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:16"},"nodeType":"YulFunctionCall","src":"3749:24:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:16"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:16","type":""}],"src":"3683:96:16"},{"body":{"nodeType":"YulBlock","src":"3850:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:16"},"nodeType":"YulFunctionCall","src":"3872:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:16"},"nodeType":"YulFunctionCall","src":"3860:37:16"},"nodeType":"YulExpressionStatement","src":"3860:37:16"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:16","type":""}],"src":"3785:118:16"},{"body":{"nodeType":"YulBlock","src":"4007:124:16","statements":[{"nodeType":"YulAssignment","src":"4017:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:16"},"nodeType":"YulFunctionCall","src":"4025:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:16"},"nodeType":"YulFunctionCall","src":"4106:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:16"},"nodeType":"YulFunctionCall","src":"4053:71:16"},"nodeType":"YulExpressionStatement","src":"4053:71:16"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:16","type":""}],"src":"3909:222:16"},{"body":{"nodeType":"YulBlock","src":"4180:79:16","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:16"},"nodeType":"YulFunctionCall","src":"4239:12:16"},"nodeType":"YulExpressionStatement","src":"4239:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:16"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:16"},"nodeType":"YulFunctionCall","src":"4210:24:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:16"},"nodeType":"YulFunctionCall","src":"4200:35:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:16"},"nodeType":"YulFunctionCall","src":"4193:43:16"},"nodeType":"YulIf","src":"4190:63:16"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:16","type":""}],"src":"4137:122:16"},{"body":{"nodeType":"YulBlock","src":"4317:87:16","statements":[{"nodeType":"YulAssignment","src":"4327:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:16"},"nodeType":"YulFunctionCall","src":"4336:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:16"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:16"},"nodeType":"YulFunctionCall","src":"4365:33:16"},"nodeType":"YulExpressionStatement","src":"4365:33:16"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:16","type":""}],"src":"4265:139:16"},{"body":{"nodeType":"YulBlock","src":"4493:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:16"},"nodeType":"YulFunctionCall","src":"4541:79:16"},"nodeType":"YulExpressionStatement","src":"4541:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:16"},"nodeType":"YulFunctionCall","src":"4510:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:16"},"nodeType":"YulFunctionCall","src":"4506:32:16"},"nodeType":"YulIf","src":"4503:119:16"},{"nodeType":"YulBlock","src":"4632:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:16"},"nodeType":"YulFunctionCall","src":"4707:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:16"},"nodeType":"YulFunctionCall","src":"4686:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:16"}]}]},{"nodeType":"YulBlock","src":"4759:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:16","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:16"},"nodeType":"YulFunctionCall","src":"4835:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:16"},"nodeType":"YulFunctionCall","src":"4814:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:16","type":""}],"src":"4410:474:16"},{"body":{"nodeType":"YulBlock","src":"4955:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4972:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4995:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4977:17:16"},"nodeType":"YulFunctionCall","src":"4977:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4965:6:16"},"nodeType":"YulFunctionCall","src":"4965:37:16"},"nodeType":"YulExpressionStatement","src":"4965:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4943:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4950:3:16","type":""}],"src":"4890:118:16"},{"body":{"nodeType":"YulBlock","src":"5112:124:16","statements":[{"nodeType":"YulAssignment","src":"5122:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5134:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5145:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5130:3:16"},"nodeType":"YulFunctionCall","src":"5130:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5122:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5202:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5215:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"5226:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5211:3:16"},"nodeType":"YulFunctionCall","src":"5211:17:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5158:43:16"},"nodeType":"YulFunctionCall","src":"5158:71:16"},"nodeType":"YulExpressionStatement","src":"5158:71:16"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5084:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5096:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5107:4:16","type":""}],"src":"5014:222:16"},{"body":{"nodeType":"YulBlock","src":"5331:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5348:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5351:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5341:6:16"},"nodeType":"YulFunctionCall","src":"5341:12:16"},"nodeType":"YulExpressionStatement","src":"5341:12:16"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5242:117:16"},{"body":{"nodeType":"YulBlock","src":"5393:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5410:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5413:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5403:6:16"},"nodeType":"YulFunctionCall","src":"5403:88:16"},"nodeType":"YulExpressionStatement","src":"5403:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5507:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5510:4:16","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5500:6:16"},"nodeType":"YulFunctionCall","src":"5500:15:16"},"nodeType":"YulExpressionStatement","src":"5500:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5531:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5534:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5524:6:16"},"nodeType":"YulFunctionCall","src":"5524:15:16"},"nodeType":"YulExpressionStatement","src":"5524:15:16"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5365:180:16"},{"body":{"nodeType":"YulBlock","src":"5594:238:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5604:58:16","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5626:6:16"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5656:4:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5634:21:16"},"nodeType":"YulFunctionCall","src":"5634:27:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5622:3:16"},"nodeType":"YulFunctionCall","src":"5622:40:16"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5608:10:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"5773:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5775:16:16"},"nodeType":"YulFunctionCall","src":"5775:18:16"},"nodeType":"YulExpressionStatement","src":"5775:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5716:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"5728:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5713:2:16"},"nodeType":"YulFunctionCall","src":"5713:34:16"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5752:10:16"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5764:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5749:2:16"},"nodeType":"YulFunctionCall","src":"5749:22:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5710:2:16"},"nodeType":"YulFunctionCall","src":"5710:62:16"},"nodeType":"YulIf","src":"5707:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5811:2:16","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5815:10:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5804:6:16"},"nodeType":"YulFunctionCall","src":"5804:22:16"},"nodeType":"YulExpressionStatement","src":"5804:22:16"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5580:6:16","type":""},{"name":"size","nodeType":"YulTypedName","src":"5588:4:16","type":""}],"src":"5551:281:16"},{"body":{"nodeType":"YulBlock","src":"5879:88:16","statements":[{"nodeType":"YulAssignment","src":"5889:30:16","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5899:18:16"},"nodeType":"YulFunctionCall","src":"5899:20:16"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5889:6:16"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5948:6:16"},{"name":"size","nodeType":"YulIdentifier","src":"5956:4:16"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5928:19:16"},"nodeType":"YulFunctionCall","src":"5928:33:16"},"nodeType":"YulExpressionStatement","src":"5928:33:16"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5863:4:16","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5872:6:16","type":""}],"src":"5838:129:16"},{"body":{"nodeType":"YulBlock","src":"6055:229:16","statements":[{"body":{"nodeType":"YulBlock","src":"6160:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6162:16:16"},"nodeType":"YulFunctionCall","src":"6162:18:16"},"nodeType":"YulExpressionStatement","src":"6162:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6132:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6140:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6129:2:16"},"nodeType":"YulFunctionCall","src":"6129:30:16"},"nodeType":"YulIf","src":"6126:56:16"},{"nodeType":"YulAssignment","src":"6192:25:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6204:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6212:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6200:3:16"},"nodeType":"YulFunctionCall","src":"6200:17:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6192:4:16"}]},{"nodeType":"YulAssignment","src":"6254:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6266:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"6272:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6262:3:16"},"nodeType":"YulFunctionCall","src":"6262:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6254:4:16"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6039:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6050:4:16","type":""}],"src":"5973:311:16"},{"body":{"nodeType":"YulBlock","src":"6379:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6396:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6399:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6389:6:16"},"nodeType":"YulFunctionCall","src":"6389:12:16"},"nodeType":"YulExpressionStatement","src":"6389:12:16"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"6290:117:16"},{"body":{"nodeType":"YulBlock","src":"6532:608:16","statements":[{"nodeType":"YulAssignment","src":"6542:90:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6624:6:16"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6567:56:16"},"nodeType":"YulFunctionCall","src":"6567:64:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6551:15:16"},"nodeType":"YulFunctionCall","src":"6551:81:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6542:5:16"}]},{"nodeType":"YulVariableDeclaration","src":"6641:16:16","value":{"name":"array","nodeType":"YulIdentifier","src":"6652:5:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6645:3:16","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6674:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"6681:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6667:6:16"},"nodeType":"YulFunctionCall","src":"6667:21:16"},"nodeType":"YulExpressionStatement","src":"6667:21:16"},{"nodeType":"YulAssignment","src":"6697:23:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6708:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"6715:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6704:3:16"},"nodeType":"YulFunctionCall","src":"6704:16:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6697:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"6730:44:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6748:6:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6760:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"6768:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6756:3:16"},"nodeType":"YulFunctionCall","src":"6756:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6744:3:16"},"nodeType":"YulFunctionCall","src":"6744:30:16"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6734:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"6802:103:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6816:77:16"},"nodeType":"YulFunctionCall","src":"6816:79:16"},"nodeType":"YulExpressionStatement","src":"6816:79:16"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6789:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"6797:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6786:2:16"},"nodeType":"YulFunctionCall","src":"6786:15:16"},"nodeType":"YulIf","src":"6783:122:16"},{"body":{"nodeType":"YulBlock","src":"6990:144:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7005:21:16","value":{"name":"src","nodeType":"YulIdentifier","src":"7023:3:16"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7009:10:16","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7047:3:16"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"7073:10:16"},{"name":"end","nodeType":"YulIdentifier","src":"7085:3:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7052:20:16"},"nodeType":"YulFunctionCall","src":"7052:37:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7040:6:16"},"nodeType":"YulFunctionCall","src":"7040:50:16"},"nodeType":"YulExpressionStatement","src":"7040:50:16"},{"nodeType":"YulAssignment","src":"7103:21:16","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7114:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"7119:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7110:3:16"},"nodeType":"YulFunctionCall","src":"7110:14:16"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7103:3:16"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6943:3:16"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6948:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6940:2:16"},"nodeType":"YulFunctionCall","src":"6940:15:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6956:25:16","statements":[{"nodeType":"YulAssignment","src":"6958:21:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6969:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"6974:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6965:3:16"},"nodeType":"YulFunctionCall","src":"6965:14:16"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6958:3:16"}]}]},"pre":{"nodeType":"YulBlock","src":"6918:21:16","statements":[{"nodeType":"YulVariableDeclaration","src":"6920:17:16","value":{"name":"offset","nodeType":"YulIdentifier","src":"6931:6:16"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6924:3:16","type":""}]}]},"src":"6914:220:16"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6502:6:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"6510:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"6518:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6526:5:16","type":""}],"src":"6430:710:16"},{"body":{"nodeType":"YulBlock","src":"7240:293:16","statements":[{"body":{"nodeType":"YulBlock","src":"7289:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7291:77:16"},"nodeType":"YulFunctionCall","src":"7291:79:16"},"nodeType":"YulExpressionStatement","src":"7291:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7268:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7276:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7264:3:16"},"nodeType":"YulFunctionCall","src":"7264:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"7283:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7260:3:16"},"nodeType":"YulFunctionCall","src":"7260:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7253:6:16"},"nodeType":"YulFunctionCall","src":"7253:35:16"},"nodeType":"YulIf","src":"7250:122:16"},{"nodeType":"YulVariableDeclaration","src":"7381:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7408:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7395:12:16"},"nodeType":"YulFunctionCall","src":"7395:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7385:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7424:103:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7500:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"7508:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7496:3:16"},"nodeType":"YulFunctionCall","src":"7496:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"7515:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"7523:3:16"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7433:62:16"},"nodeType":"YulFunctionCall","src":"7433:94:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7424:5:16"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7218:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"7226:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7234:5:16","type":""}],"src":"7163:370:16"},{"body":{"nodeType":"YulBlock","src":"7647:576:16","statements":[{"body":{"nodeType":"YulBlock","src":"7693:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7695:77:16"},"nodeType":"YulFunctionCall","src":"7695:79:16"},"nodeType":"YulExpressionStatement","src":"7695:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7668:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"7677:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7664:3:16"},"nodeType":"YulFunctionCall","src":"7664:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"7689:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7660:3:16"},"nodeType":"YulFunctionCall","src":"7660:32:16"},"nodeType":"YulIf","src":"7657:119:16"},{"nodeType":"YulBlock","src":"7786:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7801:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"7815:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7805:6:16","type":""}]},{"nodeType":"YulAssignment","src":"7830:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7865:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"7876:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7861:3:16"},"nodeType":"YulFunctionCall","src":"7861:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7885:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7840:20:16"},"nodeType":"YulFunctionCall","src":"7840:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7830:6:16"}]}]},{"nodeType":"YulBlock","src":"7913:303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"7928:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7959:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"7970:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7955:3:16"},"nodeType":"YulFunctionCall","src":"7955:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7942:12:16"},"nodeType":"YulFunctionCall","src":"7942:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7932:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"8021:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8023:77:16"},"nodeType":"YulFunctionCall","src":"8023:79:16"},"nodeType":"YulExpressionStatement","src":"8023:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7993:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"8001:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7990:2:16"},"nodeType":"YulFunctionCall","src":"7990:30:16"},"nodeType":"YulIf","src":"7987:117:16"},{"nodeType":"YulAssignment","src":"8118:88:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8178:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"8189:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8174:3:16"},"nodeType":"YulFunctionCall","src":"8174:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8198:7:16"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8128:45:16"},"nodeType":"YulFunctionCall","src":"8128:78:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8118:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7609:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7620:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7632:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7640:6:16","type":""}],"src":"7539:684:16"},{"body":{"nodeType":"YulBlock","src":"8329:519:16","statements":[{"body":{"nodeType":"YulBlock","src":"8375:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8377:77:16"},"nodeType":"YulFunctionCall","src":"8377:79:16"},"nodeType":"YulExpressionStatement","src":"8377:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8350:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"8359:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8346:3:16"},"nodeType":"YulFunctionCall","src":"8346:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"8371:2:16","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8342:3:16"},"nodeType":"YulFunctionCall","src":"8342:32:16"},"nodeType":"YulIf","src":"8339:119:16"},{"nodeType":"YulBlock","src":"8468:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8483:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8497:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8487:6:16","type":""}]},{"nodeType":"YulAssignment","src":"8512:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8547:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"8558:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8543:3:16"},"nodeType":"YulFunctionCall","src":"8543:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8567:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8522:20:16"},"nodeType":"YulFunctionCall","src":"8522:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8512:6:16"}]}]},{"nodeType":"YulBlock","src":"8595:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8610:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8624:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8614:6:16","type":""}]},{"nodeType":"YulAssignment","src":"8640:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8675:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"8686:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8671:3:16"},"nodeType":"YulFunctionCall","src":"8671:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8695:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8650:20:16"},"nodeType":"YulFunctionCall","src":"8650:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8640:6:16"}]}]},{"nodeType":"YulBlock","src":"8723:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8738:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8752:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8742:6:16","type":""}]},{"nodeType":"YulAssignment","src":"8768:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8803:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"8814:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8799:3:16"},"nodeType":"YulFunctionCall","src":"8799:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8823:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8778:20:16"},"nodeType":"YulFunctionCall","src":"8778:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8768:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8283:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8294:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8306:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8314:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8322:6:16","type":""}],"src":"8229:619:16"},{"body":{"nodeType":"YulBlock","src":"8926:32:16","statements":[{"nodeType":"YulAssignment","src":"8937:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"8947:4:16","type":"","value":"0x03"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8937:6:16"}]}]},"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8909:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8919:6:16","type":""}],"src":"8854:104:16"},{"body":{"nodeType":"YulBlock","src":"9073:34:16","statements":[{"nodeType":"YulAssignment","src":"9083:18:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"9098:3:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9083:11:16"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9045:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"9050:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9061:11:16","type":""}],"src":"8964:143:16"},{"body":{"nodeType":"YulBlock","src":"9183:28:16","statements":[{"nodeType":"YulAssignment","src":"9193:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9201:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9193:4:16"}]}]},"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9170:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9178:4:16","type":""}],"src":"9113:98:16"},{"body":{"nodeType":"YulBlock","src":"9272:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9289:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9312:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9294:17:16"},"nodeType":"YulFunctionCall","src":"9294:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9282:6:16"},"nodeType":"YulFunctionCall","src":"9282:37:16"},"nodeType":"YulExpressionStatement","src":"9282:37:16"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9260:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9267:3:16","type":""}],"src":"9217:108:16"},{"body":{"nodeType":"YulBlock","src":"9411:99:16","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9455:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"9463:3:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9421:33:16"},"nodeType":"YulFunctionCall","src":"9421:46:16"},"nodeType":"YulExpressionStatement","src":"9421:46:16"},{"nodeType":"YulAssignment","src":"9476:28:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9494:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"9499:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9490:3:16"},"nodeType":"YulFunctionCall","src":"9490:14:16"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"9476:10:16"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"9384:6:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9392:3:16","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"9400:10:16","type":""}],"src":"9331:179:16"},{"body":{"nodeType":"YulBlock","src":"9589:38:16","statements":[{"nodeType":"YulAssignment","src":"9599:22:16","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9611:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"9616:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9607:3:16"},"nodeType":"YulFunctionCall","src":"9607:14:16"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9599:4:16"}]}]},"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9576:3:16","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9584:4:16","type":""}],"src":"9516:111:16"},{"body":{"nodeType":"YulBlock","src":"9777:582:16","statements":[{"nodeType":"YulVariableDeclaration","src":"9787:66:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9847:5:16"}],"functionName":{"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"9801:45:16"},"nodeType":"YulFunctionCall","src":"9801:52:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9791:6:16","type":""}]},{"nodeType":"YulAssignment","src":"9862:91:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9941:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"9946:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9869:71:16"},"nodeType":"YulFunctionCall","src":"9869:84:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9862:3:16"}]},{"nodeType":"YulVariableDeclaration","src":"9962:69:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10025:5:16"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"9977:47:16"},"nodeType":"YulFunctionCall","src":"9977:54:16"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"9966:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10040:21:16","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"10054:7:16"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"10044:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"10130:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10144:34:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10171:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10165:5:16"},"nodeType":"YulFunctionCall","src":"10165:13:16"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"10148:13:16","type":""}]},{"nodeType":"YulAssignment","src":"10191:70:16","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"10242:13:16"},{"name":"pos","nodeType":"YulIdentifier","src":"10257:3:16"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10198:43:16"},"nodeType":"YulFunctionCall","src":"10198:63:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10191:3:16"}]},{"nodeType":"YulAssignment","src":"10274:68:16","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10335:6:16"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"10284:50:16"},"nodeType":"YulFunctionCall","src":"10284:58:16"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10274:6:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10092:1:16"},{"name":"length","nodeType":"YulIdentifier","src":"10095:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10089:2:16"},"nodeType":"YulFunctionCall","src":"10089:13:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10103:18:16","statements":[{"nodeType":"YulAssignment","src":"10105:14:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10114:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"10117:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10110:3:16"},"nodeType":"YulFunctionCall","src":"10110:9:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10105:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"10074:14:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10076:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10085:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10080:1:16","type":""}]}]},"src":"10070:282:16"}]},"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9764:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9771:3:16","type":""}],"src":"9665:694:16"},{"body":{"nodeType":"YulBlock","src":"10509:170:16","statements":[{"nodeType":"YulAssignment","src":"10519:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10531:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10542:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10527:3:16"},"nodeType":"YulFunctionCall","src":"10527:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10519:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10645:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10658:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"10669:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10654:3:16"},"nodeType":"YulFunctionCall","src":"10654:17:16"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10555:89:16"},"nodeType":"YulFunctionCall","src":"10555:117:16"},"nodeType":"YulExpressionStatement","src":"10555:117:16"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10481:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10493:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10504:4:16","type":""}],"src":"10365:314:16"},{"body":{"nodeType":"YulBlock","src":"10751:263:16","statements":[{"body":{"nodeType":"YulBlock","src":"10797:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10799:77:16"},"nodeType":"YulFunctionCall","src":"10799:79:16"},"nodeType":"YulExpressionStatement","src":"10799:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10772:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"10781:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10768:3:16"},"nodeType":"YulFunctionCall","src":"10768:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"10793:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10764:3:16"},"nodeType":"YulFunctionCall","src":"10764:32:16"},"nodeType":"YulIf","src":"10761:119:16"},{"nodeType":"YulBlock","src":"10890:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"10905:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"10919:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10909:6:16","type":""}]},{"nodeType":"YulAssignment","src":"10934:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10969:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"10980:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10965:3:16"},"nodeType":"YulFunctionCall","src":"10965:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10989:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10944:20:16"},"nodeType":"YulFunctionCall","src":"10944:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10934:6:16"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10721:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10732:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10744:6:16","type":""}],"src":"10685:329:16"},{"body":{"nodeType":"YulBlock","src":"11060:76:16","statements":[{"body":{"nodeType":"YulBlock","src":"11114:16:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11123:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11126:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11116:6:16"},"nodeType":"YulFunctionCall","src":"11116:12:16"},"nodeType":"YulExpressionStatement","src":"11116:12:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11083:5:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11105:5:16"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"11090:14:16"},"nodeType":"YulFunctionCall","src":"11090:21:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11080:2:16"},"nodeType":"YulFunctionCall","src":"11080:32:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11073:6:16"},"nodeType":"YulFunctionCall","src":"11073:40:16"},"nodeType":"YulIf","src":"11070:60:16"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11053:5:16","type":""}],"src":"11020:116:16"},{"body":{"nodeType":"YulBlock","src":"11191:84:16","statements":[{"nodeType":"YulAssignment","src":"11201:29:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11223:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11210:12:16"},"nodeType":"YulFunctionCall","src":"11210:20:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11201:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11263:5:16"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"11239:23:16"},"nodeType":"YulFunctionCall","src":"11239:30:16"},"nodeType":"YulExpressionStatement","src":"11239:30:16"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11169:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"11177:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11185:5:16","type":""}],"src":"11142:133:16"},{"body":{"nodeType":"YulBlock","src":"11361:388:16","statements":[{"body":{"nodeType":"YulBlock","src":"11407:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11409:77:16"},"nodeType":"YulFunctionCall","src":"11409:79:16"},"nodeType":"YulExpressionStatement","src":"11409:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11382:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"11391:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11378:3:16"},"nodeType":"YulFunctionCall","src":"11378:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"11403:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11374:3:16"},"nodeType":"YulFunctionCall","src":"11374:32:16"},"nodeType":"YulIf","src":"11371:119:16"},{"nodeType":"YulBlock","src":"11500:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"11515:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"11529:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11519:6:16","type":""}]},{"nodeType":"YulAssignment","src":"11544:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11579:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"11590:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11575:3:16"},"nodeType":"YulFunctionCall","src":"11575:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11599:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11554:20:16"},"nodeType":"YulFunctionCall","src":"11554:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11544:6:16"}]}]},{"nodeType":"YulBlock","src":"11627:115:16","statements":[{"nodeType":"YulVariableDeclaration","src":"11642:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"11656:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11646:6:16","type":""}]},{"nodeType":"YulAssignment","src":"11672:60:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11704:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"11715:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11700:3:16"},"nodeType":"YulFunctionCall","src":"11700:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11724:7:16"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"11682:17:16"},"nodeType":"YulFunctionCall","src":"11682:50:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11672:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11323:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11334:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11346:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11354:6:16","type":""}],"src":"11281:468:16"},{"body":{"nodeType":"YulBlock","src":"11783:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11800:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11803:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11793:6:16"},"nodeType":"YulFunctionCall","src":"11793:88:16"},"nodeType":"YulExpressionStatement","src":"11793:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11897:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11900:4:16","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11890:6:16"},"nodeType":"YulFunctionCall","src":"11890:15:16"},"nodeType":"YulExpressionStatement","src":"11890:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11921:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11924:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11914:6:16"},"nodeType":"YulFunctionCall","src":"11914:15:16"},"nodeType":"YulExpressionStatement","src":"11914:15:16"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"11755:180:16"},{"body":{"nodeType":"YulBlock","src":"11994:62:16","statements":[{"body":{"nodeType":"YulBlock","src":"12028:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"12030:16:16"},"nodeType":"YulFunctionCall","src":"12030:18:16"},"nodeType":"YulExpressionStatement","src":"12030:18:16"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12017:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"12024:1:16","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12014:2:16"},"nodeType":"YulFunctionCall","src":"12014:12:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12007:6:16"},"nodeType":"YulFunctionCall","src":"12007:20:16"},"nodeType":"YulIf","src":"12004:46:16"}]},"name":"validator_assert_t_enum$_Breed_$2036","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11987:5:16","type":""}],"src":"11941:115:16"},{"body":{"nodeType":"YulBlock","src":"12117:76:16","statements":[{"nodeType":"YulAssignment","src":"12127:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"12138:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12127:7:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12181:5:16"}],"functionName":{"name":"validator_assert_t_enum$_Breed_$2036","nodeType":"YulIdentifier","src":"12144:36:16"},"nodeType":"YulFunctionCall","src":"12144:43:16"},"nodeType":"YulExpressionStatement","src":"12144:43:16"}]},"name":"cleanup_t_enum$_Breed_$2036","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12099:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12109:7:16","type":""}],"src":"12062:131:16"},{"body":{"nodeType":"YulBlock","src":"12267:63:16","statements":[{"nodeType":"YulAssignment","src":"12277:47:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12318:5:16"}],"functionName":{"name":"cleanup_t_enum$_Breed_$2036","nodeType":"YulIdentifier","src":"12290:27:16"},"nodeType":"YulFunctionCall","src":"12290:34:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12277:9:16"}]}]},"name":"convert_t_enum$_Breed_$2036_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12247:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12257:9:16","type":""}],"src":"12199:131:16"},{"body":{"nodeType":"YulBlock","src":"12409:74:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12426:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12470:5:16"}],"functionName":{"name":"convert_t_enum$_Breed_$2036_to_t_uint8","nodeType":"YulIdentifier","src":"12431:38:16"},"nodeType":"YulFunctionCall","src":"12431:45:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12419:6:16"},"nodeType":"YulFunctionCall","src":"12419:58:16"},"nodeType":"YulExpressionStatement","src":"12419:58:16"}]},"name":"abi_encode_t_enum$_Breed_$2036_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12397:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12404:3:16","type":""}],"src":"12336:147:16"},{"body":{"nodeType":"YulBlock","src":"12595:132:16","statements":[{"nodeType":"YulAssignment","src":"12605:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12617:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12628:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12613:3:16"},"nodeType":"YulFunctionCall","src":"12613:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12605:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12693:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12706:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"12717:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12702:3:16"},"nodeType":"YulFunctionCall","src":"12702:17:16"}],"functionName":{"name":"abi_encode_t_enum$_Breed_$2036_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"12641:51:16"},"nodeType":"YulFunctionCall","src":"12641:79:16"},"nodeType":"YulExpressionStatement","src":"12641:79:16"}]},"name":"abi_encode_tuple_t_enum$_Breed_$2036__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12567:9:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12579:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12590:4:16","type":""}],"src":"12489:238:16"},{"body":{"nodeType":"YulBlock","src":"12822:28:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12839:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12842:1:16","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12832:6:16"},"nodeType":"YulFunctionCall","src":"12832:12:16"},"nodeType":"YulExpressionStatement","src":"12832:12:16"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"12733:117:16"},{"body":{"nodeType":"YulBlock","src":"12922:241:16","statements":[{"body":{"nodeType":"YulBlock","src":"13027:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13029:16:16"},"nodeType":"YulFunctionCall","src":"13029:18:16"},"nodeType":"YulExpressionStatement","src":"13029:18:16"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12999:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13007:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12996:2:16"},"nodeType":"YulFunctionCall","src":"12996:30:16"},"nodeType":"YulIf","src":"12993:56:16"},{"nodeType":"YulAssignment","src":"13059:37:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13089:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13067:21:16"},"nodeType":"YulFunctionCall","src":"13067:29:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13059:4:16"}]},{"nodeType":"YulAssignment","src":"13133:23:16","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"13145:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"13151:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13141:3:16"},"nodeType":"YulFunctionCall","src":"13141:15:16"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13133:4:16"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"12906:6:16","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"12917:4:16","type":""}],"src":"12856:307:16"},{"body":{"nodeType":"YulBlock","src":"13233:82:16","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13256:3:16"},{"name":"src","nodeType":"YulIdentifier","src":"13261:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"13266:6:16"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"13243:12:16"},"nodeType":"YulFunctionCall","src":"13243:30:16"},"nodeType":"YulExpressionStatement","src":"13243:30:16"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13293:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"13298:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13289:3:16"},"nodeType":"YulFunctionCall","src":"13289:16:16"},{"kind":"number","nodeType":"YulLiteral","src":"13307:1:16","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13282:6:16"},"nodeType":"YulFunctionCall","src":"13282:27:16"},"nodeType":"YulExpressionStatement","src":"13282:27:16"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13215:3:16","type":""},{"name":"dst","nodeType":"YulTypedName","src":"13220:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"13225:6:16","type":""}],"src":"13169:146:16"},{"body":{"nodeType":"YulBlock","src":"13404:340:16","statements":[{"nodeType":"YulAssignment","src":"13414:74:16","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13480:6:16"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13439:40:16"},"nodeType":"YulFunctionCall","src":"13439:48:16"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"13423:15:16"},"nodeType":"YulFunctionCall","src":"13423:65:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13414:5:16"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13504:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"13511:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13497:6:16"},"nodeType":"YulFunctionCall","src":"13497:21:16"},"nodeType":"YulExpressionStatement","src":"13497:21:16"},{"nodeType":"YulVariableDeclaration","src":"13527:27:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13542:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"13549:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13538:3:16"},"nodeType":"YulFunctionCall","src":"13538:16:16"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"13531:3:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"13592:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"13594:77:16"},"nodeType":"YulFunctionCall","src":"13594:79:16"},"nodeType":"YulExpressionStatement","src":"13594:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13573:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"13578:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13569:3:16"},"nodeType":"YulFunctionCall","src":"13569:16:16"},{"name":"end","nodeType":"YulIdentifier","src":"13587:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13566:2:16"},"nodeType":"YulFunctionCall","src":"13566:25:16"},"nodeType":"YulIf","src":"13563:112:16"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13721:3:16"},{"name":"dst","nodeType":"YulIdentifier","src":"13726:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"13731:6:16"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13684:36:16"},"nodeType":"YulFunctionCall","src":"13684:54:16"},"nodeType":"YulExpressionStatement","src":"13684:54:16"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13377:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"13382:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"13390:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13398:5:16","type":""}],"src":"13321:423:16"},{"body":{"nodeType":"YulBlock","src":"13824:277:16","statements":[{"body":{"nodeType":"YulBlock","src":"13873:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"13875:77:16"},"nodeType":"YulFunctionCall","src":"13875:79:16"},"nodeType":"YulExpressionStatement","src":"13875:79:16"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13852:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"13860:4:16","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13848:3:16"},"nodeType":"YulFunctionCall","src":"13848:17:16"},{"name":"end","nodeType":"YulIdentifier","src":"13867:3:16"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13844:3:16"},"nodeType":"YulFunctionCall","src":"13844:27:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13837:6:16"},"nodeType":"YulFunctionCall","src":"13837:35:16"},"nodeType":"YulIf","src":"13834:122:16"},{"nodeType":"YulVariableDeclaration","src":"13965:34:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13992:6:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13979:12:16"},"nodeType":"YulFunctionCall","src":"13979:20:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13969:6:16","type":""}]},{"nodeType":"YulAssignment","src":"14008:87:16","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14068:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"14076:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14064:3:16"},"nodeType":"YulFunctionCall","src":"14064:17:16"},{"name":"length","nodeType":"YulIdentifier","src":"14083:6:16"},{"name":"end","nodeType":"YulIdentifier","src":"14091:3:16"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14017:46:16"},"nodeType":"YulFunctionCall","src":"14017:78:16"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14008:5:16"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13802:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"13810:3:16","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13818:5:16","type":""}],"src":"13763:338:16"},{"body":{"nodeType":"YulBlock","src":"14233:817:16","statements":[{"body":{"nodeType":"YulBlock","src":"14280:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14282:77:16"},"nodeType":"YulFunctionCall","src":"14282:79:16"},"nodeType":"YulExpressionStatement","src":"14282:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14254:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"14263:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14250:3:16"},"nodeType":"YulFunctionCall","src":"14250:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"14275:3:16","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14246:3:16"},"nodeType":"YulFunctionCall","src":"14246:33:16"},"nodeType":"YulIf","src":"14243:120:16"},{"nodeType":"YulBlock","src":"14373:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14388:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"14402:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14392:6:16","type":""}]},{"nodeType":"YulAssignment","src":"14417:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14452:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"14463:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14448:3:16"},"nodeType":"YulFunctionCall","src":"14448:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14472:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14427:20:16"},"nodeType":"YulFunctionCall","src":"14427:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14417:6:16"}]}]},{"nodeType":"YulBlock","src":"14500:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14515:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"14529:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14519:6:16","type":""}]},{"nodeType":"YulAssignment","src":"14545:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14580:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"14591:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14576:3:16"},"nodeType":"YulFunctionCall","src":"14576:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14600:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14555:20:16"},"nodeType":"YulFunctionCall","src":"14555:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14545:6:16"}]}]},{"nodeType":"YulBlock","src":"14628:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14643:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"14657:2:16","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14647:6:16","type":""}]},{"nodeType":"YulAssignment","src":"14673:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14708:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"14719:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14704:3:16"},"nodeType":"YulFunctionCall","src":"14704:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14728:7:16"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14683:20:16"},"nodeType":"YulFunctionCall","src":"14683:53:16"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14673:6:16"}]}]},{"nodeType":"YulBlock","src":"14756:287:16","statements":[{"nodeType":"YulVariableDeclaration","src":"14771:46:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14802:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"14813:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14798:3:16"},"nodeType":"YulFunctionCall","src":"14798:18:16"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14785:12:16"},"nodeType":"YulFunctionCall","src":"14785:32:16"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14775:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"14864:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14866:77:16"},"nodeType":"YulFunctionCall","src":"14866:79:16"},"nodeType":"YulExpressionStatement","src":"14866:79:16"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14836:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"14844:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14833:2:16"},"nodeType":"YulFunctionCall","src":"14833:30:16"},"nodeType":"YulIf","src":"14830:117:16"},{"nodeType":"YulAssignment","src":"14961:72:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15005:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"15016:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15001:3:16"},"nodeType":"YulFunctionCall","src":"15001:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15025:7:16"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14971:29:16"},"nodeType":"YulFunctionCall","src":"14971:62:16"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14961:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14179:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14190:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14202:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14210:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14218:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14226:6:16","type":""}],"src":"14107:943:16"},{"body":{"nodeType":"YulBlock","src":"15139:391:16","statements":[{"body":{"nodeType":"YulBlock","src":"15185:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15187:77:16"},"nodeType":"YulFunctionCall","src":"15187:79:16"},"nodeType":"YulExpressionStatement","src":"15187:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15160:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"15169:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15156:3:16"},"nodeType":"YulFunctionCall","src":"15156:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"15181:2:16","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15152:3:16"},"nodeType":"YulFunctionCall","src":"15152:32:16"},"nodeType":"YulIf","src":"15149:119:16"},{"nodeType":"YulBlock","src":"15278:117:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15293:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"15307:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15297:6:16","type":""}]},{"nodeType":"YulAssignment","src":"15322:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15357:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"15368:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15353:3:16"},"nodeType":"YulFunctionCall","src":"15353:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15377:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15332:20:16"},"nodeType":"YulFunctionCall","src":"15332:53:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15322:6:16"}]}]},{"nodeType":"YulBlock","src":"15405:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"15420:16:16","value":{"kind":"number","nodeType":"YulLiteral","src":"15434:2:16","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15424:6:16","type":""}]},{"nodeType":"YulAssignment","src":"15450:63:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15485:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"15496:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15481:3:16"},"nodeType":"YulFunctionCall","src":"15481:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15505:7:16"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15460:20:16"},"nodeType":"YulFunctionCall","src":"15460:53:16"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15450:6:16"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15101:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15112:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15124:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15132:6:16","type":""}],"src":"15056:474:16"},{"body":{"nodeType":"YulBlock","src":"15564:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15581:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15584:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15574:6:16"},"nodeType":"YulFunctionCall","src":"15574:88:16"},"nodeType":"YulExpressionStatement","src":"15574:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15678:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15681:4:16","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15671:6:16"},"nodeType":"YulFunctionCall","src":"15671:15:16"},"nodeType":"YulExpressionStatement","src":"15671:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15702:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15705:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15695:6:16"},"nodeType":"YulFunctionCall","src":"15695:15:16"},"nodeType":"YulExpressionStatement","src":"15695:15:16"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"15536:180:16"},{"body":{"nodeType":"YulBlock","src":"15773:269:16","statements":[{"nodeType":"YulAssignment","src":"15783:22:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15797:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"15803:1:16","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15793:3:16"},"nodeType":"YulFunctionCall","src":"15793:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15783:6:16"}]},{"nodeType":"YulVariableDeclaration","src":"15814:38:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15844:4:16"},{"kind":"number","nodeType":"YulLiteral","src":"15850:1:16","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15840:3:16"},"nodeType":"YulFunctionCall","src":"15840:12:16"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15818:18:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"15891:51:16","statements":[{"nodeType":"YulAssignment","src":"15905:27:16","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15919:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15927:4:16","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15915:3:16"},"nodeType":"YulFunctionCall","src":"15915:17:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15905:6:16"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15871:18:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15864:6:16"},"nodeType":"YulFunctionCall","src":"15864:26:16"},"nodeType":"YulIf","src":"15861:81:16"},{"body":{"nodeType":"YulBlock","src":"15994:42:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"16008:16:16"},"nodeType":"YulFunctionCall","src":"16008:18:16"},"nodeType":"YulExpressionStatement","src":"16008:18:16"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15958:18:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15981:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"15989:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15978:2:16"},"nodeType":"YulFunctionCall","src":"15978:14:16"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15955:2:16"},"nodeType":"YulFunctionCall","src":"15955:38:16"},"nodeType":"YulIf","src":"15952:84:16"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15757:4:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15766:6:16","type":""}],"src":"15722:320:16"},{"body":{"nodeType":"YulBlock","src":"16154:125:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16176:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16184:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16172:3:16"},"nodeType":"YulFunctionCall","src":"16172:14:16"},{"hexValue":"4552433732313a20617070726f76656420717565727920666f72206e6f6e6578","kind":"string","nodeType":"YulLiteral","src":"16188:34:16","type":"","value":"ERC721: approved query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16165:6:16"},"nodeType":"YulFunctionCall","src":"16165:58:16"},"nodeType":"YulExpressionStatement","src":"16165:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16244:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"16252:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16240:3:16"},"nodeType":"YulFunctionCall","src":"16240:15:16"},{"hexValue":"697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"16257:14:16","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16233:6:16"},"nodeType":"YulFunctionCall","src":"16233:39:16"},"nodeType":"YulExpressionStatement","src":"16233:39:16"}]},"name":"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16146:6:16","type":""}],"src":"16048:231:16"},{"body":{"nodeType":"YulBlock","src":"16431:220:16","statements":[{"nodeType":"YulAssignment","src":"16441:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16507:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16512:2:16","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16448:58:16"},"nodeType":"YulFunctionCall","src":"16448:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16441:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16613:3:16"}],"functionName":{"name":"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d","nodeType":"YulIdentifier","src":"16524:88:16"},"nodeType":"YulFunctionCall","src":"16524:93:16"},"nodeType":"YulExpressionStatement","src":"16524:93:16"},{"nodeType":"YulAssignment","src":"16626:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16637:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"16642:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16633:3:16"},"nodeType":"YulFunctionCall","src":"16633:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16626:3:16"}]}]},"name":"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16419:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16427:3:16","type":""}],"src":"16285:366:16"},{"body":{"nodeType":"YulBlock","src":"16828:248:16","statements":[{"nodeType":"YulAssignment","src":"16838:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16850:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16861:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16846:3:16"},"nodeType":"YulFunctionCall","src":"16846:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16838:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16885:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"16896:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16881:3:16"},"nodeType":"YulFunctionCall","src":"16881:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16904:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"16910:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16900:3:16"},"nodeType":"YulFunctionCall","src":"16900:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16874:6:16"},"nodeType":"YulFunctionCall","src":"16874:47:16"},"nodeType":"YulExpressionStatement","src":"16874:47:16"},{"nodeType":"YulAssignment","src":"16930:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17064:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16938:124:16"},"nodeType":"YulFunctionCall","src":"16938:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16930:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16808:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16823:4:16","type":""}],"src":"16657:419:16"},{"body":{"nodeType":"YulBlock","src":"17188:114:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17210:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"17218:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17206:3:16"},"nodeType":"YulFunctionCall","src":"17206:14:16"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"17222:34:16","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17199:6:16"},"nodeType":"YulFunctionCall","src":"17199:58:16"},"nodeType":"YulExpressionStatement","src":"17199:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17278:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"17286:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17274:3:16"},"nodeType":"YulFunctionCall","src":"17274:15:16"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"17291:3:16","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17267:6:16"},"nodeType":"YulFunctionCall","src":"17267:28:16"},"nodeType":"YulExpressionStatement","src":"17267:28:16"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17180:6:16","type":""}],"src":"17082:220:16"},{"body":{"nodeType":"YulBlock","src":"17454:220:16","statements":[{"nodeType":"YulAssignment","src":"17464:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17530:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17535:2:16","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17471:58:16"},"nodeType":"YulFunctionCall","src":"17471:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17464:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17636:3:16"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"17547:88:16"},"nodeType":"YulFunctionCall","src":"17547:93:16"},"nodeType":"YulExpressionStatement","src":"17547:93:16"},{"nodeType":"YulAssignment","src":"17649:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17660:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"17665:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17656:3:16"},"nodeType":"YulFunctionCall","src":"17656:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17649:3:16"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17442:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17450:3:16","type":""}],"src":"17308:366:16"},{"body":{"nodeType":"YulBlock","src":"17851:248:16","statements":[{"nodeType":"YulAssignment","src":"17861:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17873:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17884:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17869:3:16"},"nodeType":"YulFunctionCall","src":"17869:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17861:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17908:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"17919:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17904:3:16"},"nodeType":"YulFunctionCall","src":"17904:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17927:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"17933:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17923:3:16"},"nodeType":"YulFunctionCall","src":"17923:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17897:6:16"},"nodeType":"YulFunctionCall","src":"17897:47:16"},"nodeType":"YulExpressionStatement","src":"17897:47:16"},{"nodeType":"YulAssignment","src":"17953:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18087:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17961:124:16"},"nodeType":"YulFunctionCall","src":"17961:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17953:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17831:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17846:4:16","type":""}],"src":"17680:419:16"},{"body":{"nodeType":"YulBlock","src":"18211:137:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18233:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"18241:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18229:3:16"},"nodeType":"YulFunctionCall","src":"18229:14:16"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77","kind":"string","nodeType":"YulLiteral","src":"18245:34:16","type":"","value":"ERC721: approve caller is not ow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18222:6:16"},"nodeType":"YulFunctionCall","src":"18222:58:16"},"nodeType":"YulExpressionStatement","src":"18222:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18301:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"18309:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18297:3:16"},"nodeType":"YulFunctionCall","src":"18297:15:16"},{"hexValue":"6e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"18314:26:16","type":"","value":"ner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18290:6:16"},"nodeType":"YulFunctionCall","src":"18290:51:16"},"nodeType":"YulExpressionStatement","src":"18290:51:16"}]},"name":"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18203:6:16","type":""}],"src":"18105:243:16"},{"body":{"nodeType":"YulBlock","src":"18500:220:16","statements":[{"nodeType":"YulAssignment","src":"18510:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18576:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18581:2:16","type":"","value":"56"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18517:58:16"},"nodeType":"YulFunctionCall","src":"18517:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18510:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18682:3:16"}],"functionName":{"name":"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d","nodeType":"YulIdentifier","src":"18593:88:16"},"nodeType":"YulFunctionCall","src":"18593:93:16"},"nodeType":"YulExpressionStatement","src":"18593:93:16"},{"nodeType":"YulAssignment","src":"18695:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18706:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"18711:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18702:3:16"},"nodeType":"YulFunctionCall","src":"18702:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18695:3:16"}]}]},"name":"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18488:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18496:3:16","type":""}],"src":"18354:366:16"},{"body":{"nodeType":"YulBlock","src":"18897:248:16","statements":[{"nodeType":"YulAssignment","src":"18907:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18919:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18930:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18915:3:16"},"nodeType":"YulFunctionCall","src":"18915:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18907:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18954:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"18965:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18950:3:16"},"nodeType":"YulFunctionCall","src":"18950:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18973:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"18979:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18969:3:16"},"nodeType":"YulFunctionCall","src":"18969:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18943:6:16"},"nodeType":"YulFunctionCall","src":"18943:47:16"},"nodeType":"YulExpressionStatement","src":"18943:47:16"},{"nodeType":"YulAssignment","src":"18999:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19133:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19007:124:16"},"nodeType":"YulFunctionCall","src":"19007:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18999:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18877:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18892:4:16","type":""}],"src":"18726:419:16"},{"body":{"nodeType":"YulBlock","src":"19277:206:16","statements":[{"nodeType":"YulAssignment","src":"19287:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19299:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19310:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19295:3:16"},"nodeType":"YulFunctionCall","src":"19295:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19287:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19367:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19380:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19391:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19376:3:16"},"nodeType":"YulFunctionCall","src":"19376:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19323:43:16"},"nodeType":"YulFunctionCall","src":"19323:71:16"},"nodeType":"YulExpressionStatement","src":"19323:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19448:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19461:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"19472:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19457:3:16"},"nodeType":"YulFunctionCall","src":"19457:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19404:43:16"},"nodeType":"YulFunctionCall","src":"19404:72:16"},"nodeType":"YulExpressionStatement","src":"19404:72:16"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19241:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19253:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19261:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19272:4:16","type":""}],"src":"19151:332:16"},{"body":{"nodeType":"YulBlock","src":"19595:130:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19617:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"19625:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19613:3:16"},"nodeType":"YulFunctionCall","src":"19613:14:16"},{"hexValue":"4552433732313a207472616e736665722063616c6c6572206973206e6f74206f","kind":"string","nodeType":"YulLiteral","src":"19629:34:16","type":"","value":"ERC721: transfer caller is not o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19606:6:16"},"nodeType":"YulFunctionCall","src":"19606:58:16"},"nodeType":"YulExpressionStatement","src":"19606:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19685:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"19693:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19681:3:16"},"nodeType":"YulFunctionCall","src":"19681:15:16"},{"hexValue":"776e6572206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"19698:19:16","type":"","value":"wner nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19674:6:16"},"nodeType":"YulFunctionCall","src":"19674:44:16"},"nodeType":"YulExpressionStatement","src":"19674:44:16"}]},"name":"store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19587:6:16","type":""}],"src":"19489:236:16"},{"body":{"nodeType":"YulBlock","src":"19877:220:16","statements":[{"nodeType":"YulAssignment","src":"19887:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19953:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"19958:2:16","type":"","value":"49"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19894:58:16"},"nodeType":"YulFunctionCall","src":"19894:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19887:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20059:3:16"}],"functionName":{"name":"store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2","nodeType":"YulIdentifier","src":"19970:88:16"},"nodeType":"YulFunctionCall","src":"19970:93:16"},"nodeType":"YulExpressionStatement","src":"19970:93:16"},{"nodeType":"YulAssignment","src":"20072:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20083:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"20088:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20079:3:16"},"nodeType":"YulFunctionCall","src":"20079:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20072:3:16"}]}]},"name":"abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19865:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19873:3:16","type":""}],"src":"19731:366:16"},{"body":{"nodeType":"YulBlock","src":"20274:248:16","statements":[{"nodeType":"YulAssignment","src":"20284:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20296:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20307:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20292:3:16"},"nodeType":"YulFunctionCall","src":"20292:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20284:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20331:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"20342:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20327:3:16"},"nodeType":"YulFunctionCall","src":"20327:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20350:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"20356:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20346:3:16"},"nodeType":"YulFunctionCall","src":"20346:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20320:6:16"},"nodeType":"YulFunctionCall","src":"20320:47:16"},"nodeType":"YulExpressionStatement","src":"20320:47:16"},{"nodeType":"YulAssignment","src":"20376:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20510:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20384:124:16"},"nodeType":"YulFunctionCall","src":"20384:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20376:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20254:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20269:4:16","type":""}],"src":"20103:419:16"},{"body":{"nodeType":"YulBlock","src":"20556:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20573:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20576:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20566:6:16"},"nodeType":"YulFunctionCall","src":"20566:88:16"},"nodeType":"YulExpressionStatement","src":"20566:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20670:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20673:4:16","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20663:6:16"},"nodeType":"YulFunctionCall","src":"20663:15:16"},"nodeType":"YulExpressionStatement","src":"20663:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20694:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20697:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20687:6:16"},"nodeType":"YulFunctionCall","src":"20687:15:16"},"nodeType":"YulExpressionStatement","src":"20687:15:16"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"20528:180:16"},{"body":{"nodeType":"YulBlock","src":"20827:34:16","statements":[{"nodeType":"YulAssignment","src":"20837:18:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"20852:3:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20837:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20799:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"20804:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20815:11:16","type":""}],"src":"20714:147:16"},{"body":{"nodeType":"YulBlock","src":"20973:8:16","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20965:6:16","type":""}],"src":"20867:114:16"},{"body":{"nodeType":"YulBlock","src":"21150:235:16","statements":[{"nodeType":"YulAssignment","src":"21160:90:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21243:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"21248:1:16","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21167:75:16"},"nodeType":"YulFunctionCall","src":"21167:83:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21160:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21348:3:16"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"21259:88:16"},"nodeType":"YulFunctionCall","src":"21259:93:16"},"nodeType":"YulExpressionStatement","src":"21259:93:16"},{"nodeType":"YulAssignment","src":"21361:18:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21372:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"21377:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21368:3:16"},"nodeType":"YulFunctionCall","src":"21368:11:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21361:3:16"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21138:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21146:3:16","type":""}],"src":"20987:398:16"},{"body":{"nodeType":"YulBlock","src":"21579:191:16","statements":[{"nodeType":"YulAssignment","src":"21590:154:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21740:3:16"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"21597:141:16"},"nodeType":"YulFunctionCall","src":"21597:147:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21590:3:16"}]},{"nodeType":"YulAssignment","src":"21754:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"21761:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21754:3:16"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21566:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21575:3:16","type":""}],"src":"21391:379:16"},{"body":{"nodeType":"YulBlock","src":"21882:122:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21904:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"21912:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21900:3:16"},"nodeType":"YulFunctionCall","src":"21900:14:16"},{"hexValue":"4552433732313a206f776e657220717565727920666f72206e6f6e6578697374","kind":"string","nodeType":"YulLiteral","src":"21916:34:16","type":"","value":"ERC721: owner query for nonexist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21893:6:16"},"nodeType":"YulFunctionCall","src":"21893:58:16"},"nodeType":"YulExpressionStatement","src":"21893:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21972:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"21980:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21968:3:16"},"nodeType":"YulFunctionCall","src":"21968:15:16"},{"hexValue":"656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"21985:11:16","type":"","value":"ent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21961:6:16"},"nodeType":"YulFunctionCall","src":"21961:36:16"},"nodeType":"YulExpressionStatement","src":"21961:36:16"}]},"name":"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21874:6:16","type":""}],"src":"21776:228:16"},{"body":{"nodeType":"YulBlock","src":"22156:220:16","statements":[{"nodeType":"YulAssignment","src":"22166:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22232:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"22237:2:16","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22173:58:16"},"nodeType":"YulFunctionCall","src":"22173:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22166:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22338:3:16"}],"functionName":{"name":"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397","nodeType":"YulIdentifier","src":"22249:88:16"},"nodeType":"YulFunctionCall","src":"22249:93:16"},"nodeType":"YulExpressionStatement","src":"22249:93:16"},{"nodeType":"YulAssignment","src":"22351:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22362:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"22367:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22358:3:16"},"nodeType":"YulFunctionCall","src":"22358:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22351:3:16"}]}]},"name":"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22144:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22152:3:16","type":""}],"src":"22010:366:16"},{"body":{"nodeType":"YulBlock","src":"22553:248:16","statements":[{"nodeType":"YulAssignment","src":"22563:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22575:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22586:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22571:3:16"},"nodeType":"YulFunctionCall","src":"22571:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22563:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22610:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"22621:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22606:3:16"},"nodeType":"YulFunctionCall","src":"22606:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22629:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"22635:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22625:3:16"},"nodeType":"YulFunctionCall","src":"22625:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22599:6:16"},"nodeType":"YulFunctionCall","src":"22599:47:16"},"nodeType":"YulExpressionStatement","src":"22599:47:16"},{"nodeType":"YulAssignment","src":"22655:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22789:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22663:124:16"},"nodeType":"YulFunctionCall","src":"22663:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22655:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22533:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22548:4:16","type":""}],"src":"22382:419:16"},{"body":{"nodeType":"YulBlock","src":"22913:123:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22935:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"22943:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22931:3:16"},"nodeType":"YulFunctionCall","src":"22931:14:16"},{"hexValue":"4552433732313a2062616c616e636520717565727920666f7220746865207a65","kind":"string","nodeType":"YulLiteral","src":"22947:34:16","type":"","value":"ERC721: balance query for the ze"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22924:6:16"},"nodeType":"YulFunctionCall","src":"22924:58:16"},"nodeType":"YulExpressionStatement","src":"22924:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23003:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"23011:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22999:3:16"},"nodeType":"YulFunctionCall","src":"22999:15:16"},{"hexValue":"726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"23016:12:16","type":"","value":"ro address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22992:6:16"},"nodeType":"YulFunctionCall","src":"22992:37:16"},"nodeType":"YulExpressionStatement","src":"22992:37:16"}]},"name":"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22905:6:16","type":""}],"src":"22807:229:16"},{"body":{"nodeType":"YulBlock","src":"23188:220:16","statements":[{"nodeType":"YulAssignment","src":"23198:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23264:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"23269:2:16","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23205:58:16"},"nodeType":"YulFunctionCall","src":"23205:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23198:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23370:3:16"}],"functionName":{"name":"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba","nodeType":"YulIdentifier","src":"23281:88:16"},"nodeType":"YulFunctionCall","src":"23281:93:16"},"nodeType":"YulExpressionStatement","src":"23281:93:16"},{"nodeType":"YulAssignment","src":"23383:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23394:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"23399:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23390:3:16"},"nodeType":"YulFunctionCall","src":"23390:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23383:3:16"}]}]},"name":"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23176:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23184:3:16","type":""}],"src":"23042:366:16"},{"body":{"nodeType":"YulBlock","src":"23585:248:16","statements":[{"nodeType":"YulAssignment","src":"23595:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23607:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23618:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23603:3:16"},"nodeType":"YulFunctionCall","src":"23603:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23595:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23642:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"23653:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23638:3:16"},"nodeType":"YulFunctionCall","src":"23638:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23661:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"23667:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23657:3:16"},"nodeType":"YulFunctionCall","src":"23657:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23631:6:16"},"nodeType":"YulFunctionCall","src":"23631:47:16"},"nodeType":"YulExpressionStatement","src":"23631:47:16"},{"nodeType":"YulAssignment","src":"23687:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23821:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23695:124:16"},"nodeType":"YulFunctionCall","src":"23695:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23687:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23565:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23580:4:16","type":""}],"src":"23414:419:16"},{"body":{"nodeType":"YulBlock","src":"23945:66:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23967:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"23975:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23963:3:16"},"nodeType":"YulFunctionCall","src":"23963:14:16"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nodeType":"YulLiteral","src":"23979:24:16","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23956:6:16"},"nodeType":"YulFunctionCall","src":"23956:48:16"},"nodeType":"YulExpressionStatement","src":"23956:48:16"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23937:6:16","type":""}],"src":"23839:172:16"},{"body":{"nodeType":"YulBlock","src":"24163:220:16","statements":[{"nodeType":"YulAssignment","src":"24173:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24239:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"24244:2:16","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24180:58:16"},"nodeType":"YulFunctionCall","src":"24180:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24173:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24345:3:16"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nodeType":"YulIdentifier","src":"24256:88:16"},"nodeType":"YulFunctionCall","src":"24256:93:16"},"nodeType":"YulExpressionStatement","src":"24256:93:16"},{"nodeType":"YulAssignment","src":"24358:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24369:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"24374:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24365:3:16"},"nodeType":"YulFunctionCall","src":"24365:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24358:3:16"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24151:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24159:3:16","type":""}],"src":"24017:366:16"},{"body":{"nodeType":"YulBlock","src":"24560:248:16","statements":[{"nodeType":"YulAssignment","src":"24570:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24582:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24593:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24578:3:16"},"nodeType":"YulFunctionCall","src":"24578:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24570:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24617:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"24628:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24613:3:16"},"nodeType":"YulFunctionCall","src":"24613:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24636:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"24642:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24632:3:16"},"nodeType":"YulFunctionCall","src":"24632:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24606:6:16"},"nodeType":"YulFunctionCall","src":"24606:47:16"},"nodeType":"YulExpressionStatement","src":"24606:47:16"},{"nodeType":"YulAssignment","src":"24662:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24796:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24670:124:16"},"nodeType":"YulFunctionCall","src":"24670:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24662:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24540:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24555:4:16","type":""}],"src":"24389:419:16"},{"body":{"nodeType":"YulBlock","src":"24920:69:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24942:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"24950:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24938:3:16"},"nodeType":"YulFunctionCall","src":"24938:14:16"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"24954:27:16","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24931:6:16"},"nodeType":"YulFunctionCall","src":"24931:51:16"},"nodeType":"YulExpressionStatement","src":"24931:51:16"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24912:6:16","type":""}],"src":"24814:175:16"},{"body":{"nodeType":"YulBlock","src":"25141:220:16","statements":[{"nodeType":"YulAssignment","src":"25151:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25217:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"25222:2:16","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25158:58:16"},"nodeType":"YulFunctionCall","src":"25158:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25151:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25323:3:16"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"25234:88:16"},"nodeType":"YulFunctionCall","src":"25234:93:16"},"nodeType":"YulExpressionStatement","src":"25234:93:16"},{"nodeType":"YulAssignment","src":"25336:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25347:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"25352:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25343:3:16"},"nodeType":"YulFunctionCall","src":"25343:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25336:3:16"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25129:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25137:3:16","type":""}],"src":"24995:366:16"},{"body":{"nodeType":"YulBlock","src":"25538:248:16","statements":[{"nodeType":"YulAssignment","src":"25548:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25560:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25571:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25556:3:16"},"nodeType":"YulFunctionCall","src":"25556:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25548:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25595:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"25606:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25591:3:16"},"nodeType":"YulFunctionCall","src":"25591:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25614:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"25620:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25610:3:16"},"nodeType":"YulFunctionCall","src":"25610:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25584:6:16"},"nodeType":"YulFunctionCall","src":"25584:47:16"},"nodeType":"YulExpressionStatement","src":"25584:47:16"},{"nodeType":"YulAssignment","src":"25640:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25774:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25648:124:16"},"nodeType":"YulFunctionCall","src":"25648:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25640:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25518:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25533:4:16","type":""}],"src":"25367:419:16"},{"body":{"nodeType":"YulBlock","src":"25820:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25837:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25840:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25830:6:16"},"nodeType":"YulFunctionCall","src":"25830:88:16"},"nodeType":"YulExpressionStatement","src":"25830:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25934:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25937:4:16","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25927:6:16"},"nodeType":"YulFunctionCall","src":"25927:15:16"},"nodeType":"YulExpressionStatement","src":"25927:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25958:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25961:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25951:6:16"},"nodeType":"YulFunctionCall","src":"25951:15:16"},"nodeType":"YulExpressionStatement","src":"25951:15:16"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"25792:180:16"},{"body":{"nodeType":"YulBlock","src":"26022:147:16","statements":[{"nodeType":"YulAssignment","src":"26032:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26055:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26037:17:16"},"nodeType":"YulFunctionCall","src":"26037:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26032:1:16"}]},{"nodeType":"YulAssignment","src":"26066:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26089:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26071:17:16"},"nodeType":"YulFunctionCall","src":"26071:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26066:1:16"}]},{"nodeType":"YulAssignment","src":"26100:16:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26111:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"26114:1:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26107:3:16"},"nodeType":"YulFunctionCall","src":"26107:9:16"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"26100:3:16"}]},{"body":{"nodeType":"YulBlock","src":"26140:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26142:16:16"},"nodeType":"YulFunctionCall","src":"26142:18:16"},"nodeType":"YulExpressionStatement","src":"26142:18:16"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26132:1:16"},{"name":"sum","nodeType":"YulIdentifier","src":"26135:3:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26129:2:16"},"nodeType":"YulFunctionCall","src":"26129:10:16"},"nodeType":"YulIf","src":"26126:36:16"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26009:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"26012:1:16","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"26018:3:16","type":""}],"src":"25978:191:16"},{"body":{"nodeType":"YulBlock","src":"26218:190:16","statements":[{"nodeType":"YulAssignment","src":"26228:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26255:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26237:17:16"},"nodeType":"YulFunctionCall","src":"26237:24:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"26228:5:16"}]},{"body":{"nodeType":"YulBlock","src":"26351:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26353:16:16"},"nodeType":"YulFunctionCall","src":"26353:18:16"},"nodeType":"YulExpressionStatement","src":"26353:18:16"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26276:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"26283:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26273:2:16"},"nodeType":"YulFunctionCall","src":"26273:77:16"},"nodeType":"YulIf","src":"26270:103:16"},{"nodeType":"YulAssignment","src":"26382:20:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26393:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"26400:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26389:3:16"},"nodeType":"YulFunctionCall","src":"26389:13:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"26382:3:16"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26204:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"26214:3:16","type":""}],"src":"26175:233:16"},{"body":{"nodeType":"YulBlock","src":"26459:32:16","statements":[{"nodeType":"YulAssignment","src":"26469:16:16","value":{"name":"value","nodeType":"YulIdentifier","src":"26480:5:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26469:7:16"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26441:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26451:7:16","type":""}],"src":"26414:77:16"},{"body":{"nodeType":"YulBlock","src":"26562:53:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26579:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26602:5:16"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"26584:17:16"},"nodeType":"YulFunctionCall","src":"26584:24:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26572:6:16"},"nodeType":"YulFunctionCall","src":"26572:37:16"},"nodeType":"YulExpressionStatement","src":"26572:37:16"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26550:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26557:3:16","type":""}],"src":"26497:118:16"},{"body":{"nodeType":"YulBlock","src":"26665:57:16","statements":[{"nodeType":"YulAssignment","src":"26675:41:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26690:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"26697:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26686:3:16"},"nodeType":"YulFunctionCall","src":"26686:30:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26675:7:16"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26647:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26657:7:16","type":""}],"src":"26621:101:16"},{"body":{"nodeType":"YulBlock","src":"26791:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26808:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26830:5:16"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"26813:16:16"},"nodeType":"YulFunctionCall","src":"26813:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26801:6:16"},"nodeType":"YulFunctionCall","src":"26801:36:16"},"nodeType":"YulExpressionStatement","src":"26801:36:16"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26779:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"26786:3:16","type":""}],"src":"26728:115:16"},{"body":{"nodeType":"YulBlock","src":"26893:45:16","statements":[{"nodeType":"YulAssignment","src":"26903:29:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26918:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"26925:6:16","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26914:3:16"},"nodeType":"YulFunctionCall","src":"26914:18:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26903:7:16"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26875:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26885:7:16","type":""}],"src":"26849:89:16"},{"body":{"nodeType":"YulBlock","src":"27007:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27024:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27046:5:16"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"27029:16:16"},"nodeType":"YulFunctionCall","src":"27029:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27017:6:16"},"nodeType":"YulFunctionCall","src":"27017:36:16"},"nodeType":"YulExpressionStatement","src":"27017:36:16"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26995:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27002:3:16","type":""}],"src":"26944:115:16"},{"body":{"nodeType":"YulBlock","src":"27109:49:16","statements":[{"nodeType":"YulAssignment","src":"27119:33:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27134:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"27141:10:16","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27130:3:16"},"nodeType":"YulFunctionCall","src":"27130:22:16"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"27119:7:16"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27091:5:16","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"27101:7:16","type":""}],"src":"27065:93:16"},{"body":{"nodeType":"YulBlock","src":"27227:52:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27244:3:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27266:5:16"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"27249:16:16"},"nodeType":"YulFunctionCall","src":"27249:23:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27237:6:16"},"nodeType":"YulFunctionCall","src":"27237:36:16"},"nodeType":"YulExpressionStatement","src":"27237:36:16"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27215:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27222:3:16","type":""}],"src":"27164:115:16"},{"body":{"nodeType":"YulBlock","src":"27487:446:16","statements":[{"nodeType":"YulAssignment","src":"27497:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27509:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27520:3:16","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27505:3:16"},"nodeType":"YulFunctionCall","src":"27505:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27497:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27578:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27591:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27602:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27587:3:16"},"nodeType":"YulFunctionCall","src":"27587:17:16"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"27534:43:16"},"nodeType":"YulFunctionCall","src":"27534:71:16"},"nodeType":"YulExpressionStatement","src":"27534:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27657:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27670:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27681:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27666:3:16"},"nodeType":"YulFunctionCall","src":"27666:18:16"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"27615:41:16"},"nodeType":"YulFunctionCall","src":"27615:70:16"},"nodeType":"YulExpressionStatement","src":"27615:70:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27737:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27750:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27761:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27746:3:16"},"nodeType":"YulFunctionCall","src":"27746:18:16"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"27695:41:16"},"nodeType":"YulFunctionCall","src":"27695:70:16"},"nodeType":"YulExpressionStatement","src":"27695:70:16"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27817:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27830:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27841:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27826:3:16"},"nodeType":"YulFunctionCall","src":"27826:18:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"27775:41:16"},"nodeType":"YulFunctionCall","src":"27775:70:16"},"nodeType":"YulExpressionStatement","src":"27775:70:16"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"27897:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27910:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"27921:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27906:3:16"},"nodeType":"YulFunctionCall","src":"27906:19:16"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"27855:41:16"},"nodeType":"YulFunctionCall","src":"27855:71:16"},"nodeType":"YulExpressionStatement","src":"27855:71:16"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27427:9:16","type":""},{"name":"value4","nodeType":"YulTypedName","src":"27439:6:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27447:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27455:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27463:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27471:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27482:4:16","type":""}],"src":"27285:648:16"},{"body":{"nodeType":"YulBlock","src":"28002:80:16","statements":[{"nodeType":"YulAssignment","src":"28012:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28027:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28021:5:16"},"nodeType":"YulFunctionCall","src":"28021:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"28012:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28070:5:16"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"28043:26:16"},"nodeType":"YulFunctionCall","src":"28043:33:16"},"nodeType":"YulExpressionStatement","src":"28043:33:16"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"27980:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"27988:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"27996:5:16","type":""}],"src":"27939:143:16"},{"body":{"nodeType":"YulBlock","src":"28165:274:16","statements":[{"body":{"nodeType":"YulBlock","src":"28211:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28213:77:16"},"nodeType":"YulFunctionCall","src":"28213:79:16"},"nodeType":"YulExpressionStatement","src":"28213:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28186:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"28195:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28182:3:16"},"nodeType":"YulFunctionCall","src":"28182:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"28207:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28178:3:16"},"nodeType":"YulFunctionCall","src":"28178:32:16"},"nodeType":"YulIf","src":"28175:119:16"},{"nodeType":"YulBlock","src":"28304:128:16","statements":[{"nodeType":"YulVariableDeclaration","src":"28319:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"28333:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28323:6:16","type":""}]},{"nodeType":"YulAssignment","src":"28348:74:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28394:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"28405:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28390:3:16"},"nodeType":"YulFunctionCall","src":"28390:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28414:7:16"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"28358:31:16"},"nodeType":"YulFunctionCall","src":"28358:64:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28348:6:16"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28135:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28146:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28158:6:16","type":""}],"src":"28088:351:16"},{"body":{"nodeType":"YulBlock","src":"28551:130:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28573:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"28581:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28569:3:16"},"nodeType":"YulFunctionCall","src":"28569:14:16"},{"hexValue":"45524337323155524953746f726167653a2055524920717565727920666f7220","kind":"string","nodeType":"YulLiteral","src":"28585:34:16","type":"","value":"ERC721URIStorage: URI query for "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28562:6:16"},"nodeType":"YulFunctionCall","src":"28562:58:16"},"nodeType":"YulExpressionStatement","src":"28562:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28641:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"28649:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28637:3:16"},"nodeType":"YulFunctionCall","src":"28637:15:16"},{"hexValue":"6e6f6e6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"28654:19:16","type":"","value":"nonexistent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28630:6:16"},"nodeType":"YulFunctionCall","src":"28630:44:16"},"nodeType":"YulExpressionStatement","src":"28630:44:16"}]},"name":"store_literal_in_memory_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28543:6:16","type":""}],"src":"28445:236:16"},{"body":{"nodeType":"YulBlock","src":"28833:220:16","statements":[{"nodeType":"YulAssignment","src":"28843:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28909:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"28914:2:16","type":"","value":"49"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28850:58:16"},"nodeType":"YulFunctionCall","src":"28850:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28843:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29015:3:16"}],"functionName":{"name":"store_literal_in_memory_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a","nodeType":"YulIdentifier","src":"28926:88:16"},"nodeType":"YulFunctionCall","src":"28926:93:16"},"nodeType":"YulExpressionStatement","src":"28926:93:16"},{"nodeType":"YulAssignment","src":"29028:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29039:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"29044:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29035:3:16"},"nodeType":"YulFunctionCall","src":"29035:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29028:3:16"}]}]},"name":"abi_encode_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28821:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28829:3:16","type":""}],"src":"28687:366:16"},{"body":{"nodeType":"YulBlock","src":"29230:248:16","statements":[{"nodeType":"YulAssignment","src":"29240:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29252:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"29263:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29248:3:16"},"nodeType":"YulFunctionCall","src":"29248:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29240:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29287:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"29298:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29283:3:16"},"nodeType":"YulFunctionCall","src":"29283:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29306:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"29312:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29302:3:16"},"nodeType":"YulFunctionCall","src":"29302:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29276:6:16"},"nodeType":"YulFunctionCall","src":"29276:47:16"},"nodeType":"YulExpressionStatement","src":"29276:47:16"},{"nodeType":"YulAssignment","src":"29332:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29466:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29340:124:16"},"nodeType":"YulFunctionCall","src":"29340:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29332:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29210:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29225:4:16","type":""}],"src":"29059:419:16"},{"body":{"nodeType":"YulBlock","src":"29598:34:16","statements":[{"nodeType":"YulAssignment","src":"29608:18:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"29623:3:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"29608:11:16"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29570:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"29575:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"29586:11:16","type":""}],"src":"29484:148:16"},{"body":{"nodeType":"YulBlock","src":"29748:280:16","statements":[{"nodeType":"YulVariableDeclaration","src":"29758:53:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29805:5:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"29772:32:16"},"nodeType":"YulFunctionCall","src":"29772:39:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"29762:6:16","type":""}]},{"nodeType":"YulAssignment","src":"29820:96:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29904:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"29909:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29827:76:16"},"nodeType":"YulFunctionCall","src":"29827:89:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29820:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29964:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"29971:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29960:3:16"},"nodeType":"YulFunctionCall","src":"29960:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"29978:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"29983:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"29925:34:16"},"nodeType":"YulFunctionCall","src":"29925:65:16"},"nodeType":"YulExpressionStatement","src":"29925:65:16"},{"nodeType":"YulAssignment","src":"29999:23:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30010:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"30015:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30006:3:16"},"nodeType":"YulFunctionCall","src":"30006:16:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29999:3:16"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29729:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29736:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29744:3:16","type":""}],"src":"29638:390:16"},{"body":{"nodeType":"YulBlock","src":"30218:251:16","statements":[{"nodeType":"YulAssignment","src":"30229:102:16","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30318:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"30327:3:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"30236:81:16"},"nodeType":"YulFunctionCall","src":"30236:95:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30229:3:16"}]},{"nodeType":"YulAssignment","src":"30341:102:16","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"30430:6:16"},{"name":"pos","nodeType":"YulIdentifier","src":"30439:3:16"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"30348:81:16"},"nodeType":"YulFunctionCall","src":"30348:95:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30341:3:16"}]},{"nodeType":"YulAssignment","src":"30453:10:16","value":{"name":"pos","nodeType":"YulIdentifier","src":"30460:3:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30453:3:16"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30189:3:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30195:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30203:6:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30214:3:16","type":""}],"src":"30034:435:16"},{"body":{"nodeType":"YulBlock","src":"30503:152:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30520:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30523:77:16","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30513:6:16"},"nodeType":"YulFunctionCall","src":"30513:88:16"},"nodeType":"YulExpressionStatement","src":"30513:88:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30617:1:16","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"30620:4:16","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30610:6:16"},"nodeType":"YulFunctionCall","src":"30610:15:16"},"nodeType":"YulExpressionStatement","src":"30610:15:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30641:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30644:4:16","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30634:6:16"},"nodeType":"YulFunctionCall","src":"30634:15:16"},"nodeType":"YulExpressionStatement","src":"30634:15:16"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"30475:180:16"},{"body":{"nodeType":"YulBlock","src":"30695:142:16","statements":[{"nodeType":"YulAssignment","src":"30705:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30728:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30710:17:16"},"nodeType":"YulFunctionCall","src":"30710:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"30705:1:16"}]},{"nodeType":"YulAssignment","src":"30739:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"30762:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30744:17:16"},"nodeType":"YulFunctionCall","src":"30744:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"30739:1:16"}]},{"body":{"nodeType":"YulBlock","src":"30786:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"30788:16:16"},"nodeType":"YulFunctionCall","src":"30788:18:16"},"nodeType":"YulExpressionStatement","src":"30788:18:16"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"30783:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"30776:6:16"},"nodeType":"YulFunctionCall","src":"30776:9:16"},"nodeType":"YulIf","src":"30773:35:16"},{"nodeType":"YulAssignment","src":"30817:14:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30826:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"30829:1:16"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"30822:3:16"},"nodeType":"YulFunctionCall","src":"30822:9:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"30817:1:16"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"30684:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"30687:1:16","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"30693:1:16","type":""}],"src":"30661:176:16"},{"body":{"nodeType":"YulBlock","src":"30977:214:16","statements":[{"nodeType":"YulAssignment","src":"30987:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30999:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"31010:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30995:3:16"},"nodeType":"YulFunctionCall","src":"30995:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30987:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31075:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31088:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"31099:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31084:3:16"},"nodeType":"YulFunctionCall","src":"31084:17:16"}],"functionName":{"name":"abi_encode_t_enum$_Breed_$2036_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"31023:51:16"},"nodeType":"YulFunctionCall","src":"31023:79:16"},"nodeType":"YulExpressionStatement","src":"31023:79:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31156:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31169:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"31180:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31165:3:16"},"nodeType":"YulFunctionCall","src":"31165:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31112:43:16"},"nodeType":"YulFunctionCall","src":"31112:72:16"},"nodeType":"YulExpressionStatement","src":"31112:72:16"}]},"name":"abi_encode_tuple_t_enum$_Breed_$2036_t_address__to_t_uint8_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30941:9:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30953:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30961:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30972:4:16","type":""}],"src":"30843:348:16"},{"body":{"nodeType":"YulBlock","src":"31303:125:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31325:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"31333:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31321:3:16"},"nodeType":"YulFunctionCall","src":"31321:14:16"},{"hexValue":"4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578","kind":"string","nodeType":"YulLiteral","src":"31337:34:16","type":"","value":"ERC721: operator query for nonex"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31314:6:16"},"nodeType":"YulFunctionCall","src":"31314:58:16"},"nodeType":"YulExpressionStatement","src":"31314:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31393:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"31401:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31389:3:16"},"nodeType":"YulFunctionCall","src":"31389:15:16"},{"hexValue":"697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"31406:14:16","type":"","value":"istent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31382:6:16"},"nodeType":"YulFunctionCall","src":"31382:39:16"},"nodeType":"YulExpressionStatement","src":"31382:39:16"}]},"name":"store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31295:6:16","type":""}],"src":"31197:231:16"},{"body":{"nodeType":"YulBlock","src":"31580:220:16","statements":[{"nodeType":"YulAssignment","src":"31590:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31656:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"31661:2:16","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31597:58:16"},"nodeType":"YulFunctionCall","src":"31597:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31590:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31762:3:16"}],"functionName":{"name":"store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c","nodeType":"YulIdentifier","src":"31673:88:16"},"nodeType":"YulFunctionCall","src":"31673:93:16"},"nodeType":"YulExpressionStatement","src":"31673:93:16"},{"nodeType":"YulAssignment","src":"31775:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31786:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"31791:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31782:3:16"},"nodeType":"YulFunctionCall","src":"31782:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31775:3:16"}]}]},"name":"abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31568:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31576:3:16","type":""}],"src":"31434:366:16"},{"body":{"nodeType":"YulBlock","src":"31977:248:16","statements":[{"nodeType":"YulAssignment","src":"31987:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31999:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"32010:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31995:3:16"},"nodeType":"YulFunctionCall","src":"31995:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31987:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32034:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"32045:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32030:3:16"},"nodeType":"YulFunctionCall","src":"32030:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32053:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"32059:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32049:3:16"},"nodeType":"YulFunctionCall","src":"32049:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32023:6:16"},"nodeType":"YulFunctionCall","src":"32023:47:16"},"nodeType":"YulExpressionStatement","src":"32023:47:16"},{"nodeType":"YulAssignment","src":"32079:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32213:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32087:124:16"},"nodeType":"YulFunctionCall","src":"32087:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32079:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31957:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31972:4:16","type":""}],"src":"31806:419:16"},{"body":{"nodeType":"YulBlock","src":"32337:122:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32359:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"32367:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32355:3:16"},"nodeType":"YulFunctionCall","src":"32355:14:16"},{"hexValue":"4552433732313a207472616e73666572206f6620746f6b656e20746861742069","kind":"string","nodeType":"YulLiteral","src":"32371:34:16","type":"","value":"ERC721: transfer of token that i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32348:6:16"},"nodeType":"YulFunctionCall","src":"32348:58:16"},"nodeType":"YulExpressionStatement","src":"32348:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32427:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"32435:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32423:3:16"},"nodeType":"YulFunctionCall","src":"32423:15:16"},{"hexValue":"73206e6f74206f776e","kind":"string","nodeType":"YulLiteral","src":"32440:11:16","type":"","value":"s not own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32416:6:16"},"nodeType":"YulFunctionCall","src":"32416:36:16"},"nodeType":"YulExpressionStatement","src":"32416:36:16"}]},"name":"store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32329:6:16","type":""}],"src":"32231:228:16"},{"body":{"nodeType":"YulBlock","src":"32611:220:16","statements":[{"nodeType":"YulAssignment","src":"32621:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32687:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"32692:2:16","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32628:58:16"},"nodeType":"YulFunctionCall","src":"32628:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32621:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32793:3:16"}],"functionName":{"name":"store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950","nodeType":"YulIdentifier","src":"32704:88:16"},"nodeType":"YulFunctionCall","src":"32704:93:16"},"nodeType":"YulExpressionStatement","src":"32704:93:16"},{"nodeType":"YulAssignment","src":"32806:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32817:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"32822:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32813:3:16"},"nodeType":"YulFunctionCall","src":"32813:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32806:3:16"}]}]},"name":"abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32599:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32607:3:16","type":""}],"src":"32465:366:16"},{"body":{"nodeType":"YulBlock","src":"33008:248:16","statements":[{"nodeType":"YulAssignment","src":"33018:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33030:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"33041:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33026:3:16"},"nodeType":"YulFunctionCall","src":"33026:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33018:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33065:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"33076:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33061:3:16"},"nodeType":"YulFunctionCall","src":"33061:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33084:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"33090:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33080:3:16"},"nodeType":"YulFunctionCall","src":"33080:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33054:6:16"},"nodeType":"YulFunctionCall","src":"33054:47:16"},"nodeType":"YulExpressionStatement","src":"33054:47:16"},{"nodeType":"YulAssignment","src":"33110:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33244:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33118:124:16"},"nodeType":"YulFunctionCall","src":"33118:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33110:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32988:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33003:4:16","type":""}],"src":"32837:419:16"},{"body":{"nodeType":"YulBlock","src":"33368:117:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33390:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"33398:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33386:3:16"},"nodeType":"YulFunctionCall","src":"33386:14:16"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"33402:34:16","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33379:6:16"},"nodeType":"YulFunctionCall","src":"33379:58:16"},"nodeType":"YulExpressionStatement","src":"33379:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33458:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"33466:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33454:3:16"},"nodeType":"YulFunctionCall","src":"33454:15:16"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"33471:6:16","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33447:6:16"},"nodeType":"YulFunctionCall","src":"33447:31:16"},"nodeType":"YulExpressionStatement","src":"33447:31:16"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33360:6:16","type":""}],"src":"33262:223:16"},{"body":{"nodeType":"YulBlock","src":"33637:220:16","statements":[{"nodeType":"YulAssignment","src":"33647:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33713:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"33718:2:16","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33654:58:16"},"nodeType":"YulFunctionCall","src":"33654:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33647:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33819:3:16"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"33730:88:16"},"nodeType":"YulFunctionCall","src":"33730:93:16"},"nodeType":"YulExpressionStatement","src":"33730:93:16"},{"nodeType":"YulAssignment","src":"33832:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33843:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"33848:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33839:3:16"},"nodeType":"YulFunctionCall","src":"33839:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33832:3:16"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33625:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33633:3:16","type":""}],"src":"33491:366:16"},{"body":{"nodeType":"YulBlock","src":"34034:248:16","statements":[{"nodeType":"YulAssignment","src":"34044:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34056:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"34067:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34052:3:16"},"nodeType":"YulFunctionCall","src":"34052:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34044:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34091:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"34102:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34087:3:16"},"nodeType":"YulFunctionCall","src":"34087:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34110:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"34116:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34106:3:16"},"nodeType":"YulFunctionCall","src":"34106:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34080:6:16"},"nodeType":"YulFunctionCall","src":"34080:47:16"},"nodeType":"YulExpressionStatement","src":"34080:47:16"},{"nodeType":"YulAssignment","src":"34136:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34270:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34144:124:16"},"nodeType":"YulFunctionCall","src":"34144:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34136:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34014:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34029:4:16","type":""}],"src":"33863:419:16"},{"body":{"nodeType":"YulBlock","src":"34333:149:16","statements":[{"nodeType":"YulAssignment","src":"34343:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34366:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34348:17:16"},"nodeType":"YulFunctionCall","src":"34348:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34343:1:16"}]},{"nodeType":"YulAssignment","src":"34377:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34400:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34382:17:16"},"nodeType":"YulFunctionCall","src":"34382:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34377:1:16"}]},{"nodeType":"YulAssignment","src":"34411:17:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34423:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"34426:1:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34419:3:16"},"nodeType":"YulFunctionCall","src":"34419:9:16"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"34411:4:16"}]},{"body":{"nodeType":"YulBlock","src":"34453:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"34455:16:16"},"nodeType":"YulFunctionCall","src":"34455:18:16"},"nodeType":"YulExpressionStatement","src":"34455:18:16"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"34444:4:16"},{"name":"x","nodeType":"YulIdentifier","src":"34450:1:16"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"34441:2:16"},"nodeType":"YulFunctionCall","src":"34441:11:16"},"nodeType":"YulIf","src":"34438:37:16"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34319:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"34322:1:16","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"34328:4:16","type":""}],"src":"34288:194:16"},{"body":{"nodeType":"YulBlock","src":"34594:66:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34616:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"34624:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34612:3:16"},"nodeType":"YulFunctionCall","src":"34612:14:16"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nodeType":"YulLiteral","src":"34628:24:16","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34605:6:16"},"nodeType":"YulFunctionCall","src":"34605:48:16"},"nodeType":"YulExpressionStatement","src":"34605:48:16"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34586:6:16","type":""}],"src":"34488:172:16"},{"body":{"nodeType":"YulBlock","src":"34812:220:16","statements":[{"nodeType":"YulAssignment","src":"34822:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34888:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"34893:2:16","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34829:58:16"},"nodeType":"YulFunctionCall","src":"34829:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34822:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34994:3:16"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nodeType":"YulIdentifier","src":"34905:88:16"},"nodeType":"YulFunctionCall","src":"34905:93:16"},"nodeType":"YulExpressionStatement","src":"34905:93:16"},{"nodeType":"YulAssignment","src":"35007:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35018:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"35023:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35014:3:16"},"nodeType":"YulFunctionCall","src":"35014:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35007:3:16"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34800:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34808:3:16","type":""}],"src":"34666:366:16"},{"body":{"nodeType":"YulBlock","src":"35209:248:16","statements":[{"nodeType":"YulAssignment","src":"35219:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35231:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"35242:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35227:3:16"},"nodeType":"YulFunctionCall","src":"35227:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35219:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35266:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"35277:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35262:3:16"},"nodeType":"YulFunctionCall","src":"35262:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35285:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"35291:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35281:3:16"},"nodeType":"YulFunctionCall","src":"35281:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35255:6:16"},"nodeType":"YulFunctionCall","src":"35255:47:16"},"nodeType":"YulExpressionStatement","src":"35255:47:16"},{"nodeType":"YulAssignment","src":"35311:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35445:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35319:124:16"},"nodeType":"YulFunctionCall","src":"35319:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35311:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35189:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35204:4:16","type":""}],"src":"35038:419:16"},{"body":{"nodeType":"YulBlock","src":"35569:131:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35591:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"35599:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35587:3:16"},"nodeType":"YulFunctionCall","src":"35587:14:16"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"35603:34:16","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35580:6:16"},"nodeType":"YulFunctionCall","src":"35580:58:16"},"nodeType":"YulExpressionStatement","src":"35580:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35659:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"35667:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35655:3:16"},"nodeType":"YulFunctionCall","src":"35655:15:16"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"35672:20:16","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35648:6:16"},"nodeType":"YulFunctionCall","src":"35648:45:16"},"nodeType":"YulExpressionStatement","src":"35648:45:16"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35561:6:16","type":""}],"src":"35463:237:16"},{"body":{"nodeType":"YulBlock","src":"35852:220:16","statements":[{"nodeType":"YulAssignment","src":"35862:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35928:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"35933:2:16","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35869:58:16"},"nodeType":"YulFunctionCall","src":"35869:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35862:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36034:3:16"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"35945:88:16"},"nodeType":"YulFunctionCall","src":"35945:93:16"},"nodeType":"YulExpressionStatement","src":"35945:93:16"},{"nodeType":"YulAssignment","src":"36047:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36058:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"36063:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36054:3:16"},"nodeType":"YulFunctionCall","src":"36054:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36047:3:16"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35840:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35848:3:16","type":""}],"src":"35706:366:16"},{"body":{"nodeType":"YulBlock","src":"36249:248:16","statements":[{"nodeType":"YulAssignment","src":"36259:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36271:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"36282:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36267:3:16"},"nodeType":"YulFunctionCall","src":"36267:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36259:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36306:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"36317:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36302:3:16"},"nodeType":"YulFunctionCall","src":"36302:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36325:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"36331:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36321:3:16"},"nodeType":"YulFunctionCall","src":"36321:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36295:6:16"},"nodeType":"YulFunctionCall","src":"36295:47:16"},"nodeType":"YulExpressionStatement","src":"36295:47:16"},{"nodeType":"YulAssignment","src":"36351:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36485:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36359:124:16"},"nodeType":"YulFunctionCall","src":"36359:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36351:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36229:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36244:4:16","type":""}],"src":"36078:419:16"},{"body":{"nodeType":"YulBlock","src":"36609:128:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36631:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"36639:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36627:3:16"},"nodeType":"YulFunctionCall","src":"36627:14:16"},{"hexValue":"4552433732314d657461646174613a2055524920717565727920666f72206e6f","kind":"string","nodeType":"YulLiteral","src":"36643:34:16","type":"","value":"ERC721Metadata: URI query for no"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36620:6:16"},"nodeType":"YulFunctionCall","src":"36620:58:16"},"nodeType":"YulExpressionStatement","src":"36620:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36699:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"36707:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36695:3:16"},"nodeType":"YulFunctionCall","src":"36695:15:16"},{"hexValue":"6e6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"36712:17:16","type":"","value":"nexistent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36688:6:16"},"nodeType":"YulFunctionCall","src":"36688:42:16"},"nodeType":"YulExpressionStatement","src":"36688:42:16"}]},"name":"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36601:6:16","type":""}],"src":"36503:234:16"},{"body":{"nodeType":"YulBlock","src":"36889:220:16","statements":[{"nodeType":"YulAssignment","src":"36899:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36965:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"36970:2:16","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36906:58:16"},"nodeType":"YulFunctionCall","src":"36906:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36899:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37071:3:16"}],"functionName":{"name":"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","nodeType":"YulIdentifier","src":"36982:88:16"},"nodeType":"YulFunctionCall","src":"36982:93:16"},"nodeType":"YulExpressionStatement","src":"36982:93:16"},{"nodeType":"YulAssignment","src":"37084:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37095:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"37100:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37091:3:16"},"nodeType":"YulFunctionCall","src":"37091:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37084:3:16"}]}]},"name":"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36877:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36885:3:16","type":""}],"src":"36743:366:16"},{"body":{"nodeType":"YulBlock","src":"37286:248:16","statements":[{"nodeType":"YulAssignment","src":"37296:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37308:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"37319:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37304:3:16"},"nodeType":"YulFunctionCall","src":"37304:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37296:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37343:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"37354:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37339:3:16"},"nodeType":"YulFunctionCall","src":"37339:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37362:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"37368:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37358:3:16"},"nodeType":"YulFunctionCall","src":"37358:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37332:6:16"},"nodeType":"YulFunctionCall","src":"37332:47:16"},"nodeType":"YulExpressionStatement","src":"37332:47:16"},{"nodeType":"YulAssignment","src":"37388:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37522:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37396:124:16"},"nodeType":"YulFunctionCall","src":"37396:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37388:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37266:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37281:4:16","type":""}],"src":"37115:419:16"},{"body":{"nodeType":"YulBlock","src":"37646:67:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37668:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"37676:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37664:3:16"},"nodeType":"YulFunctionCall","src":"37664:14:16"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nodeType":"YulLiteral","src":"37680:25:16","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37657:6:16"},"nodeType":"YulFunctionCall","src":"37657:49:16"},"nodeType":"YulExpressionStatement","src":"37657:49:16"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37638:6:16","type":""}],"src":"37540:173:16"},{"body":{"nodeType":"YulBlock","src":"37865:220:16","statements":[{"nodeType":"YulAssignment","src":"37875:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37941:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"37946:2:16","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37882:58:16"},"nodeType":"YulFunctionCall","src":"37882:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37875:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38047:3:16"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nodeType":"YulIdentifier","src":"37958:88:16"},"nodeType":"YulFunctionCall","src":"37958:93:16"},"nodeType":"YulExpressionStatement","src":"37958:93:16"},{"nodeType":"YulAssignment","src":"38060:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38071:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"38076:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38067:3:16"},"nodeType":"YulFunctionCall","src":"38067:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38060:3:16"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37853:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37861:3:16","type":""}],"src":"37719:366:16"},{"body":{"nodeType":"YulBlock","src":"38262:248:16","statements":[{"nodeType":"YulAssignment","src":"38272:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38284:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"38295:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38280:3:16"},"nodeType":"YulFunctionCall","src":"38280:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38272:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38319:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"38330:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38315:3:16"},"nodeType":"YulFunctionCall","src":"38315:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38338:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"38344:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38334:3:16"},"nodeType":"YulFunctionCall","src":"38334:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38308:6:16"},"nodeType":"YulFunctionCall","src":"38308:47:16"},"nodeType":"YulExpressionStatement","src":"38308:47:16"},{"nodeType":"YulAssignment","src":"38364:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38498:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38372:124:16"},"nodeType":"YulFunctionCall","src":"38372:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38364:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38242:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38257:4:16","type":""}],"src":"38091:419:16"},{"body":{"nodeType":"YulBlock","src":"38622:127:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38644:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"38652:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38640:3:16"},"nodeType":"YulFunctionCall","src":"38640:14:16"},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e","kind":"string","nodeType":"YulLiteral","src":"38656:34:16","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38633:6:16"},"nodeType":"YulFunctionCall","src":"38633:58:16"},"nodeType":"YulExpressionStatement","src":"38633:58:16"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38712:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"38720:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38708:3:16"},"nodeType":"YulFunctionCall","src":"38708:15:16"},{"hexValue":"6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"38725:16:16","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38701:6:16"},"nodeType":"YulFunctionCall","src":"38701:41:16"},"nodeType":"YulExpressionStatement","src":"38701:41:16"}]},"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38614:6:16","type":""}],"src":"38516:233:16"},{"body":{"nodeType":"YulBlock","src":"38901:220:16","statements":[{"nodeType":"YulAssignment","src":"38911:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38977:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"38982:2:16","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38918:58:16"},"nodeType":"YulFunctionCall","src":"38918:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38911:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39083:3:16"}],"functionName":{"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulIdentifier","src":"38994:88:16"},"nodeType":"YulFunctionCall","src":"38994:93:16"},"nodeType":"YulExpressionStatement","src":"38994:93:16"},{"nodeType":"YulAssignment","src":"39096:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39107:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"39112:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39103:3:16"},"nodeType":"YulFunctionCall","src":"39103:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39096:3:16"}]}]},"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38889:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38897:3:16","type":""}],"src":"38755:366:16"},{"body":{"nodeType":"YulBlock","src":"39298:248:16","statements":[{"nodeType":"YulAssignment","src":"39308:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39320:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"39331:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39316:3:16"},"nodeType":"YulFunctionCall","src":"39316:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39308:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39355:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"39366:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39351:3:16"},"nodeType":"YulFunctionCall","src":"39351:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39374:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"39380:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39370:3:16"},"nodeType":"YulFunctionCall","src":"39370:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39344:6:16"},"nodeType":"YulFunctionCall","src":"39344:47:16"},"nodeType":"YulExpressionStatement","src":"39344:47:16"},{"nodeType":"YulAssignment","src":"39400:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39534:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39408:124:16"},"nodeType":"YulFunctionCall","src":"39408:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39400:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39278:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39293:4:16","type":""}],"src":"39127:419:16"},{"body":{"nodeType":"YulBlock","src":"39606:87:16","statements":[{"nodeType":"YulAssignment","src":"39616:11:16","value":{"name":"ptr","nodeType":"YulIdentifier","src":"39624:3:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"39616:4:16"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39644:1:16","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"39647:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39637:6:16"},"nodeType":"YulFunctionCall","src":"39637:14:16"},"nodeType":"YulExpressionStatement","src":"39637:14:16"},{"nodeType":"YulAssignment","src":"39660:26:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39678:1:16","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"39681:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"39668:9:16"},"nodeType":"YulFunctionCall","src":"39668:18:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"39660:4:16"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"39593:3:16","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"39601:4:16","type":""}],"src":"39552:141:16"},{"body":{"nodeType":"YulBlock","src":"39743:49:16","statements":[{"nodeType":"YulAssignment","src":"39753:33:16","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39771:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"39778:2:16","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39767:3:16"},"nodeType":"YulFunctionCall","src":"39767:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"39783:2:16","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"39763:3:16"},"nodeType":"YulFunctionCall","src":"39763:23:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"39753:6:16"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39726:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"39736:6:16","type":""}],"src":"39699:93:16"},{"body":{"nodeType":"YulBlock","src":"39851:54:16","statements":[{"nodeType":"YulAssignment","src":"39861:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"39886:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"39892:5:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"39882:3:16"},"nodeType":"YulFunctionCall","src":"39882:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"39861:8:16"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"39826:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"39832:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"39842:8:16","type":""}],"src":"39798:107:16"},{"body":{"nodeType":"YulBlock","src":"39987:317:16","statements":[{"nodeType":"YulVariableDeclaration","src":"39997:35:16","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"40018:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"40030:1:16","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"40014:3:16"},"nodeType":"YulFunctionCall","src":"40014:18:16"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"40001:9:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"40041:109:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"40072:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"40083:66:16","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"40053:18:16"},"nodeType":"YulFunctionCall","src":"40053:97:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"40045:4:16","type":""}]},{"nodeType":"YulAssignment","src":"40159:51:16","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"40190:9:16"},{"name":"toInsert","nodeType":"YulIdentifier","src":"40201:8:16"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"40171:18:16"},"nodeType":"YulFunctionCall","src":"40171:39:16"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"40159:8:16"}]},{"nodeType":"YulAssignment","src":"40219:30:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40232:5:16"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"40243:4:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"40239:3:16"},"nodeType":"YulFunctionCall","src":"40239:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"40228:3:16"},"nodeType":"YulFunctionCall","src":"40228:21:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"40219:5:16"}]},{"nodeType":"YulAssignment","src":"40258:40:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40271:5:16"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"40282:8:16"},{"name":"mask","nodeType":"YulIdentifier","src":"40292:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"40278:3:16"},"nodeType":"YulFunctionCall","src":"40278:19:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"40268:2:16"},"nodeType":"YulFunctionCall","src":"40268:30:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"40258:6:16"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39948:5:16","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"39955:10:16","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"39967:8:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"39980:6:16","type":""}],"src":"39911:393:16"},{"body":{"nodeType":"YulBlock","src":"40342:28:16","statements":[{"nodeType":"YulAssignment","src":"40352:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"40359:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"40352:3:16"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40328:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"40338:3:16","type":""}],"src":"40310:60:16"},{"body":{"nodeType":"YulBlock","src":"40436:82:16","statements":[{"nodeType":"YulAssignment","src":"40446:66:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40504:5:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40486:17:16"},"nodeType":"YulFunctionCall","src":"40486:24:16"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"40477:8:16"},"nodeType":"YulFunctionCall","src":"40477:34:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40459:17:16"},"nodeType":"YulFunctionCall","src":"40459:53:16"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"40446:9:16"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40416:5:16","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"40426:9:16","type":""}],"src":"40376:142:16"},{"body":{"nodeType":"YulBlock","src":"40571:28:16","statements":[{"nodeType":"YulAssignment","src":"40581:12:16","value":{"name":"value","nodeType":"YulIdentifier","src":"40588:5:16"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"40581:3:16"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40557:5:16","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"40567:3:16","type":""}],"src":"40524:75:16"},{"body":{"nodeType":"YulBlock","src":"40681:193:16","statements":[{"nodeType":"YulVariableDeclaration","src":"40691:63:16","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"40746:7:16"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"40715:30:16"},"nodeType":"YulFunctionCall","src":"40715:39:16"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"40695:16:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"40770:4:16"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"40810:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"40804:5:16"},"nodeType":"YulFunctionCall","src":"40804:11:16"},{"name":"offset","nodeType":"YulIdentifier","src":"40817:6:16"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"40849:16:16"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"40825:23:16"},"nodeType":"YulFunctionCall","src":"40825:41:16"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"40776:27:16"},"nodeType":"YulFunctionCall","src":"40776:91:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"40763:6:16"},"nodeType":"YulFunctionCall","src":"40763:105:16"},"nodeType":"YulExpressionStatement","src":"40763:105:16"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"40658:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"40664:6:16","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"40672:7:16","type":""}],"src":"40605:269:16"},{"body":{"nodeType":"YulBlock","src":"40929:24:16","statements":[{"nodeType":"YulAssignment","src":"40939:8:16","value":{"kind":"number","nodeType":"YulLiteral","src":"40946:1:16","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"40939:3:16"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"40925:3:16","type":""}],"src":"40880:73:16"},{"body":{"nodeType":"YulBlock","src":"41012:136:16","statements":[{"nodeType":"YulVariableDeclaration","src":"41022:46:16","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"41036:30:16"},"nodeType":"YulFunctionCall","src":"41036:32:16"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"41026:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"41121:4:16"},{"name":"offset","nodeType":"YulIdentifier","src":"41127:6:16"},{"name":"zero_0","nodeType":"YulIdentifier","src":"41135:6:16"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"41077:43:16"},"nodeType":"YulFunctionCall","src":"41077:65:16"},"nodeType":"YulExpressionStatement","src":"41077:65:16"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"40998:4:16","type":""},{"name":"offset","nodeType":"YulTypedName","src":"41004:6:16","type":""}],"src":"40959:189:16"},{"body":{"nodeType":"YulBlock","src":"41204:136:16","statements":[{"body":{"nodeType":"YulBlock","src":"41271:63:16","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"41315:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"41322:1:16","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"41285:29:16"},"nodeType":"YulFunctionCall","src":"41285:39:16"},"nodeType":"YulExpressionStatement","src":"41285:39:16"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"41224:5:16"},{"name":"end","nodeType":"YulIdentifier","src":"41231:3:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"41221:2:16"},"nodeType":"YulFunctionCall","src":"41221:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"41236:26:16","statements":[{"nodeType":"YulAssignment","src":"41238:22:16","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"41251:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"41258:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41247:3:16"},"nodeType":"YulFunctionCall","src":"41247:13:16"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"41238:5:16"}]}]},"pre":{"nodeType":"YulBlock","src":"41218:2:16","statements":[]},"src":"41214:120:16"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"41192:5:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"41199:3:16","type":""}],"src":"41154:186:16"},{"body":{"nodeType":"YulBlock","src":"41425:464:16","statements":[{"body":{"nodeType":"YulBlock","src":"41451:431:16","statements":[{"nodeType":"YulVariableDeclaration","src":"41465:54:16","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"41513:5:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"41481:31:16"},"nodeType":"YulFunctionCall","src":"41481:38:16"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"41469:8:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"41532:63:16","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"41555:8:16"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"41583:10:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"41565:17:16"},"nodeType":"YulFunctionCall","src":"41565:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41551:3:16"},"nodeType":"YulFunctionCall","src":"41551:44:16"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"41536:11:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"41752:27:16","statements":[{"nodeType":"YulAssignment","src":"41754:23:16","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"41769:8:16"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"41754:11:16"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"41736:10:16"},{"kind":"number","nodeType":"YulLiteral","src":"41748:2:16","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"41733:2:16"},"nodeType":"YulFunctionCall","src":"41733:18:16"},"nodeType":"YulIf","src":"41730:49:16"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"41821:11:16"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"41838:8:16"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"41866:3:16"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"41848:17:16"},"nodeType":"YulFunctionCall","src":"41848:22:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41834:3:16"},"nodeType":"YulFunctionCall","src":"41834:37:16"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"41792:28:16"},"nodeType":"YulFunctionCall","src":"41792:80:16"},"nodeType":"YulExpressionStatement","src":"41792:80:16"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"41442:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"41447:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"41439:2:16"},"nodeType":"YulFunctionCall","src":"41439:11:16"},"nodeType":"YulIf","src":"41436:446:16"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"41401:5:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"41408:3:16","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"41413:10:16","type":""}],"src":"41346:543:16"},{"body":{"nodeType":"YulBlock","src":"41958:54:16","statements":[{"nodeType":"YulAssignment","src":"41968:37:16","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"41993:4:16"},{"name":"value","nodeType":"YulIdentifier","src":"41999:5:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"41989:3:16"},"nodeType":"YulFunctionCall","src":"41989:16:16"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"41968:8:16"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"41933:4:16","type":""},{"name":"value","nodeType":"YulTypedName","src":"41939:5:16","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"41949:8:16","type":""}],"src":"41895:117:16"},{"body":{"nodeType":"YulBlock","src":"42069:118:16","statements":[{"nodeType":"YulVariableDeclaration","src":"42079:68:16","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42128:1:16","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"42131:5:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"42124:3:16"},"nodeType":"YulFunctionCall","src":"42124:13:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42143:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"42139:3:16"},"nodeType":"YulFunctionCall","src":"42139:6:16"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"42095:28:16"},"nodeType":"YulFunctionCall","src":"42095:51:16"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"42091:3:16"},"nodeType":"YulFunctionCall","src":"42091:56:16"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"42083:4:16","type":""}]},{"nodeType":"YulAssignment","src":"42156:25:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42170:4:16"},{"name":"mask","nodeType":"YulIdentifier","src":"42176:4:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42166:3:16"},"nodeType":"YulFunctionCall","src":"42166:15:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"42156:6:16"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42046:4:16","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"42052:5:16","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"42062:6:16","type":""}],"src":"42018:169:16"},{"body":{"nodeType":"YulBlock","src":"42273:214:16","statements":[{"nodeType":"YulAssignment","src":"42406:37:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42433:4:16"},{"name":"len","nodeType":"YulIdentifier","src":"42439:3:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"42414:18:16"},"nodeType":"YulFunctionCall","src":"42414:29:16"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"42406:4:16"}]},{"nodeType":"YulAssignment","src":"42452:29:16","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42463:4:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42473:1:16","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"42476:3:16"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"42469:3:16"},"nodeType":"YulFunctionCall","src":"42469:11:16"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"42460:2:16"},"nodeType":"YulFunctionCall","src":"42460:21:16"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"42452:4:16"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"42254:4:16","type":""},{"name":"len","nodeType":"YulTypedName","src":"42260:3:16","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"42268:4:16","type":""}],"src":"42192:295:16"},{"body":{"nodeType":"YulBlock","src":"42584:1303:16","statements":[{"nodeType":"YulVariableDeclaration","src":"42595:51:16","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"42642:3:16"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"42609:32:16"},"nodeType":"YulFunctionCall","src":"42609:37:16"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"42599:6:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"42731:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"42733:16:16"},"nodeType":"YulFunctionCall","src":"42733:18:16"},"nodeType":"YulExpressionStatement","src":"42733:18:16"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"42703:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"42711:18:16","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"42700:2:16"},"nodeType":"YulFunctionCall","src":"42700:30:16"},"nodeType":"YulIf","src":"42697:56:16"},{"nodeType":"YulVariableDeclaration","src":"42763:52:16","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"42809:4:16"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"42803:5:16"},"nodeType":"YulFunctionCall","src":"42803:11:16"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"42777:25:16"},"nodeType":"YulFunctionCall","src":"42777:38:16"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"42767:6:16","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"42908:4:16"},{"name":"oldLen","nodeType":"YulIdentifier","src":"42914:6:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"42922:6:16"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"42862:45:16"},"nodeType":"YulFunctionCall","src":"42862:67:16"},"nodeType":"YulExpressionStatement","src":"42862:67:16"},{"nodeType":"YulVariableDeclaration","src":"42939:18:16","value":{"kind":"number","nodeType":"YulLiteral","src":"42956:1:16","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"42943:9:16","type":""}]},{"nodeType":"YulAssignment","src":"42967:17:16","value":{"kind":"number","nodeType":"YulLiteral","src":"42980:4:16","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"42967:9:16"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"43031:611:16","statements":[{"nodeType":"YulVariableDeclaration","src":"43045:37:16","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"43064:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43076:4:16","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"43072:3:16"},"nodeType":"YulFunctionCall","src":"43072:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43060:3:16"},"nodeType":"YulFunctionCall","src":"43060:22:16"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"43049:7:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"43096:51:16","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"43142:4:16"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"43110:31:16"},"nodeType":"YulFunctionCall","src":"43110:37:16"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"43100:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"43160:10:16","value":{"kind":"number","nodeType":"YulLiteral","src":"43169:1:16","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"43164:1:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"43228:163:16","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"43253:6:16"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"43271:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"43276:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43267:3:16"},"nodeType":"YulFunctionCall","src":"43267:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43261:5:16"},"nodeType":"YulFunctionCall","src":"43261:26:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"43246:6:16"},"nodeType":"YulFunctionCall","src":"43246:42:16"},"nodeType":"YulExpressionStatement","src":"43246:42:16"},{"nodeType":"YulAssignment","src":"43305:24:16","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"43319:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"43327:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43315:3:16"},"nodeType":"YulFunctionCall","src":"43315:14:16"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"43305:6:16"}]},{"nodeType":"YulAssignment","src":"43346:31:16","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"43363:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"43374:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43359:3:16"},"nodeType":"YulFunctionCall","src":"43359:18:16"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"43346:9:16"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"43194:1:16"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"43197:7:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"43191:2:16"},"nodeType":"YulFunctionCall","src":"43191:14:16"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"43206:21:16","statements":[{"nodeType":"YulAssignment","src":"43208:17:16","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"43217:1:16"},{"kind":"number","nodeType":"YulLiteral","src":"43220:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43213:3:16"},"nodeType":"YulFunctionCall","src":"43213:12:16"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"43208:1:16"}]}]},"pre":{"nodeType":"YulBlock","src":"43187:3:16","statements":[]},"src":"43183:208:16"},{"body":{"nodeType":"YulBlock","src":"43427:156:16","statements":[{"nodeType":"YulVariableDeclaration","src":"43445:43:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"43472:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"43477:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43468:3:16"},"nodeType":"YulFunctionCall","src":"43468:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43462:5:16"},"nodeType":"YulFunctionCall","src":"43462:26:16"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"43449:9:16","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"43512:6:16"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"43539:9:16"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"43554:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"43562:4:16","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43550:3:16"},"nodeType":"YulFunctionCall","src":"43550:17:16"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"43520:18:16"},"nodeType":"YulFunctionCall","src":"43520:48:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"43505:6:16"},"nodeType":"YulFunctionCall","src":"43505:64:16"},"nodeType":"YulExpressionStatement","src":"43505:64:16"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"43410:7:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"43419:6:16"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"43407:2:16"},"nodeType":"YulFunctionCall","src":"43407:19:16"},"nodeType":"YulIf","src":"43404:179:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"43603:4:16"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"43617:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"43625:1:16","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"43613:3:16"},"nodeType":"YulFunctionCall","src":"43613:14:16"},{"kind":"number","nodeType":"YulLiteral","src":"43629:1:16","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43609:3:16"},"nodeType":"YulFunctionCall","src":"43609:22:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"43596:6:16"},"nodeType":"YulFunctionCall","src":"43596:36:16"},"nodeType":"YulExpressionStatement","src":"43596:36:16"}]},"nodeType":"YulCase","src":"43024:618:16","value":{"kind":"number","nodeType":"YulLiteral","src":"43029:1:16","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"43659:222:16","statements":[{"nodeType":"YulVariableDeclaration","src":"43673:14:16","value":{"kind":"number","nodeType":"YulLiteral","src":"43686:1:16","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"43677:5:16","type":""}]},{"body":{"nodeType":"YulBlock","src":"43710:67:16","statements":[{"nodeType":"YulAssignment","src":"43728:35:16","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"43747:3:16"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"43752:9:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43743:3:16"},"nodeType":"YulFunctionCall","src":"43743:19:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43737:5:16"},"nodeType":"YulFunctionCall","src":"43737:26:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"43728:5:16"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"43703:6:16"},"nodeType":"YulIf","src":"43700:77:16"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"43797:4:16"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43856:5:16"},{"name":"newLen","nodeType":"YulIdentifier","src":"43863:6:16"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"43803:52:16"},"nodeType":"YulFunctionCall","src":"43803:67:16"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"43790:6:16"},"nodeType":"YulFunctionCall","src":"43790:81:16"},"nodeType":"YulExpressionStatement","src":"43790:81:16"}]},"nodeType":"YulCase","src":"43651:230:16","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"43004:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"43012:2:16","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"43001:2:16"},"nodeType":"YulFunctionCall","src":"43001:14:16"},"nodeType":"YulSwitch","src":"42994:887:16"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"42573:4:16","type":""},{"name":"src","nodeType":"YulTypedName","src":"42579:3:16","type":""}],"src":"42492:1395:16"},{"body":{"nodeType":"YulBlock","src":"43951:40:16","statements":[{"nodeType":"YulAssignment","src":"43962:22:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43978:5:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43972:5:16"},"nodeType":"YulFunctionCall","src":"43972:12:16"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"43962:6:16"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"43934:5:16","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"43944:6:16","type":""}],"src":"43893:98:16"},{"body":{"nodeType":"YulBlock","src":"44092:73:16","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44109:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"44114:6:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44102:6:16"},"nodeType":"YulFunctionCall","src":"44102:19:16"},"nodeType":"YulExpressionStatement","src":"44102:19:16"},{"nodeType":"YulAssignment","src":"44130:29:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44149:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"44154:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44145:3:16"},"nodeType":"YulFunctionCall","src":"44145:14:16"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"44130:11:16"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44064:3:16","type":""},{"name":"length","nodeType":"YulTypedName","src":"44069:6:16","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"44080:11:16","type":""}],"src":"43997:168:16"},{"body":{"nodeType":"YulBlock","src":"44261:283:16","statements":[{"nodeType":"YulVariableDeclaration","src":"44271:52:16","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44317:5:16"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"44285:31:16"},"nodeType":"YulFunctionCall","src":"44285:38:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"44275:6:16","type":""}]},{"nodeType":"YulAssignment","src":"44332:77:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44397:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"44402:6:16"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44339:57:16"},"nodeType":"YulFunctionCall","src":"44339:70:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44332:3:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"44457:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"44464:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44453:3:16"},"nodeType":"YulFunctionCall","src":"44453:16:16"},{"name":"pos","nodeType":"YulIdentifier","src":"44471:3:16"},{"name":"length","nodeType":"YulIdentifier","src":"44476:6:16"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"44418:34:16"},"nodeType":"YulFunctionCall","src":"44418:65:16"},"nodeType":"YulExpressionStatement","src":"44418:65:16"},{"nodeType":"YulAssignment","src":"44492:46:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44503:3:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"44530:6:16"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"44508:21:16"},"nodeType":"YulFunctionCall","src":"44508:29:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44499:3:16"},"nodeType":"YulFunctionCall","src":"44499:39:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44492:3:16"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"44242:5:16","type":""},{"name":"pos","nodeType":"YulTypedName","src":"44249:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44257:3:16","type":""}],"src":"44171:373:16"},{"body":{"nodeType":"YulBlock","src":"44750:440:16","statements":[{"nodeType":"YulAssignment","src":"44760:27:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44772:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"44783:3:16","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44768:3:16"},"nodeType":"YulFunctionCall","src":"44768:19:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44760:4:16"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"44841:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44854:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"44865:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44850:3:16"},"nodeType":"YulFunctionCall","src":"44850:17:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"44797:43:16"},"nodeType":"YulFunctionCall","src":"44797:71:16"},"nodeType":"YulExpressionStatement","src":"44797:71:16"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"44922:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44935:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"44946:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44931:3:16"},"nodeType":"YulFunctionCall","src":"44931:18:16"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"44878:43:16"},"nodeType":"YulFunctionCall","src":"44878:72:16"},"nodeType":"YulExpressionStatement","src":"44878:72:16"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"45004:6:16"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45017:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"45028:2:16","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45013:3:16"},"nodeType":"YulFunctionCall","src":"45013:18:16"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"44960:43:16"},"nodeType":"YulFunctionCall","src":"44960:72:16"},"nodeType":"YulExpressionStatement","src":"44960:72:16"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45053:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"45064:2:16","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45049:3:16"},"nodeType":"YulFunctionCall","src":"45049:18:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45073:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"45079:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45069:3:16"},"nodeType":"YulFunctionCall","src":"45069:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45042:6:16"},"nodeType":"YulFunctionCall","src":"45042:48:16"},"nodeType":"YulExpressionStatement","src":"45042:48:16"},{"nodeType":"YulAssignment","src":"45099:84:16","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"45169:6:16"},{"name":"tail","nodeType":"YulIdentifier","src":"45178:4:16"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45107:61:16"},"nodeType":"YulFunctionCall","src":"45107:76:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45099:4:16"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44698:9:16","type":""},{"name":"value3","nodeType":"YulTypedName","src":"44710:6:16","type":""},{"name":"value2","nodeType":"YulTypedName","src":"44718:6:16","type":""},{"name":"value1","nodeType":"YulTypedName","src":"44726:6:16","type":""},{"name":"value0","nodeType":"YulTypedName","src":"44734:6:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44745:4:16","type":""}],"src":"44550:640:16"},{"body":{"nodeType":"YulBlock","src":"45258:79:16","statements":[{"nodeType":"YulAssignment","src":"45268:22:16","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"45283:6:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"45277:5:16"},"nodeType":"YulFunctionCall","src":"45277:13:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"45268:5:16"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"45325:5:16"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"45299:25:16"},"nodeType":"YulFunctionCall","src":"45299:32:16"},"nodeType":"YulExpressionStatement","src":"45299:32:16"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"45236:6:16","type":""},{"name":"end","nodeType":"YulTypedName","src":"45244:3:16","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"45252:5:16","type":""}],"src":"45196:141:16"},{"body":{"nodeType":"YulBlock","src":"45419:273:16","statements":[{"body":{"nodeType":"YulBlock","src":"45465:83:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"45467:77:16"},"nodeType":"YulFunctionCall","src":"45467:79:16"},"nodeType":"YulExpressionStatement","src":"45467:79:16"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"45440:7:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"45449:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45436:3:16"},"nodeType":"YulFunctionCall","src":"45436:23:16"},{"kind":"number","nodeType":"YulLiteral","src":"45461:2:16","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"45432:3:16"},"nodeType":"YulFunctionCall","src":"45432:32:16"},"nodeType":"YulIf","src":"45429:119:16"},{"nodeType":"YulBlock","src":"45558:127:16","statements":[{"nodeType":"YulVariableDeclaration","src":"45573:15:16","value":{"kind":"number","nodeType":"YulLiteral","src":"45587:1:16","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"45577:6:16","type":""}]},{"nodeType":"YulAssignment","src":"45602:73:16","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45647:9:16"},{"name":"offset","nodeType":"YulIdentifier","src":"45658:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45643:3:16"},"nodeType":"YulFunctionCall","src":"45643:22:16"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"45667:7:16"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"45612:30:16"},"nodeType":"YulFunctionCall","src":"45612:63:16"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"45602:6:16"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45389:9:16","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"45400:7:16","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"45412:6:16","type":""}],"src":"45343:349:16"},{"body":{"nodeType":"YulBlock","src":"45740:143:16","statements":[{"nodeType":"YulAssignment","src":"45750:25:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"45773:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"45755:17:16"},"nodeType":"YulFunctionCall","src":"45755:20:16"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"45750:1:16"}]},{"nodeType":"YulAssignment","src":"45784:25:16","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"45807:1:16"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"45789:17:16"},"nodeType":"YulFunctionCall","src":"45789:20:16"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"45784:1:16"}]},{"body":{"nodeType":"YulBlock","src":"45831:22:16","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"45833:16:16"},"nodeType":"YulFunctionCall","src":"45833:18:16"},"nodeType":"YulExpressionStatement","src":"45833:18:16"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"45828:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"45821:6:16"},"nodeType":"YulFunctionCall","src":"45821:9:16"},"nodeType":"YulIf","src":"45818:35:16"},{"nodeType":"YulAssignment","src":"45863:14:16","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"45872:1:16"},{"name":"y","nodeType":"YulIdentifier","src":"45875:1:16"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"45868:3:16"},"nodeType":"YulFunctionCall","src":"45868:9:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"45863:1:16"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"45729:1:16","type":""},{"name":"y","nodeType":"YulTypedName","src":"45732:1:16","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"45738:1:16","type":""}],"src":"45698:185:16"},{"body":{"nodeType":"YulBlock","src":"45995:76:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46017:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"46025:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46013:3:16"},"nodeType":"YulFunctionCall","src":"46013:14:16"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"46029:34:16","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46006:6:16"},"nodeType":"YulFunctionCall","src":"46006:58:16"},"nodeType":"YulExpressionStatement","src":"46006:58:16"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45987:6:16","type":""}],"src":"45889:182:16"},{"body":{"nodeType":"YulBlock","src":"46223:220:16","statements":[{"nodeType":"YulAssignment","src":"46233:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46299:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"46304:2:16","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46240:58:16"},"nodeType":"YulFunctionCall","src":"46240:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46233:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46405:3:16"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"46316:88:16"},"nodeType":"YulFunctionCall","src":"46316:93:16"},"nodeType":"YulExpressionStatement","src":"46316:93:16"},{"nodeType":"YulAssignment","src":"46418:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46429:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"46434:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46425:3:16"},"nodeType":"YulFunctionCall","src":"46425:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46418:3:16"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46211:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46219:3:16","type":""}],"src":"46077:366:16"},{"body":{"nodeType":"YulBlock","src":"46620:248:16","statements":[{"nodeType":"YulAssignment","src":"46630:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46642:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"46653:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46638:3:16"},"nodeType":"YulFunctionCall","src":"46638:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46630:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46677:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"46688:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46673:3:16"},"nodeType":"YulFunctionCall","src":"46673:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46696:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"46702:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46692:3:16"},"nodeType":"YulFunctionCall","src":"46692:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46666:6:16"},"nodeType":"YulFunctionCall","src":"46666:47:16"},"nodeType":"YulExpressionStatement","src":"46666:47:16"},{"nodeType":"YulAssignment","src":"46722:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46856:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46730:124:16"},"nodeType":"YulFunctionCall","src":"46730:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46722:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46600:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46615:4:16","type":""}],"src":"46449:419:16"},{"body":{"nodeType":"YulBlock","src":"46980:72:16","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47002:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"47010:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46998:3:16"},"nodeType":"YulFunctionCall","src":"46998:14:16"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"47014:30:16","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46991:6:16"},"nodeType":"YulFunctionCall","src":"46991:54:16"},"nodeType":"YulExpressionStatement","src":"46991:54:16"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46972:6:16","type":""}],"src":"46874:178:16"},{"body":{"nodeType":"YulBlock","src":"47204:220:16","statements":[{"nodeType":"YulAssignment","src":"47214:74:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47280:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"47285:2:16","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47221:58:16"},"nodeType":"YulFunctionCall","src":"47221:67:16"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47214:3:16"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47386:3:16"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"47297:88:16"},"nodeType":"YulFunctionCall","src":"47297:93:16"},"nodeType":"YulExpressionStatement","src":"47297:93:16"},{"nodeType":"YulAssignment","src":"47399:19:16","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47410:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"47415:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47406:3:16"},"nodeType":"YulFunctionCall","src":"47406:12:16"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47399:3:16"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47192:3:16","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47200:3:16","type":""}],"src":"47058:366:16"},{"body":{"nodeType":"YulBlock","src":"47601:248:16","statements":[{"nodeType":"YulAssignment","src":"47611:26:16","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47623:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"47634:2:16","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47619:3:16"},"nodeType":"YulFunctionCall","src":"47619:18:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47611:4:16"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47658:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"47669:1:16","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47654:3:16"},"nodeType":"YulFunctionCall","src":"47654:17:16"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47677:4:16"},{"name":"headStart","nodeType":"YulIdentifier","src":"47683:9:16"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47673:3:16"},"nodeType":"YulFunctionCall","src":"47673:20:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47647:6:16"},"nodeType":"YulFunctionCall","src":"47647:47:16"},"nodeType":"YulExpressionStatement","src":"47647:47:16"},{"nodeType":"YulAssignment","src":"47703:139:16","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47837:4:16"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47711:124:16"},"nodeType":"YulFunctionCall","src":"47711:131:16"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47703:4:16"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47581:9:16","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47596:4:16","type":""}],"src":"47430:419:16"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$3_memory_ptr(value) -> length {\n\n        length := 0x03\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$3_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$3_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[3] -> uint256[3]\n    function abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$3_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$3_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$3_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Breed_$2036(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Breed_$2036(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Breed_$2036(value)\n    }\n\n    function convert_t_enum$_Breed_$2036_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Breed_$2036(value)\n    }\n\n    function abi_encode_t_enum$_Breed_$2036_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Breed_$2036_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Breed_$2036__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Breed_$2036_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approved query for nonex\")\n\n        mstore(add(memPtr, 32), \"istent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not ow\")\n\n        mstore(add(memPtr, 32), \"ner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer caller is not o\")\n\n        mstore(add(memPtr, 32), \"wner nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: owner query for nonexist\")\n\n        mstore(add(memPtr, 32), \"ent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: balance query for the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721URIStorage: URI query for \")\n\n        mstore(add(memPtr, 32), \"nonexistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_enum$_Breed_$2036_t_address__to_t_uint8_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_enum$_Breed_$2036_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: operator query for nonex\")\n\n        mstore(add(memPtr, 32), \"istent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer of token that i\")\n\n        mstore(add(memPtr, 32), \"s not own\")\n\n    }\n\n    function abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Metadata: URI query for no\")\n\n        mstore(add(memPtr, 32), \"nexistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721URIStorage: URI set of non\")\n\n        mstore(add(memPtr, 32), \"existent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":16,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"304":[{"length":32,"start":2395},{"length":32,"start":2479}],"2039":[{"length":32,"start":4872}],"2041":[{"length":32,"start":4965}],"2043":[{"length":32,"start":4932}],"2045":[{"length":32,"start":5000}],"2065":[{"length":32,"start":3893},{"length":32,"start":4782}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA36F573B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61A JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0xA36F573B EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0xA51CCCF3 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xAA152491 EQ PUSH2 0x559 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4B6 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x5DACF5F4 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x3B6 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x3AF25975 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x30E JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xB21A83B EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x267D JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x2770 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x287D JUMP JUMPDEST PUSH2 0x83C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x953 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x2A2F JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x2A8B JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0xA79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2770 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH2 0xB29 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x2A8B JUMP JUMPDEST PUSH2 0xBDD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x363 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x2B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x2BA4 JUMP JUMPDEST PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH2 0xD9A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A0 PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x2770 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x2BFD JUMP JUMPDEST PUSH2 0x1015 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x506 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x1195 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x543 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x11C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x2CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x561 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x28CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x2D84 JUMP JUMPDEST PUSH2 0x149B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x2770 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x2E07 JUMP JUMPDEST PUSH2 0x164E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x641 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x2BA4 JUMP JUMPDEST PUSH2 0x16E2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x70E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x71E JUMPI POP PUSH2 0x71D DUP3 PUSH2 0x16F6 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x734 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x760 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x782 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x790 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C2 DUP3 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x847 DUP3 PUSH2 0xC28 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AE SWAP1 PUSH2 0x2FAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8D6 PUSH2 0x17CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x905 JUMPI POP PUSH2 0x904 DUP2 PUSH2 0x8FF PUSH2 0x17CC JUMP JUMPDEST PUSH2 0x164E JUMP JUMPDEST JUMPDEST PUSH2 0x944 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93B SWAP1 PUSH2 0x303D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94E DUP4 DUP4 PUSH2 0x17D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA0B JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA02 SWAP3 SWAP2 SWAP1 PUSH2 0x305D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA15 DUP3 DUP3 PUSH2 0x188D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA2A PUSH2 0xA24 PUSH2 0x17CC JUMP JUMPDEST DUP3 PUSH2 0x1A2A JUMP JUMPDEST PUSH2 0xA69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA60 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA74 DUP4 DUP4 DUP4 PUSH2 0x1B08 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA8F JUMPI PUSH2 0xA8E PUSH2 0x3118 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xAA4 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAD0 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB1D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAF2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB1D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB00 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB31 PUSH2 0x1D63 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xB5C SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB99 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCA7E25B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBF8 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x149B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC05 PUSH2 0x25EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC7 SWAP1 PUSH2 0x31FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4A SWAP1 PUSH2 0x3291 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE21 SWAP1 PUSH2 0x32FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xF92 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xFBE SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x100B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFE0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x100B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFEE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x101D PUSH2 0x17CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1081 SWAP1 PUSH2 0x3369 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x1097 PUSH2 0x17CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1144 PUSH2 0x17CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1189 SWAP2 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0x11D9 PUSH2 0xBFD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1272 JUMPI DUP3 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0x1218 JUMPI POP DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1205 JUMPI PUSH2 0x1204 PUSH2 0x3118 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0x1215 SWAP2 SWAP1 PUSH2 0x33B8 JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0x123A JUMPI DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1230 JUMPI PUSH2 0x122F PUSH2 0x2C3D JUMP JUMPDEST JUMPDEST SWAP4 POP POP POP POP PUSH2 0x12A5 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x124D JUMPI PUSH2 0x124C PUSH2 0x3118 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0x125D SWAP2 SWAP1 PUSH2 0x33B8 JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0x126A SWAP1 PUSH2 0x33EC JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11DE JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x12806C9D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x1306 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB90F491000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C9 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34AC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x140C SWAP2 SWAP1 PUSH2 0x3514 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xF873236E6CC0ECC5BE1A9A35C95EE5B8D1AC4CC7BFEF0CC5060391D6CC98E26B CALLER PUSH1 0x40 MLOAD PUSH2 0x1490 SWAP2 SWAP1 PUSH2 0x2836 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x14AC PUSH2 0x14A6 PUSH2 0x17CC JUMP JUMPDEST DUP4 PUSH2 0x1A2A JUMP JUMPDEST PUSH2 0x14EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14E2 SWAP1 PUSH2 0x30F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14F7 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1DF5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1508 DUP3 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x1547 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153E SWAP1 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1567 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1593 SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15B5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x15F1 PUSH2 0x1E51 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1606 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x163B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1623 SWAP3 SWAP2 SWAP1 PUSH2 0x360F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1649 JUMP JUMPDEST PUSH2 0x1644 DUP5 PUSH2 0x1E68 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16EA PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x16F3 DUP2 PUSH2 0x1F0F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1847 DUP4 PUSH2 0xC28 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x18E4 JUMPI PUSH2 0x18E3 PUSH2 0x3118 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18F6 SWAP2 SWAP1 PUSH2 0x3662 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1903 DUP3 PUSH2 0x11C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x190F DUP5 DUP5 PUSH2 0x203D JUMP JUMPDEST PUSH2 0x19D1 DUP4 PUSH1 0xB DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1928 JUMPI PUSH2 0x1927 PUSH2 0x2C3D JUMP JUMPDEST JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1939 JUMPI PUSH2 0x1938 PUSH2 0x3118 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x194E SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x197A SWAP1 PUSH2 0x2E76 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x199C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x205B JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x19E4 SWAP1 PUSH2 0x33EC JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x8A269F26B688E110E9CBD887D163DAB35CAE678FA353A0292DE532C0CAC1ECDC DUP2 CALLER PUSH1 0x40 MLOAD PUSH2 0x1A1A SWAP3 SWAP2 SWAP1 PUSH2 0x3693 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A35 DUP3 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x1A74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6B SWAP1 PUSH2 0x372E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A7F DUP4 PUSH2 0xC28 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1AEE JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AD6 DUP5 PUSH2 0x7B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x1AFF JUMPI POP PUSH2 0x1AFE DUP2 DUP6 PUSH2 0x164E JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B28 DUP3 PUSH2 0xC28 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B75 SWAP1 PUSH2 0x37C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE4 SWAP1 PUSH2 0x3852 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BF8 DUP4 DUP4 DUP4 PUSH2 0x20C8 JUMP JUMPDEST PUSH2 0x1C03 PUSH1 0x0 DUP3 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C53 SWAP2 SWAP1 PUSH2 0x3872 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1CAA SWAP2 SWAP1 PUSH2 0x33B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DEA SWAP1 PUSH2 0x38F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1E00 DUP5 DUP5 DUP5 PUSH2 0x1B08 JUMP JUMPDEST PUSH2 0x1E0C DUP5 DUP5 DUP5 DUP5 PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x1E4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E42 SWAP1 PUSH2 0x3984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1E73 DUP3 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x1EB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EA9 SWAP1 PUSH2 0x3A16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EBC PUSH2 0x1E51 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1EDC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1F07 JUMP JUMPDEST DUP1 PUSH2 0x1EE6 DUP5 PUSH2 0x2254 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1EF7 SWAP3 SWAP2 SWAP1 PUSH2 0x360F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F74 SWAP1 PUSH2 0x3A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x2057 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x23B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2064 DUP3 PUSH2 0x1760 JUMP JUMPDEST PUSH2 0x20A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x209A SWAP1 PUSH2 0x3B14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x20C3 SWAP2 SWAP1 PUSH2 0x3CE0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EE DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x240F JUMP JUMPDEST ISZERO PUSH2 0x2247 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x2117 PUSH2 0x17CC JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2139 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E07 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2175 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2172 SWAP2 SWAP1 PUSH2 0x3E68 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x21F7 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x21A5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x21AA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x21EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E6 SWAP1 PUSH2 0x3984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x224C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x229B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x22CD JUMPI DUP1 DUP1 PUSH2 0x22B6 SWAP1 PUSH2 0x33EC JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x22C6 SWAP2 SWAP1 PUSH2 0x3E95 JUMP JUMPDEST SWAP2 POP PUSH2 0x22A3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22E9 JUMPI PUSH2 0x22E8 PUSH2 0x28EC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x231B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x23A8 JUMPI PUSH1 0x1 DUP3 PUSH2 0x2334 SWAP2 SWAP1 PUSH2 0x3872 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x2343 SWAP2 SWAP1 PUSH2 0x3662 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x234F SWAP2 SWAP1 PUSH2 0x33B8 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2365 JUMPI PUSH2 0x2364 PUSH2 0x3118 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x23A1 SWAP2 SWAP1 PUSH2 0x3E95 JUMP JUMPDEST SWAP5 POP PUSH2 0x231F JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23BE DUP4 DUP4 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0x23CB PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x240A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2401 SWAP1 PUSH2 0x3984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2491 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2488 SWAP1 PUSH2 0x3F12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x249A DUP2 PUSH2 0x1760 JUMP JUMPDEST ISZERO PUSH2 0x24DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24D1 SWAP1 PUSH2 0x3F7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24E6 PUSH1 0x0 DUP4 DUP4 PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2536 SWAP2 SWAP1 PUSH2 0x33B8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x265A DUP2 PUSH2 0x2625 JUMP JUMPDEST DUP2 EQ PUSH2 0x2665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2677 DUP2 PUSH2 0x2651 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2693 JUMPI PUSH2 0x2692 PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26A1 DUP5 DUP3 DUP6 ADD PUSH2 0x2668 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26BF DUP2 PUSH2 0x26AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x271A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x26FF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2742 DUP3 PUSH2 0x26E0 JUMP JUMPDEST PUSH2 0x274C DUP2 DUP6 PUSH2 0x26EB JUMP JUMPDEST SWAP4 POP PUSH2 0x275C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26FC JUMP JUMPDEST PUSH2 0x2765 DUP2 PUSH2 0x2726 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x278A DUP2 DUP5 PUSH2 0x2737 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27A5 DUP2 PUSH2 0x2792 JUMP JUMPDEST DUP2 EQ PUSH2 0x27B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27C2 DUP2 PUSH2 0x279C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27DE JUMPI PUSH2 0x27DD PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27EC DUP5 DUP3 DUP6 ADD PUSH2 0x27B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2820 DUP3 PUSH2 0x27F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2830 DUP2 PUSH2 0x2815 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x284B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2827 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x285A DUP2 PUSH2 0x2815 JUMP JUMPDEST DUP2 EQ PUSH2 0x2865 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2877 DUP2 PUSH2 0x2851 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2894 JUMPI PUSH2 0x2893 PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A2 DUP6 DUP3 DUP7 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28B3 DUP6 DUP3 DUP7 ADD PUSH2 0x27B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x28C6 DUP2 PUSH2 0x2792 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2924 DUP3 PUSH2 0x2726 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2943 JUMPI PUSH2 0x2942 PUSH2 0x28EC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2956 PUSH2 0x2611 JUMP JUMPDEST SWAP1 POP PUSH2 0x2962 DUP3 DUP3 PUSH2 0x291B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2982 JUMPI PUSH2 0x2981 PUSH2 0x28EC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x29AB PUSH2 0x29A6 DUP5 PUSH2 0x2967 JUMP JUMPDEST PUSH2 0x294C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x29CE JUMPI PUSH2 0x29CD PUSH2 0x2993 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29F7 JUMPI DUP1 PUSH2 0x29E3 DUP9 DUP3 PUSH2 0x27B3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x29D0 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A16 JUMPI PUSH2 0x2A15 PUSH2 0x28E7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A26 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2998 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A46 JUMPI PUSH2 0x2A45 PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A54 DUP6 DUP3 DUP7 ADD PUSH2 0x27B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A75 JUMPI PUSH2 0x2A74 PUSH2 0x2620 JUMP JUMPDEST JUMPDEST PUSH2 0x2A81 DUP6 DUP3 DUP7 ADD PUSH2 0x2A01 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AA4 JUMPI PUSH2 0x2AA3 PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AB2 DUP7 DUP3 DUP8 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2AC3 DUP7 DUP3 DUP8 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2AD4 DUP7 DUP3 DUP8 ADD PUSH2 0x27B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B07 DUP2 PUSH2 0x2792 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B19 DUP4 DUP4 PUSH2 0x2AFE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B3B DUP2 PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0x2B45 DUP2 DUP5 PUSH2 0x2AE9 JUMP JUMPDEST SWAP3 POP PUSH2 0x2B50 DUP3 PUSH2 0x2AF4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B81 JUMPI DUP2 MLOAD PUSH2 0x2B68 DUP8 DUP3 PUSH2 0x2B0D JUMP JUMPDEST SWAP7 POP PUSH2 0x2B73 DUP4 PUSH2 0x2B25 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2B54 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B9E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BBA JUMPI PUSH2 0x2BB9 PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BC8 DUP5 DUP3 DUP6 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BDA DUP2 PUSH2 0x26AA JUMP JUMPDEST DUP2 EQ PUSH2 0x2BE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BF7 DUP2 PUSH2 0x2BD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C14 JUMPI PUSH2 0x2C13 PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C22 DUP6 DUP3 DUP7 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2C33 DUP6 DUP3 DUP7 ADD PUSH2 0x2BE8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2C7D JUMPI PUSH2 0x2C7C PUSH2 0x2C3D JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2C8E DUP3 PUSH2 0x2C6C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C9E DUP3 PUSH2 0x2C80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CAE DUP2 PUSH2 0x2C93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CC9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2CEF JUMPI PUSH2 0x2CEE PUSH2 0x28EC JUMP JUMPDEST JUMPDEST PUSH2 0x2CF8 DUP3 PUSH2 0x2726 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D27 PUSH2 0x2D22 DUP5 PUSH2 0x2CD4 JUMP JUMPDEST PUSH2 0x294C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2D43 JUMPI PUSH2 0x2D42 PUSH2 0x2CCF JUMP JUMPDEST JUMPDEST PUSH2 0x2D4E DUP5 DUP3 DUP6 PUSH2 0x2D05 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D6B JUMPI PUSH2 0x2D6A PUSH2 0x28E7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D7B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2D14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2D9E JUMPI PUSH2 0x2D9D PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DAC DUP8 DUP3 DUP9 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2DBD DUP8 DUP3 DUP9 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2DCE DUP8 DUP3 DUP9 ADD PUSH2 0x27B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DEF JUMPI PUSH2 0x2DEE PUSH2 0x2620 JUMP JUMPDEST JUMPDEST PUSH2 0x2DFB DUP8 DUP3 DUP9 ADD PUSH2 0x2D56 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E1E JUMPI PUSH2 0x2E1D PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E2C DUP6 DUP3 DUP7 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2E3D DUP6 DUP3 DUP7 ADD PUSH2 0x2868 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E8E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2EA1 JUMPI PUSH2 0x2EA0 PUSH2 0x2E47 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F03 PUSH1 0x2C DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2F0E DUP3 PUSH2 0x2EA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F32 DUP2 PUSH2 0x2EF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F95 PUSH1 0x21 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2FA0 DUP3 PUSH2 0x2F39 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FC4 DUP2 PUSH2 0x2F88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3027 PUSH1 0x38 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3032 DUP3 PUSH2 0x2FCB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3056 DUP2 PUSH2 0x301A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3072 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2827 JUMP JUMPDEST PUSH2 0x307F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2827 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E2 PUSH1 0x31 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x30ED DUP3 PUSH2 0x3086 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3111 DUP2 PUSH2 0x30D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3162 PUSH1 0x0 DUP4 PUSH2 0x3147 JUMP JUMPDEST SWAP2 POP PUSH2 0x316D DUP3 PUSH2 0x3152 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3183 DUP3 PUSH2 0x3155 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31E9 PUSH1 0x29 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x31F4 DUP3 PUSH2 0x318D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3218 DUP2 PUSH2 0x31DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x327B PUSH1 0x2A DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3286 DUP3 PUSH2 0x321F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32AA DUP2 PUSH2 0x326E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E7 PUSH1 0x16 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x32F2 DUP3 PUSH2 0x32B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3316 DUP2 PUSH2 0x32DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3353 PUSH1 0x19 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x335E DUP3 PUSH2 0x331D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3382 DUP2 PUSH2 0x3346 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33C3 DUP3 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x33CE DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x33E6 JUMPI PUSH2 0x33E5 PUSH2 0x3389 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33F7 DUP3 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3429 JUMPI PUSH2 0x3428 PUSH2 0x3389 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3447 DUP2 PUSH2 0x3434 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x346A DUP2 PUSH2 0x344D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3487 DUP2 PUSH2 0x3470 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34A6 DUP2 PUSH2 0x348D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x34C1 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x343E JUMP JUMPDEST PUSH2 0x34CE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3461 JUMP JUMPDEST PUSH2 0x34DB PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x347E JUMP JUMPDEST PUSH2 0x34E8 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x349D JUMP JUMPDEST PUSH2 0x34F5 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x349D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x350E DUP2 PUSH2 0x279C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x352A JUMPI PUSH2 0x3529 PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3538 DUP5 DUP3 DUP6 ADD PUSH2 0x34FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F6E6578697374656E7420746F6B656E000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x359D PUSH1 0x31 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x35A8 DUP3 PUSH2 0x3541 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35CC DUP2 PUSH2 0x3590 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E9 DUP3 PUSH2 0x26E0 JUMP JUMPDEST PUSH2 0x35F3 DUP2 DUP6 PUSH2 0x35D3 JUMP JUMPDEST SWAP4 POP PUSH2 0x3603 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26FC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x361B DUP3 DUP6 PUSH2 0x35DE JUMP JUMPDEST SWAP2 POP PUSH2 0x3627 DUP3 DUP5 PUSH2 0x35DE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x366D DUP3 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x3678 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3688 JUMPI PUSH2 0x3687 PUSH2 0x3633 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x36A8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2CA5 JUMP JUMPDEST PUSH2 0x36B5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2827 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3718 PUSH1 0x2C DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3723 DUP3 PUSH2 0x36BC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3747 DUP2 PUSH2 0x370B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x73206E6F74206F776E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37AA PUSH1 0x29 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x37B5 DUP3 PUSH2 0x374E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37D9 DUP2 PUSH2 0x379D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383C PUSH1 0x24 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3847 DUP3 PUSH2 0x37E0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x386B DUP2 PUSH2 0x382F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x387D DUP3 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x3888 DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x38A0 JUMPI PUSH2 0x389F PUSH2 0x3389 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38DC PUSH1 0x16 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x38E7 DUP3 PUSH2 0x38A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x390B DUP2 PUSH2 0x38CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396E PUSH1 0x32 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3979 DUP3 PUSH2 0x3912 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x399D DUP2 PUSH2 0x3961 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A00 PUSH1 0x2F DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3A0B DUP3 PUSH2 0x39A4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A2F DUP2 PUSH2 0x39F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A6C PUSH1 0x17 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3A77 DUP3 PUSH2 0x3A36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A9B DUP2 PUSH2 0x3A5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AFE PUSH1 0x2E DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3B09 DUP3 PUSH2 0x3AA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B2D DUP2 PUSH2 0x3AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3B96 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3B59 JUMP JUMPDEST PUSH2 0x3BA0 DUP7 DUP4 PUSH2 0x3B59 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BDD PUSH2 0x3BD8 PUSH2 0x3BD3 DUP5 PUSH2 0x2792 JUMP JUMPDEST PUSH2 0x3BB8 JUMP JUMPDEST PUSH2 0x2792 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3BF7 DUP4 PUSH2 0x3BC2 JUMP JUMPDEST PUSH2 0x3C0B PUSH2 0x3C03 DUP3 PUSH2 0x3BE4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3B66 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3C20 PUSH2 0x3C13 JUMP JUMPDEST PUSH2 0x3C2B DUP2 DUP5 DUP5 PUSH2 0x3BEE JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3C4F JUMPI PUSH2 0x3C44 PUSH1 0x0 DUP3 PUSH2 0x3C18 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3C31 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3C94 JUMPI PUSH2 0x3C65 DUP2 PUSH2 0x3B34 JUMP JUMPDEST PUSH2 0x3C6E DUP5 PUSH2 0x3B49 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3C7D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3C91 PUSH2 0x3C89 DUP6 PUSH2 0x3B49 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3C30 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CB7 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3C99 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CD0 DUP4 DUP4 PUSH2 0x3CA6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3CE9 DUP3 PUSH2 0x26E0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D02 JUMPI PUSH2 0x3D01 PUSH2 0x28EC JUMP JUMPDEST JUMPDEST PUSH2 0x3D0C DUP3 SLOAD PUSH2 0x2E76 JUMP JUMPDEST PUSH2 0x3D17 DUP3 DUP3 DUP6 PUSH2 0x3C53 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3D4A JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3D38 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3D42 DUP6 DUP3 PUSH2 0x3CC4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3DAA JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3D58 DUP7 PUSH2 0x3B34 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3D80 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3D5B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3D9D JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3D99 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3CA6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DD9 DUP3 PUSH2 0x3DB2 JUMP JUMPDEST PUSH2 0x3DE3 DUP2 DUP6 PUSH2 0x3DBD JUMP JUMPDEST SWAP4 POP PUSH2 0x3DF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26FC JUMP JUMPDEST PUSH2 0x3DFC DUP2 PUSH2 0x2726 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3E1C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2827 JUMP JUMPDEST PUSH2 0x3E29 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2827 JUMP JUMPDEST PUSH2 0x3E36 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x28BD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3E48 DUP2 DUP5 PUSH2 0x3DCE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3E62 DUP2 PUSH2 0x2651 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E7E JUMPI PUSH2 0x3E7D PUSH2 0x261B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E8C DUP5 DUP3 DUP6 ADD PUSH2 0x3E53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EA0 DUP3 PUSH2 0x2792 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EAB DUP4 PUSH2 0x2792 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3EBB JUMPI PUSH2 0x3EBA PUSH2 0x3633 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EFC PUSH1 0x20 DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3F07 DUP3 PUSH2 0x3EC6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F2B DUP2 PUSH2 0x3EEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F68 PUSH1 0x1C DUP4 PUSH2 0x26EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3F73 DUP3 PUSH2 0x3F32 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F97 DUP2 PUSH2 0x3F5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 CHAINID 0xDE 0xD3 0xAA PUSH31 0xAF47F4662495AD120A965D29DAEE8F8DB096EA1F503FD2B2649A64736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ","sourceMap":"479:3721:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:300:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2414:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3925:217;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3463:401;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1095:29:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6618:256:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4789:330:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3976:121:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3005:250;;;;;;;;;;;;;:::i;:::-;;5185:179:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3763:116:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2117:235:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4103:95:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1855:205:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1001:265:2;;;;;;;;;;;;;:::i;:::-;;3885:85:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1317:81:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2576:102:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4209:290;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1014:54:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3261:496;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1996:487;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5430:320:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;387:663:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4565:162:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;811:98:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1496:300:5;1598:4;1648:25;1633:40;;;:11;:40;;;;:104;;;;1704:33;1689:48;;;:11;:48;;;;1633:104;:156;;;;1753:36;1777:11;1753:23;:36::i;:::-;1633:156;1614:175;;1496:300;;;:::o;2414:98::-;2468:13;2500:5;2493:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:98;:::o;3925:217::-;4001:7;4028:16;4036:7;4028;:16::i;:::-;4020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4111:15;:24;4127:7;4111:24;;;;;;;;;;;;;;;;;;;;;4104:31;;3925:217;;;:::o;3463:401::-;3543:13;3559:23;3574:7;3559:14;:23::i;:::-;3543:39;;3606:5;3600:11;;:2;:11;;;3592:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3697:5;3681:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3706:37;3723:5;3730:12;:10;:12::i;:::-;3706:16;:37::i;:::-;3681:62;3660:165;;;;;;;;;;;;:::i;:::-;;;;;;;;;3836:21;3845:2;3849:7;3836:8;:21::i;:::-;3533:331;3463:401;;:::o;1095:29:15:-;;;;:::o;6618:256:4:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;4789:330:5:-;4978:41;4997:12;:10;:12::i;:::-;5011:7;4978:18;:41::i;:::-;4970:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5084:28;5094:4;5100:2;5104:7;5084:9;:28::i;:::-;4789:330;;;:::o;3976:121:15:-;4037:13;4069:14;4084:5;4069:21;;;;;;;;:::i;:::-;;;;;;;;;4062:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3976:121;;;:::o;3005:250::-;1941:20:2;:18;:20::i;:::-;3052:14:15::1;3069:21;3052:38;;3101:12;3127:10;3119:24;;3151:6;3119:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3100:62;;;3177:7;3172:77;;3207:31;;;;;;;;;;;;;;3172:77;3042:213;;3005:250::o:0;5185:179:5:-;5318:39;5335:4;5341:2;5345:7;5318:39;;;;;;;;;;;;:16;:39::i;:::-;5185:179;;;:::o;3763:116:15:-;3810:17;;:::i;:::-;3839:33;;;;;;;;3847:2;3839:33;;;;3851:2;3839:33;;;;1175:3;3839:33;;;;;3763:116;:::o;2117:235:5:-;2189:7;2208:13;2224:7;:16;2232:7;2224:16;;;;;;;;;;;;;;;;;;;;;2208:32;;2275:1;2258:19;;:5;:19;;;2250:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2340:5;2333:12;;;2117:235;;;:::o;4103:95:15:-;4151:7;4177:14;;4170:21;;4103:95;:::o;1855:205:5:-;1927:7;1971:1;1954:19;;:5;:19;;;1946:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2037:9;:16;2047:5;2037:16;;;;;;;;;;;;;;;;2030:23;;1855:205;;;:::o;1001:265:2:-;1074:14;;;;;;;;;;;1060:28;;:10;:28;;;1052:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1122:16;1141:7;;;;;;;;;;;1122:26;;1164:10;1154:7;;:20;;;;;;;;;;;;;;;;;;1205:1;1180:14;;:27;;;;;;;;;;;;;;;;;;1250:10;1219:42;;1240:8;1219:42;;;;;;;;;;;;1046:220;1001:265::o;3885:85:15:-;3928:7;3954:9;3947:16;;3885:85;:::o;1317:81:2:-;1364:7;1386;;;;;;;;;;;1379:14;;1317:81;:::o;2576:102:5:-;2632:13;2664:7;2657:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2576:102;:::o;4209:290::-;4323:12;:10;:12::i;:::-;4311:24;;:8;:24;;;4303:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4421:8;4376:18;:32;4395:12;:10;:12::i;:::-;4376:32;;;;;;;;;;;;;;;:42;4409:8;4376:42;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;4473:8;4444:48;;4459:12;:10;:12::i;:::-;4444:48;;;4483:8;4444:48;;;;;;:::i;:::-;;;;;;;;4209:290;;:::o;1014:54:15:-;;;;;;;;;;;;;;;;;;;;;;:::o;3261:496::-;3332:5;3349:21;3373:1;3349:25;;3384:29;3416:16;:14;:16::i;:::-;3384:48;;3447:9;3442:259;3466:18;3462:1;:22;3442:259;;;3522:13;3509:9;:26;;:72;;;;;3567:11;3579:1;3567:14;;;;;;;:::i;:::-;;;;;;3551:13;:30;;;;:::i;:::-;3539:9;:42;3509:72;3505:126;;;3614:1;3608:8;;;;;;;;:::i;:::-;;3601:15;;;;;;;3505:126;3676:11;3688:1;3676:14;;;;;;;:::i;:::-;;;;;;3660:13;:30;;;;:::i;:::-;3644:46;;3486:3;;;;;:::i;:::-;;;;3442:259;;;;3717:33;;;;;;;;;;;;;;3261:496;;;;:::o;1996:487::-;2042:17;2087:9;2075;:21;2071:91;;;2119:32;;;;;;;;;;;;;;2071:91;2183:18;:37;;;2234:9;2257:16;945:1;2322:18;988:1;2183:190;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2171:202;;2416:10;2383:19;:30;2403:9;2383:30;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;2454:9;2441:35;2465:10;2441:35;;;;;;:::i;:::-;;;;;;;;1996:487;:::o;5430:320:5:-;5599:41;5618:12;:10;:12::i;:::-;5632:7;5599:18;:41::i;:::-;5591:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5704:39;5718:4;5724:2;5728:7;5737:5;5704:13;:39::i;:::-;5430:320;;;;:::o;387:663:8:-;460:13;493:16;501:7;493;:16::i;:::-;485:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;574:23;600:10;:19;611:7;600:19;;;;;;;;;;;574:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:18;650:10;:8;:10::i;:::-;629:31;;755:1;739:4;733:18;:23;729:70;;779:9;772:16;;;;;;729:70;927:1;907:9;901:23;:27;897:106;;;975:4;981:9;958:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;944:48;;;;;;897:106;1020:23;1035:7;1020:14;:23::i;:::-;1013:30;;;;387:663;;;;:::o;4565:162:5:-;4662:4;4685:18;:25;4704:5;4685:25;;;;;;;;;;;;;;;:35;4711:8;4685:35;;;;;;;;;;;;;;;;;;;;;;;;;4678:42;;4565:162;;;;:::o;811:98:2:-;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;:::-;811:98:::0;:::o;763:155:13:-;848:4;886:25;871:40;;;:11;:40;;;;864:47;;763:155;;;:::o;7222:125:5:-;7287:4;7338:1;7310:30;;:7;:16;7318:7;7310:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7303:37;;7222:125;;;:::o;587:96:11:-;640:7;666:10;659:17;;587:96;:::o;11073:171:5:-;11174:2;11147:15;:24;11163:7;11147:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11229:7;11225:2;11191:46;;11200:23;11215:7;11200:14;:23::i;:::-;11191:46;;;;;;;;;;;;11073:171;;:::o;2489:510:15:-;2594:16;2613:19;:30;2633:9;2613:30;;;;;;;;;;;;;;;;;;;;;2594:49;;2653:18;2674:14;;2653:35;;2698:17;1175:3;2718:11;2730:1;2718:14;;;;;;;;:::i;:::-;;;;;;;;:33;;;;:::i;:::-;2698:53;;2761:14;2778:32;2800:9;2778:21;:32::i;:::-;2761:49;;2820:31;2830:8;2840:10;2820:9;:31::i;:::-;2861:59;2874:10;2886:14;2909:8;2901:17;;;;;;;;:::i;:::-;;2886:33;;;;;;;;:::i;:::-;;;;;;;;;2861:59;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:59::i;:::-;2930:14;;:16;;;;;;;;;:::i;:::-;;;;;;2961:31;2971:8;2981:10;2961:31;;;;;;;:::i;:::-;;;;;;;;2584:415;;;;2489:510;;:::o;7505:344:5:-;7598:4;7622:16;7630:7;7622;:16::i;:::-;7614:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:13;7713:23;7728:7;7713:14;:23::i;:::-;7697:39;;7765:5;7754:16;;:7;:16;;;:51;;;;7798:7;7774:31;;:20;7786:7;7774:11;:20::i;:::-;:31;;;7754:51;:87;;;;7809:32;7826:5;7833:7;7809:16;:32::i;:::-;7754:87;7746:96;;;7505:344;;;;:::o;10402:560::-;10556:4;10529:31;;:23;10544:7;10529:14;:23::i;:::-;:31;;;10521:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;10638:1;10624:16;;:2;:16;;;10616:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10692:39;10713:4;10719:2;10723:7;10692:20;:39::i;:::-;10793:29;10810:1;10814:7;10793:8;:29::i;:::-;10852:1;10833:9;:15;10843:4;10833:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10880:1;10863:9;:13;10873:2;10863:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10910:2;10891:7;:16;10899:7;10891:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10947:7;10943:2;10928:27;;10937:4;10928:27;;;;;;;;;;;;10402:560;;;:::o;1715:111:2:-;1787:7;;;;;;;;;;;1773:21;;:10;:21;;;1765:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1715:111::o;6612:307:5:-;6763:28;6773:4;6779:2;6783:7;6763:9;:28::i;:::-;6809:48;6832:4;6838:2;6842:7;6851:5;6809:22;:48::i;:::-;6801:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;6612:307;;;;:::o;3314:92::-;3365:13;3390:9;;;;;;;;;;;;;;3314:92;:::o;2744:329::-;2817:13;2850:16;2858:7;2850;:16::i;:::-;2842:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2929:21;2953:10;:8;:10::i;:::-;2929:34;;3004:1;2986:7;2980:21;:25;:86;;;;;;;;;;;;;;;;;3032:7;3041:18;:7;:16;:18::i;:::-;3015:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2980:86;2973:93;;;2744:329;;;:::o;1482:188:2:-;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;8179:108:5:-;8254:26;8264:2;8268:7;8254:26;;;;;;;;;;;;:9;:26::i;:::-;8179:108;;:::o;1197:214:8:-;1296:16;1304:7;1296;:16::i;:::-;1288:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1395:9;1373:10;:19;1384:7;1373:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;1197:214;;:::o;13131:122:5:-;;;;:::o;11797:778::-;11947:4;11967:15;:2;:13;;;:15::i;:::-;11963:606;;;12018:2;12002:36;;;12039:12;:10;:12::i;:::-;12053:4;12059:7;12068:5;12002:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;11998:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12258:1;12241:6;:13;:18;12237:266;;12283:60;;;;;;;;;;:::i;:::-;;;;;;;;12237:266;12455:6;12449:13;12440:6;12436:2;12432:15;12425:38;11998:519;12134:41;;;12124:51;;;:6;:51;;;;12117:58;;;;;11963:606;12554:4;12547:11;;11797:778;;;;;;;:::o;275:703:12:-;331:13;557:1;548:5;:10;544:51;;574:10;;;;;;;;;;;;;;;;;;;;;544:51;604:12;619:5;604:20;;634:14;658:75;673:1;665:4;:9;658:75;;690:8;;;;;:::i;:::-;;;;720:2;712:10;;;;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:39;;791:150;807:1;798:5;:10;791:150;;834:1;824:11;;;;;:::i;:::-;;;900:2;892:5;:10;;;;:::i;:::-;879:2;:24;;;;:::i;:::-;866:39;;849:6;856;849:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;928:2;919:11;;;;;:::i;:::-;;;791:150;;;964:6;950:21;;;;;275:703;;;;:::o;8508:311:5:-;8633:18;8639:2;8643:7;8633:5;:18::i;:::-;8682:54;8713:1;8717:2;8721:7;8730:5;8682:22;:54::i;:::-;8661:151;;;;;;;;;;;;:::i;:::-;;;;;;;;;8508:311;;;:::o;718:377:10:-;778:4;981:12;1046:7;1034:20;1026:28;;1087:1;1080:4;:8;1073:15;;;718:377;;;:::o;9141:372:5:-;9234:1;9220:16;;:2;:16;;;9212:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9292:16;9300:7;9292;:16::i;:::-;9291:17;9283:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9352:45;9381:1;9385:2;9389:7;9352:20;:45::i;:::-;9425:1;9408:9;:13;9418:2;9408:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;9455:2;9436:7;:16;9444:7;9436:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9498:7;9494:2;9473:33;;9490:1;9473:33;;;;;;;;;;;;9141:372;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:117::-;5351:1;5348;5341:12;5365:180;5413:77;5410:1;5403:88;5510:4;5507:1;5500:15;5534:4;5531:1;5524:15;5551:281;5634:27;5656:4;5634:27;:::i;:::-;5626:6;5622:40;5764:6;5752:10;5749:22;5728:18;5716:10;5713:34;5710:62;5707:88;;;5775:18;;:::i;:::-;5707:88;5815:10;5811:2;5804:22;5594:238;5551:281;;:::o;5838:129::-;5872:6;5899:20;;:::i;:::-;5889:30;;5928:33;5956:4;5948:6;5928:33;:::i;:::-;5838:129;;;:::o;5973:311::-;6050:4;6140:18;6132:6;6129:30;6126:56;;;6162:18;;:::i;:::-;6126:56;6212:4;6204:6;6200:17;6192:25;;6272:4;6266;6262:15;6254:23;;5973:311;;;:::o;6290:117::-;6399:1;6396;6389:12;6430:710;6526:5;6551:81;6567:64;6624:6;6567:64;:::i;:::-;6551:81;:::i;:::-;6542:90;;6652:5;6681:6;6674:5;6667:21;6715:4;6708:5;6704:16;6697:23;;6768:4;6760:6;6756:17;6748:6;6744:30;6797:3;6789:6;6786:15;6783:122;;;6816:79;;:::i;:::-;6783:122;6931:6;6914:220;6948:6;6943:3;6940:15;6914:220;;;7023:3;7052:37;7085:3;7073:10;7052:37;:::i;:::-;7047:3;7040:50;7119:4;7114:3;7110:14;7103:21;;6990:144;6974:4;6969:3;6965:14;6958:21;;6914:220;;;6918:21;6532:608;;6430:710;;;;;:::o;7163:370::-;7234:5;7283:3;7276:4;7268:6;7264:17;7260:27;7250:122;;7291:79;;:::i;:::-;7250:122;7408:6;7395:20;7433:94;7523:3;7515:6;7508:4;7500:6;7496:17;7433:94;:::i;:::-;7424:103;;7240:293;7163:370;;;;:::o;7539:684::-;7632:6;7640;7689:2;7677:9;7668:7;7664:23;7660:32;7657:119;;;7695:79;;:::i;:::-;7657:119;7815:1;7840:53;7885:7;7876:6;7865:9;7861:22;7840:53;:::i;:::-;7830:63;;7786:117;7970:2;7959:9;7955:18;7942:32;8001:18;7993:6;7990:30;7987:117;;;8023:79;;:::i;:::-;7987:117;8128:78;8198:7;8189:6;8178:9;8174:22;8128:78;:::i;:::-;8118:88;;7913:303;7539:684;;;;;:::o;8229:619::-;8306:6;8314;8322;8371:2;8359:9;8350:7;8346:23;8342:32;8339:119;;;8377:79;;:::i;:::-;8339:119;8497:1;8522:53;8567:7;8558:6;8547:9;8543:22;8522:53;:::i;:::-;8512:63;;8468:117;8624:2;8650:53;8695:7;8686:6;8675:9;8671:22;8650:53;:::i;:::-;8640:63;;8595:118;8752:2;8778:53;8823:7;8814:6;8803:9;8799:22;8778:53;:::i;:::-;8768:63;;8723:118;8229:619;;;;;:::o;8854:104::-;8919:6;8947:4;8937:14;;8854:104;;;:::o;8964:143::-;9061:11;9098:3;9083:18;;8964:143;;;;:::o;9113:98::-;9178:4;9201:3;9193:11;;9113:98;;;:::o;9217:108::-;9294:24;9312:5;9294:24;:::i;:::-;9289:3;9282:37;9217:108;;:::o;9331:179::-;9400:10;9421:46;9463:3;9455:6;9421:46;:::i;:::-;9499:4;9494:3;9490:14;9476:28;;9331:179;;;;:::o;9516:111::-;9584:4;9616;9611:3;9607:14;9599:22;;9516:111;;;:::o;9665:694::-;9801:52;9847:5;9801:52;:::i;:::-;9869:84;9946:6;9941:3;9869:84;:::i;:::-;9862:91;;9977:54;10025:5;9977:54;:::i;:::-;10054:7;10085:1;10070:282;10095:6;10092:1;10089:13;10070:282;;;10171:6;10165:13;10198:63;10257:3;10242:13;10198:63;:::i;:::-;10191:70;;10284:58;10335:6;10284:58;:::i;:::-;10274:68;;10130:222;10117:1;10114;10110:9;10105:14;;10070:282;;;10074:14;9777:582;;;9665:694;;:::o;10365:314::-;10504:4;10542:2;10531:9;10527:18;10519:26;;10555:117;10669:1;10658:9;10654:17;10645:6;10555:117;:::i;:::-;10365:314;;;;:::o;10685:329::-;10744:6;10793:2;10781:9;10772:7;10768:23;10764:32;10761:119;;;10799:79;;:::i;:::-;10761:119;10919:1;10944:53;10989:7;10980:6;10969:9;10965:22;10944:53;:::i;:::-;10934:63;;10890:117;10685:329;;;;:::o;11020:116::-;11090:21;11105:5;11090:21;:::i;:::-;11083:5;11080:32;11070:60;;11126:1;11123;11116:12;11070:60;11020:116;:::o;11142:133::-;11185:5;11223:6;11210:20;11201:29;;11239:30;11263:5;11239:30;:::i;:::-;11142:133;;;;:::o;11281:468::-;11346:6;11354;11403:2;11391:9;11382:7;11378:23;11374:32;11371:119;;;11409:79;;:::i;:::-;11371:119;11529:1;11554:53;11599:7;11590:6;11579:9;11575:22;11554:53;:::i;:::-;11544:63;;11500:117;11656:2;11682:50;11724:7;11715:6;11704:9;11700:22;11682:50;:::i;:::-;11672:60;;11627:115;11281:468;;;;;:::o;11755:180::-;11803:77;11800:1;11793:88;11900:4;11897:1;11890:15;11924:4;11921:1;11914:15;11941:115;12024:1;12017:5;12014:12;12004:46;;12030:18;;:::i;:::-;12004:46;11941:115;:::o;12062:131::-;12109:7;12138:5;12127:16;;12144:43;12181:5;12144:43;:::i;:::-;12062:131;;;:::o;12199:::-;12257:9;12290:34;12318:5;12290:34;:::i;:::-;12277:47;;12199:131;;;:::o;12336:147::-;12431:45;12470:5;12431:45;:::i;:::-;12426:3;12419:58;12336:147;;:::o;12489:238::-;12590:4;12628:2;12617:9;12613:18;12605:26;;12641:79;12717:1;12706:9;12702:17;12693:6;12641:79;:::i;:::-;12489:238;;;;:::o;12733:117::-;12842:1;12839;12832:12;12856:307;12917:4;13007:18;12999:6;12996:30;12993:56;;;13029:18;;:::i;:::-;12993:56;13067:29;13089:6;13067:29;:::i;:::-;13059:37;;13151:4;13145;13141:15;13133:23;;12856:307;;;:::o;13169:146::-;13266:6;13261:3;13256;13243:30;13307:1;13298:6;13293:3;13289:16;13282:27;13169:146;;;:::o;13321:423::-;13398:5;13423:65;13439:48;13480:6;13439:48;:::i;:::-;13423:65;:::i;:::-;13414:74;;13511:6;13504:5;13497:21;13549:4;13542:5;13538:16;13587:3;13578:6;13573:3;13569:16;13566:25;13563:112;;;13594:79;;:::i;:::-;13563:112;13684:54;13731:6;13726:3;13721;13684:54;:::i;:::-;13404:340;13321:423;;;;;:::o;13763:338::-;13818:5;13867:3;13860:4;13852:6;13848:17;13844:27;13834:122;;13875:79;;:::i;:::-;13834:122;13992:6;13979:20;14017:78;14091:3;14083:6;14076:4;14068:6;14064:17;14017:78;:::i;:::-;14008:87;;13824:277;13763:338;;;;:::o;14107:943::-;14202:6;14210;14218;14226;14275:3;14263:9;14254:7;14250:23;14246:33;14243:120;;;14282:79;;:::i;:::-;14243:120;14402:1;14427:53;14472:7;14463:6;14452:9;14448:22;14427:53;:::i;:::-;14417:63;;14373:117;14529:2;14555:53;14600:7;14591:6;14580:9;14576:22;14555:53;:::i;:::-;14545:63;;14500:118;14657:2;14683:53;14728:7;14719:6;14708:9;14704:22;14683:53;:::i;:::-;14673:63;;14628:118;14813:2;14802:9;14798:18;14785:32;14844:18;14836:6;14833:30;14830:117;;;14866:79;;:::i;:::-;14830:117;14971:62;15025:7;15016:6;15005:9;15001:22;14971:62;:::i;:::-;14961:72;;14756:287;14107:943;;;;;;;:::o;15056:474::-;15124:6;15132;15181:2;15169:9;15160:7;15156:23;15152:32;15149:119;;;15187:79;;:::i;:::-;15149:119;15307:1;15332:53;15377:7;15368:6;15357:9;15353:22;15332:53;:::i;:::-;15322:63;;15278:117;15434:2;15460:53;15505:7;15496:6;15485:9;15481:22;15460:53;:::i;:::-;15450:63;;15405:118;15056:474;;;;;:::o;15536:180::-;15584:77;15581:1;15574:88;15681:4;15678:1;15671:15;15705:4;15702:1;15695:15;15722:320;15766:6;15803:1;15797:4;15793:12;15783:22;;15850:1;15844:4;15840:12;15871:18;15861:81;;15927:4;15919:6;15915:17;15905:27;;15861:81;15989:2;15981:6;15978:14;15958:18;15955:38;15952:84;;16008:18;;:::i;:::-;15952:84;15773:269;15722:320;;;:::o;16048:231::-;16188:34;16184:1;16176:6;16172:14;16165:58;16257:14;16252:2;16244:6;16240:15;16233:39;16048:231;:::o;16285:366::-;16427:3;16448:67;16512:2;16507:3;16448:67;:::i;:::-;16441:74;;16524:93;16613:3;16524:93;:::i;:::-;16642:2;16637:3;16633:12;16626:19;;16285:366;;;:::o;16657:419::-;16823:4;16861:2;16850:9;16846:18;16838:26;;16910:9;16904:4;16900:20;16896:1;16885:9;16881:17;16874:47;16938:131;17064:4;16938:131;:::i;:::-;16930:139;;16657:419;;;:::o;17082:220::-;17222:34;17218:1;17210:6;17206:14;17199:58;17291:3;17286:2;17278:6;17274:15;17267:28;17082:220;:::o;17308:366::-;17450:3;17471:67;17535:2;17530:3;17471:67;:::i;:::-;17464:74;;17547:93;17636:3;17547:93;:::i;:::-;17665:2;17660:3;17656:12;17649:19;;17308:366;;;:::o;17680:419::-;17846:4;17884:2;17873:9;17869:18;17861:26;;17933:9;17927:4;17923:20;17919:1;17908:9;17904:17;17897:47;17961:131;18087:4;17961:131;:::i;:::-;17953:139;;17680:419;;;:::o;18105:243::-;18245:34;18241:1;18233:6;18229:14;18222:58;18314:26;18309:2;18301:6;18297:15;18290:51;18105:243;:::o;18354:366::-;18496:3;18517:67;18581:2;18576:3;18517:67;:::i;:::-;18510:74;;18593:93;18682:3;18593:93;:::i;:::-;18711:2;18706:3;18702:12;18695:19;;18354:366;;;:::o;18726:419::-;18892:4;18930:2;18919:9;18915:18;18907:26;;18979:9;18973:4;18969:20;18965:1;18954:9;18950:17;18943:47;19007:131;19133:4;19007:131;:::i;:::-;18999:139;;18726:419;;;:::o;19151:332::-;19272:4;19310:2;19299:9;19295:18;19287:26;;19323:71;19391:1;19380:9;19376:17;19367:6;19323:71;:::i;:::-;19404:72;19472:2;19461:9;19457:18;19448:6;19404:72;:::i;:::-;19151:332;;;;;:::o;19489:236::-;19629:34;19625:1;19617:6;19613:14;19606:58;19698:19;19693:2;19685:6;19681:15;19674:44;19489:236;:::o;19731:366::-;19873:3;19894:67;19958:2;19953:3;19894:67;:::i;:::-;19887:74;;19970:93;20059:3;19970:93;:::i;:::-;20088:2;20083:3;20079:12;20072:19;;19731:366;;;:::o;20103:419::-;20269:4;20307:2;20296:9;20292:18;20284:26;;20356:9;20350:4;20346:20;20342:1;20331:9;20327:17;20320:47;20384:131;20510:4;20384:131;:::i;:::-;20376:139;;20103:419;;;:::o;20528:180::-;20576:77;20573:1;20566:88;20673:4;20670:1;20663:15;20697:4;20694:1;20687:15;20714:147;20815:11;20852:3;20837:18;;20714:147;;;;:::o;20867:114::-;;:::o;20987:398::-;21146:3;21167:83;21248:1;21243:3;21167:83;:::i;:::-;21160:90;;21259:93;21348:3;21259:93;:::i;:::-;21377:1;21372:3;21368:11;21361:18;;20987:398;;;:::o;21391:379::-;21575:3;21597:147;21740:3;21597:147;:::i;:::-;21590:154;;21761:3;21754:10;;21391:379;;;:::o;21776:228::-;21916:34;21912:1;21904:6;21900:14;21893:58;21985:11;21980:2;21972:6;21968:15;21961:36;21776:228;:::o;22010:366::-;22152:3;22173:67;22237:2;22232:3;22173:67;:::i;:::-;22166:74;;22249:93;22338:3;22249:93;:::i;:::-;22367:2;22362:3;22358:12;22351:19;;22010:366;;;:::o;22382:419::-;22548:4;22586:2;22575:9;22571:18;22563:26;;22635:9;22629:4;22625:20;22621:1;22610:9;22606:17;22599:47;22663:131;22789:4;22663:131;:::i;:::-;22655:139;;22382:419;;;:::o;22807:229::-;22947:34;22943:1;22935:6;22931:14;22924:58;23016:12;23011:2;23003:6;22999:15;22992:37;22807:229;:::o;23042:366::-;23184:3;23205:67;23269:2;23264:3;23205:67;:::i;:::-;23198:74;;23281:93;23370:3;23281:93;:::i;:::-;23399:2;23394:3;23390:12;23383:19;;23042:366;;;:::o;23414:419::-;23580:4;23618:2;23607:9;23603:18;23595:26;;23667:9;23661:4;23657:20;23653:1;23642:9;23638:17;23631:47;23695:131;23821:4;23695:131;:::i;:::-;23687:139;;23414:419;;;:::o;23839:172::-;23979:24;23975:1;23967:6;23963:14;23956:48;23839:172;:::o;24017:366::-;24159:3;24180:67;24244:2;24239:3;24180:67;:::i;:::-;24173:74;;24256:93;24345:3;24256:93;:::i;:::-;24374:2;24369:3;24365:12;24358:19;;24017:366;;;:::o;24389:419::-;24555:4;24593:2;24582:9;24578:18;24570:26;;24642:9;24636:4;24632:20;24628:1;24617:9;24613:17;24606:47;24670:131;24796:4;24670:131;:::i;:::-;24662:139;;24389:419;;;:::o;24814:175::-;24954:27;24950:1;24942:6;24938:14;24931:51;24814:175;:::o;24995:366::-;25137:3;25158:67;25222:2;25217:3;25158:67;:::i;:::-;25151:74;;25234:93;25323:3;25234:93;:::i;:::-;25352:2;25347:3;25343:12;25336:19;;24995:366;;;:::o;25367:419::-;25533:4;25571:2;25560:9;25556:18;25548:26;;25620:9;25614:4;25610:20;25606:1;25595:9;25591:17;25584:47;25648:131;25774:4;25648:131;:::i;:::-;25640:139;;25367:419;;;:::o;25792:180::-;25840:77;25837:1;25830:88;25937:4;25934:1;25927:15;25961:4;25958:1;25951:15;25978:191;26018:3;26037:20;26055:1;26037:20;:::i;:::-;26032:25;;26071:20;26089:1;26071:20;:::i;:::-;26066:25;;26114:1;26111;26107:9;26100:16;;26135:3;26132:1;26129:10;26126:36;;;26142:18;;:::i;:::-;26126:36;25978:191;;;;:::o;26175:233::-;26214:3;26237:24;26255:5;26237:24;:::i;:::-;26228:33;;26283:66;26276:5;26273:77;26270:103;;26353:18;;:::i;:::-;26270:103;26400:1;26393:5;26389:13;26382:20;;26175:233;;;:::o;26414:77::-;26451:7;26480:5;26469:16;;26414:77;;;:::o;26497:118::-;26584:24;26602:5;26584:24;:::i;:::-;26579:3;26572:37;26497:118;;:::o;26621:101::-;26657:7;26697:18;26690:5;26686:30;26675:41;;26621:101;;;:::o;26728:115::-;26813:23;26830:5;26813:23;:::i;:::-;26808:3;26801:36;26728:115;;:::o;26849:89::-;26885:7;26925:6;26918:5;26914:18;26903:29;;26849:89;;;:::o;26944:115::-;27029:23;27046:5;27029:23;:::i;:::-;27024:3;27017:36;26944:115;;:::o;27065:93::-;27101:7;27141:10;27134:5;27130:22;27119:33;;27065:93;;;:::o;27164:115::-;27249:23;27266:5;27249:23;:::i;:::-;27244:3;27237:36;27164:115;;:::o;27285:648::-;27482:4;27520:3;27509:9;27505:19;27497:27;;27534:71;27602:1;27591:9;27587:17;27578:6;27534:71;:::i;:::-;27615:70;27681:2;27670:9;27666:18;27657:6;27615:70;:::i;:::-;27695;27761:2;27750:9;27746:18;27737:6;27695:70;:::i;:::-;27775;27841:2;27830:9;27826:18;27817:6;27775:70;:::i;:::-;27855:71;27921:3;27910:9;27906:19;27897:6;27855:71;:::i;:::-;27285:648;;;;;;;;:::o;27939:143::-;27996:5;28027:6;28021:13;28012:22;;28043:33;28070:5;28043:33;:::i;:::-;27939:143;;;;:::o;28088:351::-;28158:6;28207:2;28195:9;28186:7;28182:23;28178:32;28175:119;;;28213:79;;:::i;:::-;28175:119;28333:1;28358:64;28414:7;28405:6;28394:9;28390:22;28358:64;:::i;:::-;28348:74;;28304:128;28088:351;;;;:::o;28445:236::-;28585:34;28581:1;28573:6;28569:14;28562:58;28654:19;28649:2;28641:6;28637:15;28630:44;28445:236;:::o;28687:366::-;28829:3;28850:67;28914:2;28909:3;28850:67;:::i;:::-;28843:74;;28926:93;29015:3;28926:93;:::i;:::-;29044:2;29039:3;29035:12;29028:19;;28687:366;;;:::o;29059:419::-;29225:4;29263:2;29252:9;29248:18;29240:26;;29312:9;29306:4;29302:20;29298:1;29287:9;29283:17;29276:47;29340:131;29466:4;29340:131;:::i;:::-;29332:139;;29059:419;;;:::o;29484:148::-;29586:11;29623:3;29608:18;;29484:148;;;;:::o;29638:390::-;29744:3;29772:39;29805:5;29772:39;:::i;:::-;29827:89;29909:6;29904:3;29827:89;:::i;:::-;29820:96;;29925:65;29983:6;29978:3;29971:4;29964:5;29960:16;29925:65;:::i;:::-;30015:6;30010:3;30006:16;29999:23;;29748:280;29638:390;;;;:::o;30034:435::-;30214:3;30236:95;30327:3;30318:6;30236:95;:::i;:::-;30229:102;;30348:95;30439:3;30430:6;30348:95;:::i;:::-;30341:102;;30460:3;30453:10;;30034:435;;;;;:::o;30475:180::-;30523:77;30520:1;30513:88;30620:4;30617:1;30610:15;30644:4;30641:1;30634:15;30661:176;30693:1;30710:20;30728:1;30710:20;:::i;:::-;30705:25;;30744:20;30762:1;30744:20;:::i;:::-;30739:25;;30783:1;30773:35;;30788:18;;:::i;:::-;30773:35;30829:1;30826;30822:9;30817:14;;30661:176;;;;:::o;30843:348::-;30972:4;31010:2;30999:9;30995:18;30987:26;;31023:79;31099:1;31088:9;31084:17;31075:6;31023:79;:::i;:::-;31112:72;31180:2;31169:9;31165:18;31156:6;31112:72;:::i;:::-;30843:348;;;;;:::o;31197:231::-;31337:34;31333:1;31325:6;31321:14;31314:58;31406:14;31401:2;31393:6;31389:15;31382:39;31197:231;:::o;31434:366::-;31576:3;31597:67;31661:2;31656:3;31597:67;:::i;:::-;31590:74;;31673:93;31762:3;31673:93;:::i;:::-;31791:2;31786:3;31782:12;31775:19;;31434:366;;;:::o;31806:419::-;31972:4;32010:2;31999:9;31995:18;31987:26;;32059:9;32053:4;32049:20;32045:1;32034:9;32030:17;32023:47;32087:131;32213:4;32087:131;:::i;:::-;32079:139;;31806:419;;;:::o;32231:228::-;32371:34;32367:1;32359:6;32355:14;32348:58;32440:11;32435:2;32427:6;32423:15;32416:36;32231:228;:::o;32465:366::-;32607:3;32628:67;32692:2;32687:3;32628:67;:::i;:::-;32621:74;;32704:93;32793:3;32704:93;:::i;:::-;32822:2;32817:3;32813:12;32806:19;;32465:366;;;:::o;32837:419::-;33003:4;33041:2;33030:9;33026:18;33018:26;;33090:9;33084:4;33080:20;33076:1;33065:9;33061:17;33054:47;33118:131;33244:4;33118:131;:::i;:::-;33110:139;;32837:419;;;:::o;33262:223::-;33402:34;33398:1;33390:6;33386:14;33379:58;33471:6;33466:2;33458:6;33454:15;33447:31;33262:223;:::o;33491:366::-;33633:3;33654:67;33718:2;33713:3;33654:67;:::i;:::-;33647:74;;33730:93;33819:3;33730:93;:::i;:::-;33848:2;33843:3;33839:12;33832:19;;33491:366;;;:::o;33863:419::-;34029:4;34067:2;34056:9;34052:18;34044:26;;34116:9;34110:4;34106:20;34102:1;34091:9;34087:17;34080:47;34144:131;34270:4;34144:131;:::i;:::-;34136:139;;33863:419;;;:::o;34288:194::-;34328:4;34348:20;34366:1;34348:20;:::i;:::-;34343:25;;34382:20;34400:1;34382:20;:::i;:::-;34377:25;;34426:1;34423;34419:9;34411:17;;34450:1;34444:4;34441:11;34438:37;;;34455:18;;:::i;:::-;34438:37;34288:194;;;;:::o;34488:172::-;34628:24;34624:1;34616:6;34612:14;34605:48;34488:172;:::o;34666:366::-;34808:3;34829:67;34893:2;34888:3;34829:67;:::i;:::-;34822:74;;34905:93;34994:3;34905:93;:::i;:::-;35023:2;35018:3;35014:12;35007:19;;34666:366;;;:::o;35038:419::-;35204:4;35242:2;35231:9;35227:18;35219:26;;35291:9;35285:4;35281:20;35277:1;35266:9;35262:17;35255:47;35319:131;35445:4;35319:131;:::i;:::-;35311:139;;35038:419;;;:::o;35463:237::-;35603:34;35599:1;35591:6;35587:14;35580:58;35672:20;35667:2;35659:6;35655:15;35648:45;35463:237;:::o;35706:366::-;35848:3;35869:67;35933:2;35928:3;35869:67;:::i;:::-;35862:74;;35945:93;36034:3;35945:93;:::i;:::-;36063:2;36058:3;36054:12;36047:19;;35706:366;;;:::o;36078:419::-;36244:4;36282:2;36271:9;36267:18;36259:26;;36331:9;36325:4;36321:20;36317:1;36306:9;36302:17;36295:47;36359:131;36485:4;36359:131;:::i;:::-;36351:139;;36078:419;;;:::o;36503:234::-;36643:34;36639:1;36631:6;36627:14;36620:58;36712:17;36707:2;36699:6;36695:15;36688:42;36503:234;:::o;36743:366::-;36885:3;36906:67;36970:2;36965:3;36906:67;:::i;:::-;36899:74;;36982:93;37071:3;36982:93;:::i;:::-;37100:2;37095:3;37091:12;37084:19;;36743:366;;;:::o;37115:419::-;37281:4;37319:2;37308:9;37304:18;37296:26;;37368:9;37362:4;37358:20;37354:1;37343:9;37339:17;37332:47;37396:131;37522:4;37396:131;:::i;:::-;37388:139;;37115:419;;;:::o;37540:173::-;37680:25;37676:1;37668:6;37664:14;37657:49;37540:173;:::o;37719:366::-;37861:3;37882:67;37946:2;37941:3;37882:67;:::i;:::-;37875:74;;37958:93;38047:3;37958:93;:::i;:::-;38076:2;38071:3;38067:12;38060:19;;37719:366;;;:::o;38091:419::-;38257:4;38295:2;38284:9;38280:18;38272:26;;38344:9;38338:4;38334:20;38330:1;38319:9;38315:17;38308:47;38372:131;38498:4;38372:131;:::i;:::-;38364:139;;38091:419;;;:::o;38516:233::-;38656:34;38652:1;38644:6;38640:14;38633:58;38725:16;38720:2;38712:6;38708:15;38701:41;38516:233;:::o;38755:366::-;38897:3;38918:67;38982:2;38977:3;38918:67;:::i;:::-;38911:74;;38994:93;39083:3;38994:93;:::i;:::-;39112:2;39107:3;39103:12;39096:19;;38755:366;;;:::o;39127:419::-;39293:4;39331:2;39320:9;39316:18;39308:26;;39380:9;39374:4;39370:20;39366:1;39355:9;39351:17;39344:47;39408:131;39534:4;39408:131;:::i;:::-;39400:139;;39127:419;;;:::o;39552:141::-;39601:4;39624:3;39616:11;;39647:3;39644:1;39637:14;39681:4;39678:1;39668:18;39660:26;;39552:141;;;:::o;39699:93::-;39736:6;39783:2;39778;39771:5;39767:14;39763:23;39753:33;;39699:93;;;:::o;39798:107::-;39842:8;39892:5;39886:4;39882:16;39861:37;;39798:107;;;;:::o;39911:393::-;39980:6;40030:1;40018:10;40014:18;40053:97;40083:66;40072:9;40053:97;:::i;:::-;40171:39;40201:8;40190:9;40171:39;:::i;:::-;40159:51;;40243:4;40239:9;40232:5;40228:21;40219:30;;40292:4;40282:8;40278:19;40271:5;40268:30;40258:40;;39987:317;;39911:393;;;;;:::o;40310:60::-;40338:3;40359:5;40352:12;;40310:60;;;:::o;40376:142::-;40426:9;40459:53;40477:34;40486:24;40504:5;40486:24;:::i;:::-;40477:34;:::i;:::-;40459:53;:::i;:::-;40446:66;;40376:142;;;:::o;40524:75::-;40567:3;40588:5;40581:12;;40524:75;;;:::o;40605:269::-;40715:39;40746:7;40715:39;:::i;:::-;40776:91;40825:41;40849:16;40825:41;:::i;:::-;40817:6;40810:4;40804:11;40776:91;:::i;:::-;40770:4;40763:105;40681:193;40605:269;;;:::o;40880:73::-;40925:3;40880:73;:::o;40959:189::-;41036:32;;:::i;:::-;41077:65;41135:6;41127;41121:4;41077:65;:::i;:::-;41012:136;40959:189;;:::o;41154:186::-;41214:120;41231:3;41224:5;41221:14;41214:120;;;41285:39;41322:1;41315:5;41285:39;:::i;:::-;41258:1;41251:5;41247:13;41238:22;;41214:120;;;41154:186;;:::o;41346:543::-;41447:2;41442:3;41439:11;41436:446;;;41481:38;41513:5;41481:38;:::i;:::-;41565:29;41583:10;41565:29;:::i;:::-;41555:8;41551:44;41748:2;41736:10;41733:18;41730:49;;;41769:8;41754:23;;41730:49;41792:80;41848:22;41866:3;41848:22;:::i;:::-;41838:8;41834:37;41821:11;41792:80;:::i;:::-;41451:431;;41436:446;41346:543;;;:::o;41895:117::-;41949:8;41999:5;41993:4;41989:16;41968:37;;41895:117;;;;:::o;42018:169::-;42062:6;42095:51;42143:1;42139:6;42131:5;42128:1;42124:13;42095:51;:::i;:::-;42091:56;42176:4;42170;42166:15;42156:25;;42069:118;42018:169;;;;:::o;42192:295::-;42268:4;42414:29;42439:3;42433:4;42414:29;:::i;:::-;42406:37;;42476:3;42473:1;42469:11;42463:4;42460:21;42452:29;;42192:295;;;;:::o;42492:1395::-;42609:37;42642:3;42609:37;:::i;:::-;42711:18;42703:6;42700:30;42697:56;;;42733:18;;:::i;:::-;42697:56;42777:38;42809:4;42803:11;42777:38;:::i;:::-;42862:67;42922:6;42914;42908:4;42862:67;:::i;:::-;42956:1;42980:4;42967:17;;43012:2;43004:6;43001:14;43029:1;43024:618;;;;43686:1;43703:6;43700:77;;;43752:9;43747:3;43743:19;43737:26;43728:35;;43700:77;43803:67;43863:6;43856:5;43803:67;:::i;:::-;43797:4;43790:81;43659:222;42994:887;;43024:618;43076:4;43072:9;43064:6;43060:22;43110:37;43142:4;43110:37;:::i;:::-;43169:1;43183:208;43197:7;43194:1;43191:14;43183:208;;;43276:9;43271:3;43267:19;43261:26;43253:6;43246:42;43327:1;43319:6;43315:14;43305:24;;43374:2;43363:9;43359:18;43346:31;;43220:4;43217:1;43213:12;43208:17;;43183:208;;;43419:6;43410:7;43407:19;43404:179;;;43477:9;43472:3;43468:19;43462:26;43520:48;43562:4;43554:6;43550:17;43539:9;43520:48;:::i;:::-;43512:6;43505:64;43427:156;43404:179;43629:1;43625;43617:6;43613:14;43609:22;43603:4;43596:36;43031:611;;;42994:887;;42584:1303;;;42492:1395;;:::o;43893:98::-;43944:6;43978:5;43972:12;43962:22;;43893:98;;;:::o;43997:168::-;44080:11;44114:6;44109:3;44102:19;44154:4;44149:3;44145:14;44130:29;;43997:168;;;;:::o;44171:373::-;44257:3;44285:38;44317:5;44285:38;:::i;:::-;44339:70;44402:6;44397:3;44339:70;:::i;:::-;44332:77;;44418:65;44476:6;44471:3;44464:4;44457:5;44453:16;44418:65;:::i;:::-;44508:29;44530:6;44508:29;:::i;:::-;44503:3;44499:39;44492:46;;44261:283;44171:373;;;;:::o;44550:640::-;44745:4;44783:3;44772:9;44768:19;44760:27;;44797:71;44865:1;44854:9;44850:17;44841:6;44797:71;:::i;:::-;44878:72;44946:2;44935:9;44931:18;44922:6;44878:72;:::i;:::-;44960;45028:2;45017:9;45013:18;45004:6;44960:72;:::i;:::-;45079:9;45073:4;45069:20;45064:2;45053:9;45049:18;45042:48;45107:76;45178:4;45169:6;45107:76;:::i;:::-;45099:84;;44550:640;;;;;;;:::o;45196:141::-;45252:5;45283:6;45277:13;45268:22;;45299:32;45325:5;45299:32;:::i;:::-;45196:141;;;;:::o;45343:349::-;45412:6;45461:2;45449:9;45440:7;45436:23;45432:32;45429:119;;;45467:79;;:::i;:::-;45429:119;45587:1;45612:63;45667:7;45658:6;45647:9;45643:22;45612:63;:::i;:::-;45602:73;;45558:127;45343:349;;;;:::o;45698:185::-;45738:1;45755:20;45773:1;45755:20;:::i;:::-;45750:25;;45789:20;45807:1;45789:20;:::i;:::-;45784:25;;45828:1;45818:35;;45833:18;;:::i;:::-;45818:35;45875:1;45872;45868:9;45863:14;;45698:185;;;;:::o;45889:182::-;46029:34;46025:1;46017:6;46013:14;46006:58;45889:182;:::o;46077:366::-;46219:3;46240:67;46304:2;46299:3;46240:67;:::i;:::-;46233:74;;46316:93;46405:3;46316:93;:::i;:::-;46434:2;46429:3;46425:12;46418:19;;46077:366;;;:::o;46449:419::-;46615:4;46653:2;46642:9;46638:18;46630:26;;46702:9;46696:4;46692:20;46688:1;46677:9;46673:17;46666:47;46730:131;46856:4;46730:131;:::i;:::-;46722:139;;46449:419;;;:::o;46874:178::-;47014:30;47010:1;47002:6;46998:14;46991:54;46874:178;:::o;47058:366::-;47200:3;47221:67;47285:2;47280:3;47221:67;:::i;:::-;47214:74;;47297:93;47386:3;47297:93;:::i;:::-;47415:2;47410:3;47406:12;47399:19;;47058:366;;;:::o;47430:419::-;47596:4;47634:2;47623:9;47619:18;47611:26;;47683:9;47677:4;47673:20;47669:1;47658:9;47654:17;47647:47;47711:131;47837:4;47711:131;:::i;:::-;47703:139;;47430:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"3268000","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54585","approve(address,uint256)":"infinite","balanceOf(address)":"2899","getApproved(uint256)":"5228","getBreedFromModdedRng(uint256)":"infinite","getChanceArray()":"infinite","getDogTokenUris(uint256)":"infinite","getMintFee()":"infinite","getTokenCounter()":"2548","isApprovedForAll(address,address)":"infinite","name()":"infinite","owner()":"2611","ownerOf(uint256)":"3063","rawFulfillRandomWords(uint256,uint256[])":"infinite","requestNft()":"infinite","s_requestIdToSender(uint256)":"2884","s_tokenCounter()":"2541","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"30770","withdraw()":"infinite"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getBreedFromModdedRng(uint256)":"a51cccf3","getChanceArray()":"5dacf5f4","getDogTokenUris(uint256)":"3af25975","getMintFee()":"7a5caab3","getTokenCounter()":"6e02007d","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","requestNft()":"aa152491","s_requestIdToSender(uint256)":"a36f573b","s_tokenCounter()":"0b21a83b","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"string[3]\",\"name\":\"dogTokenUris\",\"type\":\"string[3]\"},{\"internalType\":\"uint256\",\"name\":\"mintFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RandomIpfsNft__NeedMoreETHSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RandomIpfsNft__RangeOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RandomIpfsNft__TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum RandomIpfsNft.Breed\",\"name\":\"dogBreed\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"NftMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"NftRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moddedRng\",\"type\":\"uint256\"}],\"name\":\"getBreedFromModdedRng\",\"outputs\":[{\"internalType\":\"enum RandomIpfsNft.Breed\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChanceArray\",\"outputs\":[{\"internalType\":\"uint256[3]\",\"name\":\"\",\"type\":\"uint256[3]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDogTokenUris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestNft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_requestIdToSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_tokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RandomIpfsNft.sol\":\"RandomIpfsNft\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IOwnable.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /**\\n   * @notice Allows an owner to begin transferring ownership to a new address,\\n   * pending.\\n   */\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /**\\n   * @notice Allows an ownership transfer to be completed by the recipient.\\n   */\\n  function acceptOwnership() external override {\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @notice Get the current owner\\n   */\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /**\\n   * @notice validate, transfer ownership, and emit relevant events\\n   */\\n  function _transferOwnership(address to) private {\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /**\\n   * @notice validate access\\n   */\\n  function _validateOwnership() internal view {\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /**\\n   * @notice Reverts if called by anyone other than the contract owner.\\n   */\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overriden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC721: approve to caller\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, _data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x7d2b8ba4b256bfcac347991b75242f9bc37f499c5236af50cf09d0b35943dc0c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI query for nonexistent token\\\");\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x188d038a65a945481cc13fe30db334472dfbed61f7959d4478d05feb6303b1ea\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"contracts/RandomIpfsNft.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\\\";\\n\\nerror RandomIpfsNft__RangeOutOfBounds();\\nerror RandomIpfsNft__NeedMoreETHSent();\\nerror RandomIpfsNft__TransferFailed();\\n\\ncontract RandomIpfsNft is VRFConsumerBaseV2, ERC721URIStorage, ConfirmedOwner {\\n    //type declarations\\n    enum Breed {\\n        PUG,\\n        SHIBA_UNU,\\n        ST_BERNARD\\n    }\\n\\n    //Chainlink VRF variables\\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinatorV2;\\n    uint64 private immutable i_subscriptionId;\\n    bytes32 private immutable i_gasLane;\\n    uint32 private immutable i_callbackGasLimit;\\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\\n    uint32 private constant NUM_WORDS = 1;\\n\\n    //VRF helpers\\n    mapping(uint256 => address) public s_requestIdToSender;\\n\\n    //NFT variables\\n    uint256 public s_tokenCounter;\\n    uint256 internal constant MAX_CHANCE_VALUE = 100;\\n    string[] internal s_dogTokenUris;\\n    uint256 immutable i_mintFee;\\n\\n    //Events\\n    event NftRequested(uint256 indexed requestId, address requester);\\n    event NftMinted(Breed dogBreed, address minter);\\n\\n    constructor(\\n        address vrfCoordinatorV2,\\n        uint64 subscriptionId,\\n        bytes32 gasLane,\\n        uint32 callbackGasLimit,\\n        string[3] memory dogTokenUris,\\n        uint256 mintFee\\n    )\\n        VRFConsumerBaseV2(vrfCoordinatorV2)\\n        ERC721(\\\"Random IPFS NFT\\\", \\\"RIN\\\")\\n        ConfirmedOwner(msg.sender)\\n    {\\n        i_vrfCoordinatorV2 = VRFCoordinatorV2Interface(vrfCoordinatorV2);\\n        i_subscriptionId = subscriptionId;\\n        i_gasLane = gasLane;\\n        i_callbackGasLimit = callbackGasLimit;\\n        s_dogTokenUris = dogTokenUris;\\n        i_mintFee = mintFee;\\n    }\\n\\n    function requestNft() public payable returns (uint256 requestId) {\\n        if (msg.value < i_mintFee) {\\n            revert RandomIpfsNft__NeedMoreETHSent();\\n        }\\n        requestId = i_vrfCoordinatorV2.requestRandomWords(\\n            i_gasLane,\\n            i_subscriptionId,\\n            REQUEST_CONFIRMATIONS,\\n            i_callbackGasLimit,\\n            NUM_WORDS\\n        );\\n        s_requestIdToSender[requestId] = msg.sender;\\n        emit NftRequested(requestId, msg.sender);\\n    }\\n\\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\\n        address dogOwner = s_requestIdToSender[requestId];\\n        uint256 newTokenId = s_tokenCounter;\\n        uint256 moddedRng = randomWords[0] % MAX_CHANCE_VALUE;\\n        Breed dogBreed = getBreedFromModdedRng(moddedRng);\\n        _safeMint(dogOwner, newTokenId);\\n        _setTokenURI(newTokenId, s_dogTokenUris[uint256(dogBreed)]);\\n        s_tokenCounter++;\\n        emit NftMinted(dogBreed, msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        uint256 amount = address(this).balance;\\n        (bool success, ) = payable(msg.sender).call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert RandomIpfsNft__TransferFailed();\\n        }\\n    }\\n\\n    function getBreedFromModdedRng(uint256 moddedRng) public pure returns (Breed) {\\n        uint256 cumulativeSum = 0;\\n        uint256[3] memory chanceArray = getChanceArray();\\n        for (uint256 i = 0; i < chanceArray.length; i++) {\\n            if (moddedRng >= cumulativeSum && moddedRng < cumulativeSum + chanceArray[i]) {\\n                return Breed(i);\\n            }\\n            cumulativeSum = cumulativeSum + chanceArray[i];\\n        }\\n        revert RandomIpfsNft__RangeOutOfBounds();\\n    }\\n\\n    function getChanceArray() public pure returns (uint256[3] memory) {\\n        return [10, 30, MAX_CHANCE_VALUE];\\n    }\\n\\n    function getMintFee() public view returns (uint256) {\\n        return i_mintFee;\\n    }\\n\\n    function getDogTokenUris(uint256 index) public view returns (string memory) {\\n        return s_dogTokenUris[index];\\n    }\\n\\n    function getTokenCounter() public view returns (uint256) {\\n        return s_tokenCounter;\\n    }\\n}\\n\",\"keccak256\":\"0xc41d565319f225f435bc54f1960604b12ffb06a8bcf4b176e97e38debf3601ba\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":377,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":379,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":383,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":387,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":391,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":397,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1314,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":123,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_owner","offset":0,"slot":"7","type":"t_address"},{"astId":125,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_pendingOwner","offset":0,"slot":"8","type":"t_address"},{"astId":2055,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_requestIdToSender","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_address)"},{"astId":2057,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_tokenCounter","offset":0,"slot":"10","type":"t_uint256"},{"astId":2063,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_dogTokenUris","offset":0,"slot":"11","type":"t_array(t_string_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address, pending."}},"version":1}}}}}}